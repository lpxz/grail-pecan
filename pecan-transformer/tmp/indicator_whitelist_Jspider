<net.javacoding.jspider.core.impl.SpiderImpl: void crawl(net.javacoding.jspider.core.SpiderContext)>
<net.javacoding.jspider.core.impl.AgentImpl: void start()>
<net.javacoding.jspider.core.impl.AgentImpl: void flagDone(net.javacoding.jspider.core.task.WorkerTask)>
<net.javacoding.jspider.core.impl.AgentImpl: net.javacoding.jspider.core.task.WorkerTask getThinkerTask()>
<net.javacoding.jspider.core.impl.AgentImpl: net.javacoding.jspider.core.task.WorkerTask getSpiderTask()>
<net.javacoding.jspider.core.impl.AgentImpl: void scheduleForSpidering(java.net.URL)>
<net.javacoding.jspider.core.impl.AgentImpl: void scheduleForParsing(java.net.URL)>
<net.javacoding.jspider.core.impl.AgentImpl: void registerEvent(java.net.URL,net.javacoding.jspider.core.event.CoreEvent)>
<net.javacoding.jspider.core.impl.SpiderContextImpl: void setCookies(net.javacoding.jspider.api.model.Site,net.javacoding.jspider.api.model.Cookie[])>
<net.javacoding.jspider.core.util.config.properties.PropertiesFilePropertySet: net.javacoding.jspider.core.util.config.PropertySet getInstance(java.lang.String,java.lang.String,java.lang.String)>
<net.javacoding.jspider.core.util.config.ConfigurationFactory: net.javacoding.jspider.core.util.config.JSpiderConfiguration getConfiguration()>
<net.javacoding.jspider.core.util.config.ConfigurationFactory: net.javacoding.jspider.core.util.config.JSpiderConfiguration getConfiguration(java.lang.String)>
<net.javacoding.jspider.core.util.config.ConfigurationFactory: net.javacoding.jspider.core.util.config.JSpiderConfiguration setConfiguration(net.javacoding.jspider.core.util.config.JSpiderConfiguration)>
<net.javacoding.jspider.core.util.config.ConfigurationFactory: void cleanConfiguration()>
<net.javacoding.jspider.core.threading.WorkerThreadPoolTest: void testDispatcherThread()>
<net.javacoding.jspider.core.threading.WorkerThreadPoolTest: void doTestThreadedCountingDispatched(int)>
<net.javacoding.jspider.core.threading.WorkerThreadPool: void assign(net.javacoding.jspider.core.task.WorkerTask)>
<net.javacoding.jspider.core.threading.WorkerThread: void assign(net.javacoding.jspider.core.task.WorkerTask)>
<net.javacoding.jspider.core.threading.WorkerThread: void stopRunning()>
<net.javacoding.jspider.core.threading.WorkerThread: void run()>
<net.javacoding.jspider.core.threading.DispatcherThread: void run()>
<net.javacoding.jspider.core.task.impl.SchedulerImpl: void schedule(net.javacoding.jspider.core.task.WorkerTask)>
<net.javacoding.jspider.core.task.impl.SchedulerImpl: void flagDone(net.javacoding.jspider.core.task.WorkerTask)>
<net.javacoding.jspider.core.task.impl.SchedulerImpl: net.javacoding.jspider.core.task.WorkerTask getThinkerTask()>
<net.javacoding.jspider.core.task.impl.SchedulerImpl: net.javacoding.jspider.core.task.WorkerTask getFethTask()>
<net.javacoding.jspider.core.task.impl.SchedulerImpl: boolean allTasksDone()>
<net.javacoding.jspider.core.task.work.DecideOnSpideringTask: void execute()>
<net.javacoding.jspider.core.rule.RuleFactory: net.javacoding.jspider.core.rule.Ruleset createGeneralSpiderRules()>
<net.javacoding.jspider.core.rule.RuleFactory: net.javacoding.jspider.core.rule.Ruleset createGeneralParserRules()>
<net.javacoding.jspider.core.storage.memory.ResourceDAOImpl: void setSpidered(java.net.URL,net.javacoding.jspider.core.event.impl.URLSpideredOkEvent)>
<net.javacoding.jspider.core.storage.memory.ResourceDAOImpl: void setIgnoredForParsing(java.net.URL)>
<net.javacoding.jspider.core.storage.memory.ResourceDAOImpl: void setIgnoredForFetching(java.net.URL,net.javacoding.jspider.core.event.impl.URLFoundEvent)>
<net.javacoding.jspider.core.storage.memory.ResourceDAOImpl: void setForbidden(java.net.URL,net.javacoding.jspider.core.event.impl.URLFoundEvent)>
<net.javacoding.jspider.core.storage.memory.ResourceDAOImpl: void setError(java.net.URL,net.javacoding.jspider.core.event.impl.ResourceParsedErrorEvent)>
<net.javacoding.jspider.core.storage.memory.ResourceDAOImpl: void setParsed(java.net.URL,net.javacoding.jspider.core.event.impl.ResourceParsedOkEvent)>
<net.javacoding.jspider.core.storage.memory.ResourceDAOImpl: void setError(java.net.URL,net.javacoding.jspider.core.event.impl.URLSpideredErrorEvent)>
<net.javacoding.jspider.core.storage.jdbc.ResourceDAOImpl: void setSpidered(java.net.URL,net.javacoding.jspider.core.event.impl.URLSpideredOkEvent)>
<net.javacoding.jspider.core.storage.jdbc.ResourceDAOImpl: void setIgnoredForParsing(java.net.URL)>
<net.javacoding.jspider.core.storage.jdbc.ResourceDAOImpl: void setIgnoredForFetching(java.net.URL,net.javacoding.jspider.core.event.impl.URLFoundEvent)>
<net.javacoding.jspider.core.storage.jdbc.ResourceDAOImpl: void setForbidden(java.net.URL,net.javacoding.jspider.core.event.impl.URLFoundEvent)>
<net.javacoding.jspider.core.storage.jdbc.ResourceDAOImpl: void setError(java.net.URL,net.javacoding.jspider.core.event.impl.ResourceParsedErrorEvent)>
<net.javacoding.jspider.core.storage.jdbc.ResourceDAOImpl: void setParsed(java.net.URL,net.javacoding.jspider.core.event.impl.ResourceParsedOkEvent)>
<net.javacoding.jspider.core.storage.jdbc.ResourceDAOImpl: void setError(java.net.URL,net.javacoding.jspider.core.event.impl.URLSpideredErrorEvent)>
<net.javacoding.jspider.core.logging.LogFactory: net.javacoding.jspider.core.logging.LogFactory getInstance()>
<net.javacoding.jspider.core.logging.LogFactory: net.javacoding.jspider.core.logging.Log getLog(java.lang.Class)>
<net.javacoding.jspider.core.logging.LogFactory: net.javacoding.jspider.core.logging.Log getLog(java.lang.String)>
<net.javacoding.jspider.core.throttle.impl.DistributedLoadThrottleImpl: void throttle()>
<net.javacoding.jspider.core.dispatch.impl.PluginSocket: void notify(net.javacoding.jspider.api.event.JSpiderEvent)>
<net.javacoding.jspider.mockobjects.util.Counter: void increment()>
<net.javacoding.jspider.mockobjects.util.Counter: int getValue()>
<net.javacoding.jspider.mockobjects.plugin.JUnitEventSink: net.javacoding.jspider.mockobjects.plugin.JUnitEventSink getInstance()>
<net.javacoding.jspider.mockobjects.MockWorkerThreadPool: void assign(net.javacoding.jspider.core.task.WorkerTask)>
<net.javacoding.jspider.mod.rule.MaxResourcesPerSiteRule: net.javacoding.jspider.api.model.Decision apply(net.javacoding.jspider.core.SpiderContext,net.javacoding.jspider.api.model.Site,java.net.URL)>
