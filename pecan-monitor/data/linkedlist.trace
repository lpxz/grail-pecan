Buildfile: /home/lpxz/eclipse/workspace/pecan/pecan-monitor/allinall.xml
runall:
linkedlist:
buggy:
     [java] 0 make sure the disk is writeable, 1 remember to set the analyzedFolder!@! in Parameters.java, used in processAllAtonece
     [java] Soot started on Mon Sep 05 17:04:13 HKT 2011
     [java] Transforming benchmarks.dstest.MTLinkedListInfiniteLoop... 
     [java] Transforming benchmarks.instrumented.java.util.List... 
     [java] Transforming benchmarks.instrumented.java.util.Collection... 
     [java] Transforming benchmarks.instrumented.java.util.Collections... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedList... 
     [java] Transforming benchmarks.instrumented.java.util.Random... 
     [java] Transforming benchmarks.instrumented.java.util.Set... 
     [java] Transforming benchmarks.instrumented.java.util.Map... 
     [java] Transforming benchmarks.instrumented.java.util.Comparator... 
     [java] Transforming benchmarks.instrumented.java.util.ListIterator... 
     [java] Transforming benchmarks.instrumented.java.util.SortedSet... 
     [java] Transforming benchmarks.instrumented.java.util.SortedMap... 
     [java] Transforming benchmarks.instrumented.java.util.ArrayList... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractSequentialList... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedList$Entry... 
     [java] Transforming benchmarks.instrumented.java.util.Iterator... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractList... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractCollection... 
     [java] Transforming benchmarks.instrumented.java.util.RandomAccess... 
     [java] Transforming edu.hkust.clap.monitor.Monitor... 
     [java] Transforming shop.Supplier... 
     [java] Transforming shop.Shop... 
     [java] Transforming shop.Signal... 
     [java] Transforming shop.Customer... 
     [java] Transforming buggyprogram.BuggyProgram$User... 
     [java] Transforming buggyprogram.BuggyProgram... 
     [java] buggyprogram.BuggyProgram go this one contains double exiting...
     [java] Transforming account.Bank... 
     [java] account.Bank checkResult this one contains double exiting...
     [java] Transforming account.Account... 
     [java] Transforming benchmarks.JGFMolDynBenchSizeA... 
     [java] Transforming benchmarks.jgfutil.JGFInstrumentor... 
     [java] Transforming benchmarks.moldyn.JGFMolDynBench... 
     [java] Transforming benchmarks.moldyn.md... 
     [java] Transforming benchmarks.jgfutil.JGFSection3... 
     [java] Transforming benchmarks.dstest.LinkedHashMapFactory... 
     [java] Transforming benchmarks.dstest.MapFactory... 
     [java] Transforming benchmarks.instrumented.java15.util.Map... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedHashMap... 
     [java] Transforming benchmarks.instrumented.java15.util.HashMap... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedHashMap$Entry... 
     [java] Transforming benchmarks.instrumented.java15.util.HashMap$Entry... 
     [java] Transforming benchmarks.instrumented.java15.util.Iterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Map$Entry... 
     [java] Transforming benchmarks.instrumented.java15.util.Set... 
     [java] Transforming benchmarks.instrumented.java15.util.Collection... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractMap... 
     [java] Transforming benchmarks.dstest.StackFactory... 
     [java] Transforming benchmarks.dstest.ListFactory... 
     [java] Transforming benchmarks.instrumented.java15.util.List... 
     [java] Transforming benchmarks.instrumented.java15.util.Stack... 
     [java] Transforming benchmarks.instrumented.java15.util.ListIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Vector... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractList... 
     [java] Transforming benchmarks.instrumented.java15.util.RandomAccess... 
     [java] Transforming benchmarks.instrumented.java15.util.Enumeration... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractCollection... 
     [java] Transforming benchmarks.dstest.VectorEnumerator... 
     [java] Transforming benchmarks.dstest.Enumeration... 
     [java] Transforming benchmarks.dstest.Vector... 
     [java] Transforming benchmarks.dstest.NoSuchElementException... 
     [java] Transforming benchmarks.dstest.MTTreeSetTest... 
     [java] Transforming benchmarks.jpf_test_cases.MyRandom... 
     [java] Transforming benchmarks.instrumented.java.util.TreeSet... 
     [java] Transforming benchmarks.dstest.MTSetTest... 
     [java] Transforming benchmarks.dstest.SimpleObject... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractSet... 
     [java] Transforming benchmarks.instrumented.java.util.HashSet... 
     [java] Transforming benchmarks.instrumented.java.util.HashMap... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap... 
     [java] Transforming benchmarks.dstest.MTHashtableTest... 
     [java] Transforming benchmarks.instrumented.java.util.Hashtable... 
     [java] Transforming benchmarks.instrumented.java.util.Dictionary... 
     [java] Transforming benchmarks.instrumented.java.util.Hashtable$Entry... 
     [java] Transforming benchmarks.instrumented.java.util.Hashtable$EmptyEnumerator... 
     [java] Transforming benchmarks.instrumented.java.util.Hashtable$EmptyIterator... 
     [java] Transforming benchmarks.instrumented.java.util.Map$Entry... 
     [java] Transforming benchmarks.dstest.ListDeadlockTest... 
     [java] Transforming benchmarks.dstest.ArrayListFactory... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections... 
     [java] Transforming benchmarks.dstest.LinkedListFactory... 
     [java] Transforming benchmarks.instrumented.java15.util.Random... 
     [java] Transforming benchmarks.instrumented.java15.util.Comparator... 
     [java] Transforming benchmarks.instrumented.java15.util.SortedSet... 
     [java] Transforming benchmarks.instrumented.java15.util.SortedMap... 
     [java] Transforming benchmarks.instrumented.java15.util.ArrayList... 
     [java] Transforming benchmarks.dstest.SetDeadlockTest... 
     [java] Transforming benchmarks.dstest.MTSetDeadlock... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedHashSet... 
     [java] Transforming benchmarks.dstest.StackDeadlockTest... 
     [java] Transforming benchmarks.dstest.IdentityHashMapDeadlockTest... 
     [java] Transforming benchmarks.dstest.MapDeadlockTest... 
     [java] Transforming benchmarks.dstest.IdentityHashMapFactory... 
     [java] Transforming benchmarks.instrumented.java15.util.IdentityHashMap... 
     [java] Transforming benchmarks.dstest.LinkedHashMapDeadlockTest... 
     [java] Transforming benchmarks.dstest.MTListDeadlock... 
     [java] Transforming benchmarks.dstest.MTArrayListTest... 
     [java] Transforming benchmarks.dstest.MTListTest... 
     [java] Transforming benchmarks.dstest.TreeMapDeadlockTest... 
     [java] Transforming benchmarks.dstest.WeakHashMapFactory... 
     [java] Transforming benchmarks.instrumented.java15.util.WeakHashMap... 
     [java] Transforming benchmarks.instrumented.java15.util.WeakHashMap$Entry... 
     [java] Transforming benchmarks.dstest.LinkedListTest... 
     [java] Transforming benchmarks.dstest.TreeSetTest... 
     [java] Transforming benchmarks.dstest.MTVectorTest... 
     [java] Transforming benchmarks.dstest.ArrayListTest... 
     [java] Transforming benchmarks.dstest.TreeMapFactory... 
     [java] Transforming benchmarks.dstest.HashMapFactory... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$Entry... 
     [java] Transforming benchmarks.dstest.HashMapDeadlockTest... 
     [java] Transforming benchmarks.dstest.LinkedListDeadlockTest... 
     [java] Transforming benchmarks.dstest.MTLinkedHashSetTest... 
     [java] Transforming benchmarks.dstest.ArrayListDeadlockTest... 
     [java] Transforming benchmarks.dstest.HashSetTest... 
     [java] Transforming benchmarks.dstest.WeakHashMapDeadlockTest... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedList... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractSequentialList... 
     [java] Transforming benchmarks.instrumented.java15.util.Queue... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedList$Entry... 
     [java] Transforming benchmarks.dstest.ArrayListDeadlock2Test... 
     [java] Transforming benchmarks.dstest.LinkedHashSetTest... 
     [java] Transforming benchmarks.jgfutil.JGFSection2... 
     [java] Transforming benchmarks.jgfutil.JGFSection1... 
     [java] Transforming benchmarks.jgfutil.JGFTimer... 
     [java] Transforming benchmarks.raytracer.Vec... 
     [java] Transforming benchmarks.raytracer.Surface... 
     [java] Transforming benchmarks.raytracer.Isect... 
     [java] Transforming benchmarks.raytracer.Primitive... 
     [java] Transforming benchmarks.raytracer.Ray... 
     [java] Transforming benchmarks.raytracer.Light... 
     [java] Transforming benchmarks.raytracer.View... 
     [java] Transforming benchmarks.raytracer.Barrier... 
     [java] Transforming benchmarks.raytracer.Scene... 
     [java] Transforming benchmarks.raytracer.RayTracer... 
     [java] Transforming benchmarks.raytracer.Interval... 
     [java] Transforming benchmarks.raytracer.JGFRayTracerBench... 
     [java] Transforming benchmarks.raytracer.Sphere... 
     [java] Transforming benchmarks.raytracer.TournamentBarrier... 
     [java] Transforming benchmarks.raytracer.RayTracerRunner... 
     [java] Transforming benchmarks.JGFMonteCarloBenchSizeA... 
     [java] Transforming benchmarks.montecarlo.JGFMonteCarloBench... 
     [java] Transforming benchmarks.montecarlo.CallAppDemo... 
     [java] Transforming benchmarks.montecarlo.AppDemo... 
     [java] Transforming benchmarks.montecarlo.Universal... 
     [java] Transforming benchmarks.montecarlo.DemoException... 
     [java] Transforming benchmarks.moldyn.TournamentBarrier... 
     [java] Transforming benchmarks.moldyn.Barrier... 
     [java] Transforming benchmarks.moldyn.mdRunner... 
     [java] Transforming benchmarks.moldyn.random... 
     [java] Transforming benchmarks.moldyn.particle... 
     [java] Transforming benchmarks.jpf_test_cases.rax.START... 
     [java] Transforming benchmarks.jpf_test_cases.rax.Event... 
     [java] Transforming benchmarks.jpf_test_cases.rax.SecondTask... 
     [java] Transforming benchmarks.jpf_test_cases.rax.FirstTask... 
     [java] Transforming benchmarks.jpf_test_cases.readerswriters.Reader... 
     [java] Transforming benchmarks.jpf_test_cases.readerswriters.RWPrinter... 
     [java] Transforming benchmarks.jpf_test_cases.readerswriters.Vector... 
     [java] Transforming benchmarks.jpf_test_cases.readerswriters.Writer... 
     [java] Transforming benchmarks.jpf_test_cases.readerswriters.RWVSNTest... 
     [java] Transforming benchmarks.jpf_test_cases.pipeline.PipeInttest... 
     [java] Transforming benchmarks.jpf_test_cases.pipeline.Pipeline... 
     [java] Transforming benchmarks.jpf_test_cases.pipeline.BlockingQueue... 
     [java] Transforming benchmarks.jpf_test_cases.pipeline.Listener... 
     [java] Transforming benchmarks.jpf_test_cases.pipeline.Stage... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.Collection... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.Vector... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.StandardCountingSemaphore... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.StandardBarrier... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.SynchronizedCollection... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.Configuration... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.Worker... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.Generic... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.SrcAbs... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.IntSrcAbs... 
     [java] Transforming benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs... 
     [java] Transforming benchmarks.jpf_test_cases.boundedbuffer.BoundedBuffer... 
     [java] Transforming benchmarks.jpf_test_cases.boundedbuffer.Buffer... 
     [java] Transforming benchmarks.jpf_test_cases.boundedbuffer.Producer... 
     [java] Transforming benchmarks.jpf_test_cases.boundedbuffer.Consumer... 
     [java] Transforming benchmarks.jpf_test_cases.nestedmonitors.Semaphore... 
     [java] Transforming benchmarks.jpf_test_cases.nestedmonitors.Consumer... 
     [java] Transforming benchmarks.jpf_test_cases.nestedmonitors.Buffer... 
     [java] Transforming benchmarks.jpf_test_cases.nestedmonitors.NestedMonitor... 
     [java] Transforming benchmarks.jpf_test_cases.nestedmonitors.Producer... 
     [java] Transforming benchmarks.JGFRayTracerBenchSizeA... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumMap$Values... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumMap... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumMap$EnumMapIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$EmptySet... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractSet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$EmptySet$1... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.NoSuchElementException... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableList... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumMap$1... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Arrays$ArrayList... 
     [java] Transforming benchmarks.instrumented.java15.util.Arrays... 
     [java] Transforming benchmarks.instrumented.java15.util.WeakHashMap$EntrySet... 
     [java] Transforming benchmarks.instrumented.java15.util.WeakHashMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractMap$SimpleEntry... 
     [java] Transforming benchmarks.instrumented.java15.util.WeakHashMap$HashIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractQueue... 
     [java] Transforming benchmarks.instrumented.java15.util.Dictionary... 
     [java] Transforming benchmarks.instrumented.java15.util.IdentityHashMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.IdentityHashMap$IdentityHashMapIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$PrivateEntryIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection$1... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$SubMap$EntrySetView... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$SubMap... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$SubMapEntryIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedHashMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedHashMap$LinkedHashIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableSet... 
     [java] Transforming benchmarks.instrumented.java15.util.IdentityHashMap$EntrySet... 
     [java] Transforming benchmarks.instrumented.java15.util.IdentityHashMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Vector$1... 
     [java] Transforming benchmarks.instrumented.java15.util.HashMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.HashMap$HashIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.WeakHashMap$1... 
     [java] Transforming benchmarks.instrumented.java15.util.StringTokenizer... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedHashMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedHashMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SingletonMap... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SingletonMap$ImmutableEntry... 
     [java] Transforming benchmarks.instrumented.java15.util.EmptyStackException... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$ReverseComparator... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$3... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedSortedSet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedSet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedCollection... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedList... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedList$1... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SynchronizedRandomAccessList... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SynchronizedList... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SynchronizedCollection... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$1... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedMap... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$EmptyList... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$EmptyMap... 
     [java] Transforming benchmarks.instrumented.java15.util.PriorityQueue$Itr... 
     [java] Transforming benchmarks.instrumented.java15.util.PriorityQueue... 
     [java] Transforming benchmarks.instrumented.java15.util.ConcurrentModificationException... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CopiesList... 
     [java] Transforming benchmarks.instrumented.java15.util.HashMap$KeySet... 
     [java] Transforming benchmarks.instrumented.java15.util.HashMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractList$ListItr... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractList$Itr... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedSet... 
     [java] Transforming benchmarks.instrumented.java15.util.HashMap$EntrySet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SingletonSet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SingletonSet$1... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedHashMap$1... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumSet$SerializationProxy... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumSet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableMap... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry... 
     [java] Transforming benchmarks.instrumented.java15.util.RandomAccessSubList... 
     [java] Transforming benchmarks.instrumented.java15.util.SubList... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumMap$KeySet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SynchronizedSet... 
     [java] Transforming benchmarks.instrumented.java15.util.IdentityHashMap$KeySet... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractMap$2... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractMap$2$1... 
     [java] Transforming benchmarks.instrumented.java15.util.IdentityHashMap$Values... 
     [java] Transforming benchmarks.instrumented.java15.util.IdentityHashMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.HashMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.HashMap$Values... 
     [java] Transforming benchmarks.instrumented.java15.util.Hashtable$1... 
     [java] Transforming benchmarks.instrumented.java15.util.Hashtable$KeySet... 
     [java] Transforming benchmarks.instrumented.java15.util.Hashtable... 
     [java] Transforming benchmarks.instrumented.java15.util.Hashtable$Entry... 
     [java] Transforming benchmarks.instrumented.java15.util.EnumMap$EntrySet... 
     [java] Transforming benchmarks.instrumented.java15.util.Hashtable$ValueCollection... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$1... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeMap$2... 
     [java] Transforming benchmarks.instrumented.java15.util.SubList$1... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractMap$1... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SynchronizedMap... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SelfComparable... 
     [java] Transforming benchmarks.instrumented.java15.util.TooManyListenersException... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractMap$1$1... 
     [java] Transforming benchmarks.instrumented.java15.util.WeakHashMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedRandomAccessList... 
     [java] Transforming benchmarks.instrumented.java15.util.Hashtable$EntrySet... 
     [java] Transforming benchmarks.instrumented.java15.util.WeakHashMap$KeySet... 
     [java] Transforming benchmarks.instrumented.java15.util.WeakHashMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Hashtable$EmptyIterator... 
     [java] Transforming benchmarks.instrumented.java15.lang.Math... 
     [java] Transforming benchmarks.instrumented.java15.util.JumboEnumSet... 
     [java] Transforming benchmarks.instrumented.java15.util.RegularEnumSet... 
     [java] Transforming benchmarks.instrumented.java15.util.HashMap$1... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$CheckedSortedMap... 
     [java] Transforming benchmarks.instrumented.java15.util.AbstractList$1... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$1... 
     [java] Transforming benchmarks.instrumented.java15.util.HashSet... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedHashSet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SynchronizedSortedSet... 
     [java] Transforming benchmarks.instrumented.java15.util.JumboEnumSet$EnumSetIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableRandomAccessList... 
     [java] Transforming benchmarks.instrumented.java15.util.BitSet... 
     [java] Transforming benchmarks.instrumented.java15.util.Hashtable$Enumerator... 
     [java] Transforming benchmarks.instrumented.java15.util.WeakHashMap$Values... 
     [java] Transforming benchmarks.instrumented.java15.util.RegularEnumSet$EnumSetIterator... 
     [java] Transforming benchmarks.instrumented.java15.util.Hashtable$EmptyEnumerator... 
     [java] Transforming benchmarks.instrumented.java15.util.IdentityHashMap$1... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SingletonList... 
     [java] Transforming benchmarks.instrumented.java15.util.TreeSet... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedMap... 
     [java] Transforming benchmarks.instrumented.java15.util.LinkedList$ListItr... 
     [java] Transforming benchmarks.instrumented.java15.util.PriorityQueue$1... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$ReverseComparator2... 
     [java] Transforming benchmarks.instrumented.java15.util.Collections$SynchronizedSortedMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptySet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptySet$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableList$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableCollection... 
     [java] Transforming benchmarks.instrumented.java.util.Arrays$ArrayList... 
     [java] Transforming benchmarks.instrumented.java.util.Arrays... 
     [java] Transforming benchmarks.instrumented.java.util.WeakHashMap$EntrySet... 
     [java] Transforming benchmarks.instrumented.java.util.WeakHashMap... 
     [java] Transforming benchmarks.instrumented.java.util.WeakHashMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$SimpleEntry... 
     [java] Transforming benchmarks.instrumented.java.util.WeakHashMap$Entry... 
     [java] Transforming benchmarks.instrumented.java.util.WeakHashMap$HashIterator... 
     [java] Transforming benchmarks.instrumented.java.util.Properties... 
     [java] Transforming benchmarks.instrumented.java.util.IdentityHashMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java.util.IdentityHashMap$IdentityHashMapIterator... 
     [java] Transforming benchmarks.instrumented.java.util.IdentityHashMap... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap$Entry... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableCollection$1... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap$SubMap$EntrySetView... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap$SubMap... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap$SubMapEntryIterator... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedHashMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedHashMap$LinkedHashIterator... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedHashMap... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedHashMap$Entry... 
     [java] Transforming benchmarks.instrumented.java.util.HashMap$Entry... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableSet... 
     [java] Transforming benchmarks.instrumented.java.util.IdentityHashMap$EntrySet... 
     [java] Transforming benchmarks.instrumented.java.util.IdentityHashMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java.util.Vector$1... 
     [java] Transforming benchmarks.instrumented.java.util.Vector... 
     [java] Transforming benchmarks.instrumented.java.util.NoSuchElementException... 
     [java] Transforming benchmarks.instrumented.java.util.HashMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java.util.HashMap$HashIterator... 
     [java] Transforming benchmarks.instrumented.java.util.WeakHashMap$1... 
     [java] Transforming benchmarks.instrumented.java.util.StringTokenizer... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedHashMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedHashMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonMap$ImmutableEntry... 
     [java] Transforming benchmarks.instrumented.java.util.EmptyStackException... 
     [java] Transforming benchmarks.instrumented.java.util.Timer$1... 
     [java] Transforming benchmarks.instrumented.java.util.Timer... 
     [java] Transforming benchmarks.instrumented.java.util.TimerThread... 
     [java] benchmarks.instrumented.java.util.TimerThread mainLoop this one contains double exiting...
     [java] benchmarks.instrumented.java.util.TimerThread mainLoop this one contains double exiting...
     [java] Transforming benchmarks.instrumented.java.util.TaskQueue... 
     [java] Transforming benchmarks.instrumented.java.util.TimerTask... 
     [java] Transforming benchmarks.instrumented.java.util.PropertyPermissionCollection... 
     [java] Transforming benchmarks.instrumented.java.util.PropertyPermission... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$ReverseComparator... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap$3... 
     [java] Transforming benchmarks.instrumented.java.util.ResourceBundleEnumeration... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedRandomAccessList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedCollection... 
     [java] Transforming benchmarks.instrumented.java.util.ResourceBundle... 
     [java] Transforming benchmarks.instrumented.java.util.MissingResourceException... 
     [java] Transforming benchmarks.instrumented.java.util.ResourceBundle$ResourceCacheKey... 
     [java] Transforming benchmarks.instrumented.java.util.ResourceBundle$LoaderReference... 
     [java] Transforming benchmarks.instrumented.java.util.PropertyResourceBundle... 
     [java] Transforming benchmarks.instrumented.java.util.ResourceBundle$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptyList... 
     [java] Transforming benchmarks.instrumented.java.util.EventListener... 
     [java] Transforming benchmarks.instrumented.java.util.ConcurrentModificationException... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptyMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$CopiesList... 
     [java] Transforming benchmarks.instrumented.java.util.HashMap$KeySet... 
     [java] Transforming benchmarks.instrumented.java.util.Observer... 
     [java] Transforming benchmarks.instrumented.java.util.Observable... 
     [java] Transforming benchmarks.instrumented.java.util.HashMap$EntryIterator... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractList$ListItr... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractList$Itr... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableSortedSet... 
     [java] Transforming benchmarks.instrumented.java.util.HashMap$EntrySet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonSet$1... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedHashMap$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry... 
     [java] Transforming benchmarks.instrumented.java.util.RandomAccessSubList... 
     [java] Transforming benchmarks.instrumented.java.util.SubList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedSet... 
     [java] Transforming benchmarks.instrumented.java.util.IdentityHashMap$KeySet... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$2... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$2$1... 
     [java] Transforming benchmarks.instrumented.java.util.IdentityHashMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java.util.IdentityHashMap$Values... 
     [java] Transforming benchmarks.instrumented.java.util.HashMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java.util.HashMap$Values... 
     [java] Transforming benchmarks.instrumented.java.util.Hashtable$1... 
     [java] Transforming benchmarks.instrumented.java.util.Hashtable$KeySet... 
     [java] Transforming benchmarks.instrumented.java.util.Hashtable$ValueCollection... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap$2... 
     [java] Transforming benchmarks.instrumented.java.util.TreeMap$1... 
     [java] Transforming benchmarks.instrumented.java.util.SubList$1... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedMap... 
     [java] Transforming benchmarks.instrumented.java.util.TooManyListenersException... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$1$1... 
     [java] Transforming benchmarks.instrumented.java.util.WeakHashMap$ValueIterator... 
     [java] Transforming benchmarks.instrumented.java.util.Stack... 
     [java] Transforming benchmarks.instrumented.java.util.Hashtable$EntrySet... 
     [java] Transforming benchmarks.instrumented.java.util.WeakHashMap$KeySet... 
     [java] Transforming benchmarks.instrumented.java.util.WeakHashMap$KeyIterator... 
     [java] Transforming benchmarks.instrumented.java.util.EventListenerProxy... 
     [java] Transforming benchmarks.instrumented.java.util.HashMap$1... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractList$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedSortedSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableRandomAccessList... 
     [java] Transforming benchmarks.instrumented.java.util.EventObject... 
     [java] Transforming benchmarks.instrumented.java.util.BitSet... 
     [java] Transforming benchmarks.instrumented.java.util.Hashtable$Enumerator... 
     [java] Transforming benchmarks.instrumented.java.util.WeakHashMap$Values... 
     [java] Transforming benchmarks.instrumented.java.util.IdentityHashMap$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableSortedMap... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedList$ListItr... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedSortedMap... 
     [java] Transforming benchmarks.instrumented.java.util.ListResourceBundle... 
     [java] Transforming benchmarks.stringbuffer.StringBuffer... 
     [java] Transforming benchmarks.stringbuffer.StringBufferTest... 
     [java] Transforming benchmarks.montecarlo.ReturnPath... 
     [java] Transforming benchmarks.montecarlo.PathId... 
     [java] Transforming benchmarks.montecarlo.ToTask... 
     [java] Transforming benchmarks.montecarlo.MonteCarloPath... 
     [java] Transforming benchmarks.montecarlo.RatePath... 
     [java] Transforming benchmarks.montecarlo.PriceStock... 
     [java] Transforming benchmarks.montecarlo.ToResult... 
     [java] Transforming benchmarks.montecarlo.ToInitAllTasks... 
     [java] Transforming benchmarks.montecarlo.AppDemoThread... 
     [java] Transforming benchmarks.montecarlo.Utilities... 
     [java] Transforming manager.Manager... 
     [java] manager.Manager main this one contains double exiting...
     [java] Transforming manager.TmemoryHandler... 
     [java] Transforming manager.Trelease... 
     [java] Transforming net.sf.cache4j.impl.EmptyCache... 
     [java] Transforming net.sf.cache4j.Cache... 
     [java] Transforming net.sf.cache4j.ManagedCache... 
     [java] Transforming net.sf.cache4j.CacheException... 
     [java] Transforming net.sf.cache4j.impl.CacheConfigImpl... 
     [java] Transforming net.sf.cache4j.CacheInfo... 
     [java] Transforming net.sf.cache4j.CacheConfig... 
     [java] Transforming net.sf.cache4j.impl.EmptyCache$CacheInfoImpl... 
     [java] Transforming net.sf.cache4j.impl.CacheObject... 
     [java] Transforming net.sf.cache4j.impl.LFUComparator... 
     [java] Transforming net.sf.cache4j.impl.SynchronizedCache... 
     [java] Transforming net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl... 
     [java] Transforming net.sf.cache4j.impl.Utils... 
     [java] Transforming net.sf.cache4j.impl.SynchronizedCache$1... 
     [java] Transforming net.sf.cache4j.impl.SoftCacheObject... 
     [java] Transforming net.sf.cache4j.impl.BlockingCache$1... 
     [java] Transforming net.sf.cache4j.impl.FIFOComparator... 
     [java] Transforming net.sf.cache4j.impl.Configurator... 
     [java] Transforming org.w3c.dom.Element... 
     [java] Transforming org.w3c.dom.Node... 
     [java] Transforming org.w3c.dom.Document... 
     [java] Transforming net.sf.cache4j.CacheFactory... 
     [java] Transforming net.sf.cache4j.impl.BlockingCache... 
     [java] Transforming org.w3c.dom.NodeList... 
     [java] Transforming org.w3c.dom.DOMException... 
     [java] Transforming org.w3c.dom.Attr... 
     [java] Transforming org.w3c.dom.TypeInfo... 
     [java] Transforming org.w3c.dom.NamedNodeMap... 
     [java] Transforming org.w3c.dom.UserDataHandler... 
     [java] Transforming org.w3c.dom.DocumentType... 
     [java] Transforming org.w3c.dom.DOMImplementation... 
     [java] Transforming org.w3c.dom.DocumentFragment... 
     [java] Transforming org.w3c.dom.Text... 
     [java] Transforming org.w3c.dom.Comment... 
     [java] Transforming org.w3c.dom.CDATASection... 
     [java] Transforming org.w3c.dom.ProcessingInstruction... 
     [java] Transforming org.w3c.dom.EntityReference... 
     [java] Transforming org.w3c.dom.DOMConfiguration... 
     [java] Transforming net.sf.cache4j.CacheCleaner... 
     [java] Transforming net.sf.cache4j.impl.BlockingCache$CacheInfoImpl... 
     [java] Transforming org.w3c.dom.CharacterData... 
     [java] Transforming net.sf.cache4j.impl.EmptyCache$1... 
     [java] Transforming net.sf.cache4j.impl.LRUComparator... 
     [java] Transforming net.sf.cache4j.test.Test... 
     [java] Transforming net.sf.cache4j.test.Cache4jDriver... 
     [java] Transforming net.sf.cache4j.test.BlockingCacheTest... 
     [java] Transforming net.sf.cache4j.test.SynchronizedCacheTest... 
     [java] Transforming net.sf.cache4j.test.SynchronizedCacheTest$TThread... 
     [java] Transforming net.sf.cache4j.test.BlockingCacheTest$TThread... 
     [java] Transforming net.sf.cache4j.test.Cache4jTester... 
     [java] Transforming critical.Section... 
     [java] Transforming critical.Critical... 
     [java] Transforming mergesort.MSort... 
     [java] mergesort.MSort PrintResults this one contains double exiting...
     [java] Transforming mergesort.MergeSort... 
     [java] Transforming loader.Loader... 
     [java] loader.Loader checkResult this one contains double exiting...
     [java] Transforming loader.NewThread... 
     [java] Transforming example2.ExampleTwo... 
     [java] Transforming example2.ExampleThread2... 
     [java] Transforming example2.ExampleThread1... 
     [java] Transforming example2.Account... 
     [java] Transforming stringbuffer.StringBuffer... 
     [java] Transforming stringbuffer.StringBufferTest... 
     [java] Transforming spec.reporter.Result... 
     [java] Transforming spec.reporter.Run... 
     [java] Transforming spec.reporter.ReportProps... 
     [java] Transforming spec.reporter.Metrics... 
     [java] Transforming spec.reporter.TextColumn... 
     [java] Transforming spec.reporter.TextBlock... 
     [java] Transforming spec.reporter.Template... 
     [java] Transforming spec.reporter.Report... 
     [java] Transforming spec.reporter.TableGroupCompare... 
     [java] spec.reporter.TableGroupCompare <init> this one contains double exiting...
     [java] spec.reporter.TableGroupCompare <init> this one contains double exiting...
     [java] Transforming spec.jbb.JBButil... 
     [java] Transforming spec.reporter.Title... 
     [java] Transforming spec.reporter.TemplateCompare... 
     [java] Transforming spec.reporter.Table... 
     [java] Transforming spec.reporter.TextiReport... 
     [java] Transforming spec.reporter.TextMetrics... 
     [java] Transforming spec.reporter.TableGroup... 
     [java] spec.reporter.TableGroup <init> this one contains double exiting...
     [java] spec.reporter.TableGroup <init> this one contains double exiting...
     [java] Transforming spec.reporter.GraphImage... 
     [java] Transforming spec.reporter.MultiVMReporter... 
     [java] spec.reporter.MultiVMReporter getOpt this one contains double exiting...
     [java] Transforming spec.reporter.MultiVMTxtReport... 
     [java] Transforming spec.reporter.MultiVMReport... 
     [java] Transforming spec.reporter.HTMLTableGraphGenerator3... 
     [java] Transforming spec.reporter.JBBReportFilenameFilter... 
     [java] Transforming spec.reporter.Reporter... 
     [java] spec.reporter.Reporter getOpt this one contains double exiting...
     [java] Transforming spec.jbb.TransactionManager... 
     [java] Transforming spec.jbb.Company... 
     [java] Transforming spec.jbb.Company$runModes... 
     [java] Transforming spec.jbb.Transaction... 
     [java] Transforming spec.jbb.TimerData... 
     [java] Transforming spec.jbb.Warehouse... 
     [java] Transforming spec.jbb.infra.Util.TransactionLogBuffer... 
     [java] Transforming spec.jbb.JBBDataStorage... 
     [java] Transforming spec.jbb.JBBSortedStorage... 
     [java] Transforming spec.jbb.Customer... 
     [java] Transforming spec.jbb.Address... 
     [java] Transforming spec.jbb.District... 
     [java] Transforming spec.jbb.Stock... 
     [java] Transforming spec.jbb.Item... 
     [java] Transforming spec.jbb.History... 
     [java] Transforming spec.jbb.RunSequencer... 
     [java] Transforming spec.jbb.ResFilter... 
     [java] Transforming spec.jbb.Orderline... 
     [java] Transforming spec.jbb.PrintLastSeq... 
     [java] Transforming spec.jbb.Infrastructure$SynchronizedJBBDataStorage... 
     [java] Transforming spec.jbb.Infrastructure... 
     [java] Transforming spec.jbb.NewOrder... 
     [java] Transforming spec.jbb.Order... 
     [java] Transforming spec.jbb.JBBLogFormatter... 
     [java] Transforming spec.jbb.JBBmain... 
     [java] Transforming spec.jbb.JBBProperties... 
     [java] Transforming spec.jbb.validity.digest... 
     [java] Transforming spec.jbb.SaveOutput... 
     [java] Transforming spec.jbb.OrderStatusTransaction... 
     [java] Transforming spec.jbb.infra.Util.XMLTransactionLog... 
     [java] Transforming spec.jbb.NewOrderTransaction... 
     [java] Transforming spec.jbb.TreeMapDataStorage... 
     [java] Transforming spec.jbb.MapDataStorage... 
     [java] Transforming spec.jbb.Infrastructure$SynchronizedJBBSortedStorage... 
     [java] Transforming spec.jbb.DeliveryHandler... 
     [java] Transforming spec.jbb.DeliveryTransaction... 
     [java] Transforming spec.jbb.StockLevelTransaction... 
     [java] Transforming spec.jbb.CustomerReportTransaction... 
     [java] Transforming spec.jbb.Controller... 
     [java] Transforming spec.jbb.validity.digestExpected... 
     [java] Transforming spec.jbb.validity.LoopBounds2... 
     [java] Transforming spec.jbb.validity.LoopBounds... 
     [java] Transforming spec.jbb.validity.C1... 
     [java] Transforming spec.jbb.validity.C2... 
     [java] Transforming spec.jbb.validity.C2intf... 
     [java] Transforming spec.jbb.validity.C3... 
     [java] Transforming spec.jbb.validity.C3intf... 
     [java] Transforming spec.jbb.validity.SideIntf... 
     [java] Transforming spec.jbb.validity.Super... 
     [java] Transforming spec.jbb.validity.PepTest... 
     [java] spec.jbb.validity.PepTest testExc1 this one contains double exiting...
     [java] spec.jbb.validity.PepTest testExc2 this one contains double exiting...
     [java] spec.jbb.validity.PepTest testExc3 this one contains double exiting...
     [java] spec.jbb.validity.PepTest testExc4 this one contains double exiting...
     [java] spec.jbb.validity.PepTest testExc5 this one contains double exiting...
     [java] spec.jbb.validity.PepTest testExc5 this one contains double exiting...
     [java] spec.jbb.validity.PepTest loopExitContinueInExceptionHandler this one contains double exiting...
     [java] Transforming spec.jbb.validity.subClass... 
     [java] Transforming spec.jbb.validity.superClass... 
     [java] Transforming spec.jbb.validity.syncTest... 
     [java] Transforming spec.jbb.validity.StringAndInt... 
     [java] Transforming spec.jbb.validity.Sub... 
     [java] Transforming spec.jbb.validity.Check... 
     [java] Transforming spec.jbb.infra.Util.XMLLineDocumentException... 
     [java] Transforming spec.jbb.infra.Util.ScreenException... 
     [java] Transforming spec.jbb.PaymentTransaction... 
     [java] Transforming org.w3c.dom.DOMStringList... 
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MTLinkedListInfiniteLoop.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/List.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Random.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Set.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Map.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Comparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/ListIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/SortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/SortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractSequentialList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedList$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Iterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/RandomAccess.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/edu/hkust/clap/monitor/Monitor.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/shop/Supplier.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/shop/Shop.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/shop/Signal.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/shop/Customer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/buggyprogram/BuggyProgram$User.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/buggyprogram/BuggyProgram.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/account/Bank.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/account/Account.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/JGFMolDynBenchSizeA.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jgfutil/JGFInstrumentor.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/moldyn/JGFMolDynBench.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/moldyn/md.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jgfutil/JGFSection3.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/LinkedHashMapFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MapFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Map.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedHashMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedHashMap$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashMap$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Iterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Map$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Set.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/StackFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/ListFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/List.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Stack.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/ListIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Vector.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/RandomAccess.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Enumeration.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/VectorEnumerator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/Enumeration.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/Vector.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/NoSuchElementException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MTTreeSetTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/MyRandom.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MTSetTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/SimpleObject.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MTHashtableTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Hashtable.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Dictionary.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Hashtable$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Hashtable$EmptyEnumerator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Hashtable$EmptyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Map$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/ListDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/ArrayListFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/LinkedListFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Random.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Comparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/SortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/SortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/SetDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MTSetDeadlock.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedHashSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/StackDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/IdentityHashMapDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MapDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/IdentityHashMapFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/IdentityHashMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/LinkedHashMapDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MTListDeadlock.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MTArrayListTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MTListTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/TreeMapDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/WeakHashMapFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/WeakHashMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/WeakHashMap$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/LinkedListTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/TreeSetTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MTVectorTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/ArrayListTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/TreeMapFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/HashMapFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/HashMapDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/LinkedListDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/MTLinkedHashSetTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/ArrayListDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/HashSetTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/WeakHashMapDeadlockTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractSequentialList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Queue.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedList$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/ArrayListDeadlock2Test.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/dstest/LinkedHashSetTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jgfutil/JGFSection2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jgfutil/JGFSection1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jgfutil/JGFTimer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/Vec.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/Surface.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/Isect.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/Primitive.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/Ray.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/Light.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/View.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/Barrier.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/Scene.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/RayTracer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/Interval.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/JGFRayTracerBench.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/Sphere.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/TournamentBarrier.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/raytracer/RayTracerRunner.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/JGFMonteCarloBenchSizeA.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/JGFMonteCarloBench.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/CallAppDemo.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/AppDemo.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/Universal.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/DemoException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/moldyn/TournamentBarrier.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/moldyn/Barrier.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/moldyn/mdRunner.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/moldyn/random.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/moldyn/particle.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/rax/START.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/rax/Event.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/rax/SecondTask.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/rax/FirstTask.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/readerswriters/Reader.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/readerswriters/RWPrinter.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/readerswriters/Vector.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/readerswriters/Writer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/readerswriters/RWVSNTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/pipeline/PipeInttest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/pipeline/Pipeline.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/pipeline/BlockingQueue.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/pipeline/Listener.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/pipeline/Stage.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/Coordinator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/ReplicatedWorkers.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/Collection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/Vector.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/StandardCountingSemaphore.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/StandardBarrier.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/SynchronizedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/Configuration.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/Worker.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/Generic.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/SrcAbs.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/IntSrcAbs.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/replicatedcasestudies/SignsSrcAbs.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/boundedbuffer/BoundedBuffer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/boundedbuffer/Buffer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/boundedbuffer/Producer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/boundedbuffer/Consumer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/nestedmonitors/Semaphore.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/nestedmonitors/Consumer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/nestedmonitors/Buffer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/nestedmonitors/NestedMonitor.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/jpf_test_cases/nestedmonitors/Producer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/JGFRayTracerBenchSizeA.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumMap$Values.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumMap$EnumMapIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$EmptySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$EmptySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/NoSuchElementException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Arrays$ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Arrays.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/WeakHashMap$EntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/WeakHashMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractMap$SimpleEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/WeakHashMap$HashIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractQueue.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Dictionary.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/IdentityHashMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/IdentityHashMap$IdentityHashMapIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$PrivateEntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableCollection$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$SubMap$EntrySetView.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$SubMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$SubMapEntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedHashMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedHashMap$LinkedHashIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/IdentityHashMap$EntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/IdentityHashMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Vector$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashMap$HashIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/WeakHashMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/StringTokenizer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedHashMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedHashMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SingletonMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SingletonMap$ImmutableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EmptyStackException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$ReverseComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$3.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SynchronizedRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SynchronizedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SynchronizedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedMap$CheckedEntrySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedMap$CheckedEntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedMap$CheckedEntrySet$CheckedEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$EmptyList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$EmptyMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/PriorityQueue$Itr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/PriorityQueue.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/ConcurrentModificationException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CopiesList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashMap$KeySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractList$Itr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashMap$EntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SingletonSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SingletonSet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedHashMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumSet$SerializationProxy.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/RandomAccessSubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/SubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumMap$KeySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SynchronizedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/IdentityHashMap$KeySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractMap$2$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/IdentityHashMap$Values.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/IdentityHashMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashMap$Values.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Hashtable$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Hashtable$KeySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Hashtable.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Hashtable$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/EnumMap$EntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Hashtable$ValueCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/SubList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SynchronizedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SelfComparable.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TooManyListenersException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractMap$1$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/WeakHashMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Hashtable$EntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/WeakHashMap$KeySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/WeakHashMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Hashtable$EmptyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/lang/Math.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/JumboEnumSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/RegularEnumSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$CheckedSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/AbstractList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/HashSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedHashSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SynchronizedSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/JumboEnumSet$EnumSetIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/BitSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Hashtable$Enumerator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/WeakHashMap$Values.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/RegularEnumSet$EnumSetIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Hashtable$EmptyEnumerator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/IdentityHashMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SingletonList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/TreeSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$UnmodifiableSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/LinkedList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/PriorityQueue$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$ReverseComparator2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java15/util/Collections$SynchronizedSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$EmptySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$EmptySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Arrays$ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Arrays.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/WeakHashMap$EntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/WeakHashMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/WeakHashMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractMap$SimpleEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/WeakHashMap$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/WeakHashMap$HashIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Properties.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/IdentityHashMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/IdentityHashMap$IdentityHashMapIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/IdentityHashMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap$SubMap$EntrySetView.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap$SubMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap$SubMapEntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedHashMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedHashMap$LinkedHashIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedHashMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedHashMap$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashMap$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/IdentityHashMap$EntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/IdentityHashMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Vector$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Vector.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/NoSuchElementException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashMap$HashIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/WeakHashMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/StringTokenizer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedHashMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedHashMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SingletonMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SingletonMap$ImmutableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/EmptyStackException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Timer$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Timer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TimerThread.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TaskQueue.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TimerTask.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/PropertyPermissionCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/PropertyPermission.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$ReverseComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap$3.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/ResourceBundleEnumeration.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SynchronizedRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SynchronizedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SynchronizedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/ResourceBundle.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/MissingResourceException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/ResourceBundle$ResourceCacheKey.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/ResourceBundle$LoaderReference.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/PropertyResourceBundle.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/ResourceBundle$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$EmptyList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/EventListener.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/ConcurrentModificationException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$EmptyMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$CopiesList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashMap$KeySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Observer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Observable.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashMap$EntryIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractList$Itr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashMap$EntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SingletonSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SingletonSet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedHashMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/RandomAccessSubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/SubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SynchronizedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/IdentityHashMap$KeySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractMap$2$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/IdentityHashMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/IdentityHashMap$Values.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashMap$Values.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Hashtable$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Hashtable$KeySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Hashtable$ValueCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TreeMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/SubList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SynchronizedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/TooManyListenersException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractMap$1$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/WeakHashMap$ValueIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Stack.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Hashtable$EntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/WeakHashMap$KeySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/WeakHashMap$KeyIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/EventListenerProxy.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/HashMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/AbstractList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SynchronizedSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/EventObject.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/BitSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Hashtable$Enumerator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/WeakHashMap$Values.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/IdentityHashMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SingletonList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/LinkedList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/Collections$SynchronizedSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/instrumented/java/util/ListResourceBundle.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/stringbuffer/StringBuffer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/stringbuffer/StringBufferTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/ReturnPath.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/PathId.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/ToTask.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/MonteCarloPath.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/RatePath.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/PriceStock.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/ToResult.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/ToInitAllTasks.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/AppDemoThread.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/benchmarks/montecarlo/Utilities.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/manager/Manager.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/manager/TmemoryHandler.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/manager/Trelease.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/EmptyCache.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/Cache.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/ManagedCache.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/CacheException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/CacheConfigImpl.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/CacheInfo.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/CacheConfig.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/EmptyCache$CacheInfoImpl.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/CacheObject.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/LFUComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/SynchronizedCache.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/SynchronizedCache$CacheInfoImpl.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/Utils.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/SynchronizedCache$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/SoftCacheObject.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/BlockingCache$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/FIFOComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/Configurator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/Element.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/Node.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/Document.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/CacheFactory.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/BlockingCache.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/NodeList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/DOMException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/Attr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/TypeInfo.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/NamedNodeMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/UserDataHandler.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/DocumentType.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/DOMImplementation.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/DocumentFragment.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/Text.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/Comment.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/CDATASection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/ProcessingInstruction.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/EntityReference.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/DOMConfiguration.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/CacheCleaner.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/BlockingCache$CacheInfoImpl.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/CharacterData.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/EmptyCache$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/impl/LRUComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/test/Test.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/test/Cache4jDriver.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/test/BlockingCacheTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/test/SynchronizedCacheTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/test/SynchronizedCacheTest$TThread.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/test/BlockingCacheTest$TThread.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/net/sf/cache4j/test/Cache4jTester.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/critical/Section.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/critical/Critical.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/mergesort/MSort.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/mergesort/MergeSort.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/loader/Loader.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/loader/NewThread.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/example2/ExampleTwo.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/example2/ExampleThread2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/example2/ExampleThread1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/example2/Account.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/stringbuffer/StringBuffer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/stringbuffer/StringBufferTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/Result.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/Run.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/ReportProps.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/Metrics.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/TextColumn.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/TextBlock.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/Template.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/Report.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/TableGroupCompare.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/JBButil.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/Title.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/TemplateCompare.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/Table.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/TextiReport.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/TextMetrics.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/TableGroup.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/GraphImage.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/MultiVMReporter.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/MultiVMTxtReport.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/MultiVMReport.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/HTMLTableGraphGenerator3.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/JBBReportFilenameFilter.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/reporter/Reporter.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/TransactionManager.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Company.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Company$runModes.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Transaction.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/TimerData.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Warehouse.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/infra/Util/TransactionLogBuffer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/JBBDataStorage.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/JBBSortedStorage.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Customer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Address.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/District.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Stock.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Item.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/History.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/RunSequencer.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/ResFilter.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Orderline.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/PrintLastSeq.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Infrastructure$SynchronizedJBBDataStorage.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Infrastructure.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/NewOrder.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Order.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/JBBLogFormatter.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/JBBmain.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/JBBProperties.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/digest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/SaveOutput.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/OrderStatusTransaction.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/infra/Util/XMLTransactionLog.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/NewOrderTransaction.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/TreeMapDataStorage.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/MapDataStorage.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Infrastructure$SynchronizedJBBSortedStorage.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/DeliveryHandler.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/DeliveryTransaction.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/StockLevelTransaction.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/CustomerReportTransaction.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/Controller.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/digestExpected.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/LoopBounds2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/LoopBounds.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/C1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/C2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/C2intf.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/C3.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/C3intf.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/SideIntf.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/Super.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/PepTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/subClass.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/superClass.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/syncTest.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/StringAndInt.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/Sub.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/validity/Check.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/infra/Util/XMLLineDocumentException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/infra/Util/ScreenException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/spec/jbb/PaymentTransaction.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/pre/org/w3c/dom/DOMStringList.class
     [java] Soot finished on Mon Sep 05 17:04:45 HKT 2011
     [java] Soot has run for 0 min. 32 sec.
     [java] --- Pre version generated ---
     [java] Soot started on Mon Sep 05 17:04:47 HKT 2011
     [java] [Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
     [java] [Spark] Pointer Assignment Graph in 0.4 seconds.
     [java] [Spark] Type masks in 0.3 seconds.
     [java] [Spark] Pointer Graph simplified in 0.0 seconds.
     [java] [Spark] Propagation in 34.0 seconds.
     [java] [Spark] Solution found in 34.0 seconds.
     [java] [local-objects] Analyzing local objects for benchmarks.dstest.MTLinkedListInfiniteLoop
     [java] [local-objects]   preparing class             Mon Sep 05 17:05:24 HKT 2011
     [java] [local-objects]   analyzing class             Mon Sep 05 17:05:24 HKT 2011
     [java] [local-objects]   propagating over call graph Mon Sep 05 17:05:25 HKT 2011
     [java] [local-objects]   finished at                 Mon Sep 05 17:05:25 HKT 2011
     [java] [local-objects]   (#analyzed/#encountered): 247/358
     [java] Transforming benchmarks.dstest.MTLinkedListInfiniteLoop... 
     [java] Transforming benchmarks.instrumented.java.util.List... 
     [java] Transforming benchmarks.instrumented.java.util.Collections... 
     [java] Transforming edu.hkust.clap.monitor.Monitor... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedList... 
     [java] Transforming benchmarks.instrumented.java.util.Collection... 
     [java] Transforming benchmarks.instrumented.java.util.Random... 
     [java] Transforming benchmarks.instrumented.java.util.Set... 
     [java] Transforming benchmarks.instrumented.java.util.Map... 
     [java] Transforming benchmarks.instrumented.java.util.Comparator... 
     [java] Transforming benchmarks.instrumented.java.util.ListIterator... 
     [java] Transforming benchmarks.instrumented.java.util.SortedSet... 
     [java] Transforming benchmarks.instrumented.java.util.SortedMap... 
     [java] Transforming benchmarks.instrumented.java.util.ArrayList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$CopiesList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonSet... 
     [java] Transforming benchmarks.instrumented.java.util.RandomAccess... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptySet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableSortedSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedCollection... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableCollection... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptyList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedSortedSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$ReverseComparator... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedSortedMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonList... 
     [java] Transforming benchmarks.instrumented.java.util.Iterator... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedMap... 
     [java] Transforming benchmarks.instrumented.java.util.Arrays... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableRandomAccessList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableSortedMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptyMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedRandomAccessList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableList... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractSequentialList... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedList$Entry... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedList$ListItr... 
     [java] Transforming benchmarks.instrumented.java.util.NoSuchElementException... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractList... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonSet$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptySet$1... 
     [java] Transforming benchmarks.instrumented.java.util.Map$Entry... 
     [java] Transforming benchmarks.instrumented.java.util.ConcurrentModificationException... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableCollection$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonMap$ImmutableEntry... 
     [java] Transforming benchmarks.instrumented.java.util.Arrays$ArrayList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableList$1... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractCollection... 
     [java] Transforming benchmarks.instrumented.java.util.SubList... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractList$ListItr... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractList$Itr... 
     [java] Transforming benchmarks.instrumented.java.util.RandomAccessSubList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$SimpleEntry... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$1... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$2... 
     [java] Transforming org.w3c.dom.Document... 
     [java] Transforming org.w3c.dom.Element... 
     [java] Transforming org.w3c.dom.Node... 
     [java] Transforming org.w3c.dom.NodeList... 
     [java] Transforming org.w3c.dom.Text... 
     [java] Transforming benchmarks.instrumented.java.util.SubList$1... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$1$1... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$2$1... 
     [java] Transforming org.w3c.dom.DOMException... 
     [java] Transforming org.w3c.dom.Attr... 
     [java] Transforming org.w3c.dom.TypeInfo... 
     [java] Transforming org.w3c.dom.DocumentType... 
     [java] Transforming org.w3c.dom.DOMImplementation... 
     [java] Transforming org.w3c.dom.DocumentFragment... 
     [java] Transforming org.w3c.dom.Comment... 
     [java] Transforming org.w3c.dom.CDATASection... 
     [java] Transforming org.w3c.dom.ProcessingInstruction... 
     [java] Transforming org.w3c.dom.EntityReference... 
     [java] Transforming org.w3c.dom.DOMConfiguration... 
     [java] Transforming org.w3c.dom.NamedNodeMap... 
     [java] Transforming org.w3c.dom.UserDataHandler... 
     [java] Transforming org.w3c.dom.CharacterData... 
     [java] Transforming org.w3c.dom.DOMStringList... 
     [java] Transforming org.w3c.dom.ls.LSResourceResolver... 
     [java] Transforming org.w3c.dom.ls.LSInput... 
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/dstest/MTLinkedListInfiniteLoop.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/List.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/edu/hkust/clap/monitor/Monitor.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/LinkedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Random.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Set.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Map.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Comparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/ListIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/SortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/SortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$CopiesList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SingletonSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/RandomAccess.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$EmptySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SynchronizedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SynchronizedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$EmptyList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SynchronizedSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$ReverseComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SingletonMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SynchronizedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SynchronizedSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SingletonList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Iterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SynchronizedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Arrays.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$EmptyMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SynchronizedRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractSequentialList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/LinkedList$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/LinkedList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/NoSuchElementException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SingletonSet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$EmptySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Map$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/ConcurrentModificationException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$SingletonMap$ImmutableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Arrays$ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/SubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractList$Itr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/RandomAccessSubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractMap$SimpleEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/Document.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/Element.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/Node.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/NodeList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/Text.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/SubList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractMap$1$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/benchmarks/instrumented/java/util/AbstractMap$2$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/DOMException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/Attr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/TypeInfo.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/DocumentType.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/DOMImplementation.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/DocumentFragment.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/Comment.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/CDATASection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/ProcessingInstruction.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/EntityReference.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/DOMConfiguration.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/NamedNodeMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/UserDataHandler.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/CharacterData.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/DOMStringList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/ls/LSResourceResolver.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/runtime/org/w3c/dom/ls/LSInput.class
     [java] Soot finished on Mon Sep 05 17:05:27 HKT 2011
     [java] Soot has run for 0 min. 40 sec.
     [java] ***** Runtime version generated *****
     [java] Soot started on Mon Sep 05 17:05:28 HKT 2011
     [java] Transforming benchmarks.dstest.MTLinkedListInfiniteLoop... 
     [java] Transforming benchmarks.instrumented.java.util.List... 
     [java] Transforming benchmarks.instrumented.java.util.Collection... 
     [java] Transforming benchmarks.instrumented.java.util.Collections... 
     [java] Transforming edu.hkust.clap.monitor.Monitor... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedList... 
     [java] Transforming benchmarks.instrumented.java.util.Random... 
     [java] Transforming benchmarks.instrumented.java.util.Set... 
     [java] Transforming benchmarks.instrumented.java.util.Map... 
     [java] Transforming benchmarks.instrumented.java.util.Comparator... 
     [java] Transforming benchmarks.instrumented.java.util.ListIterator... 
     [java] Transforming benchmarks.instrumented.java.util.SortedSet... 
     [java] Transforming benchmarks.instrumented.java.util.SortedMap... 
     [java] Transforming benchmarks.instrumented.java.util.ArrayList... 
     [java] Transforming benchmarks.instrumented.java.util.Iterator... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractSequentialList... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedList$Entry... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractList... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractCollection... 
     [java] Transforming benchmarks.instrumented.java.util.RandomAccess... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$CopiesList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptySet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableSortedSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedCollection... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableCollection... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptyList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedSortedSet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$ReverseComparator... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedSortedMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedMap... 
     [java] Transforming benchmarks.instrumented.java.util.Arrays... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableRandomAccessList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableSortedMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptyMap... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SynchronizedRandomAccessList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableList... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractSet... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap... 
     [java] Transforming benchmarks.instrumented.java.util.LinkedList$ListItr... 
     [java] Transforming benchmarks.instrumented.java.util.NoSuchElementException... 
     [java] Transforming benchmarks.instrumented.java.util.Map$Entry... 
     [java] Transforming benchmarks.instrumented.java.util.ConcurrentModificationException... 
     [java] Transforming benchmarks.instrumented.java.util.SubList... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractList$ListItr... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractList$Itr... 
     [java] Transforming benchmarks.instrumented.java.util.RandomAccessSubList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonSet$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$EmptySet$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableCollection$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$SingletonMap$ImmutableEntry... 
     [java] Transforming benchmarks.instrumented.java.util.Arrays$ArrayList... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableList$1... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$SimpleEntry... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$1... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$2... 
     [java] Transforming benchmarks.instrumented.java.util.SubList$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1... 
     [java] Transforming benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$1$1... 
     [java] Transforming benchmarks.instrumented.java.util.AbstractMap$2$1... 
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/dstest/MTLinkedListInfiniteLoop.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/List.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/edu/hkust/clap/monitor/Monitor.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/LinkedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Random.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Set.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Map.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Comparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/ListIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/SortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/SortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Iterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractSequentialList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/LinkedList$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/RandomAccess.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$CopiesList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SingletonSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$EmptySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SynchronizedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SynchronizedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$EmptyList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SynchronizedSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$ReverseComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SingletonMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SynchronizedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SynchronizedSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SingletonList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SynchronizedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Arrays.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$EmptyMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SynchronizedRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/LinkedList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/NoSuchElementException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Map$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/ConcurrentModificationException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/SubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractList$Itr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/RandomAccessSubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SingletonSet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$EmptySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$SingletonMap$ImmutableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Arrays$ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractMap$SimpleEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/SubList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractMap$1$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/replay/benchmarks/instrumented/java/util/AbstractMap$2$1.class
     [java] Soot finished on Mon Sep 05 17:05:31 HKT 2011
     [java] Soot has run for 0 min. 3 sec.
     [java] deleting... /home/lpxz/eclipse/workspace/app/bin
     [java] --- Replay version generated ---
     [java] *** *** *** *** *** *** *** *** *** *** 
     [java] *** Total access num: 1173
     [java] *** Instrumented SPE access num: 586
     [java]  
     [java] *** SPE size: 14
     [java] *** *** *** *** *** *** *** *** *** *** 
     [java] *** SPE name: 
     [java] *** "benchmarks.instrumented.java.util.LinkedList$ListItr.lastReturned"
     [java] *** "benchmarks.instrumented.java.util.AbstractList.modCount"
     [java] *** "benchmarks.instrumented.java.util.ArrayList.elementData"
     [java] *** "benchmarks.instrumented.java.util.LinkedList$Entry.next"
     [java] *** "benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.e"
     [java] *** "benchmarks.instrumented.java.util.LinkedList$Entry.previous"
     [java] *** "benchmarks.instrumented.java.util.LinkedList.size"
     [java] *** "benchmarks.instrumented.java.util.Collections$SingletonSet$1.hasNext"
     [java] *** "benchmarks.instrumented.java.util.AbstractList$Itr.cursor"
     [java] *** "benchmarks.instrumented.java.util.LinkedList$ListItr.next"
     [java] *** "benchmarks.instrumented.java.util.LinkedList$ListItr.nextIndex"
     [java] *** "benchmarks.instrumented.java.util.AbstractList$Itr.lastRet"
     [java] *** "benchmarks.instrumented.java.util.Arrays$ArrayList.a"
     [java] *** "benchmarks.instrumented.java.util.Collections$SingletonMap.entrySet"
     [java]  
     [java] *** Method size: 4100
     [java] *** *** *** *** *** *** *** *** *** *** 
     [java] *** Method name: 
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.clear
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$HashIterator.nextEntry
     [java] *** spec.jbb.Orderline.getQuantity
     [java] *** benchmarks.instrumented.java.util.SubList$1.previous
     [java] *** benchmarks.instrumented.java15.util.Collections.unmodifiableMap
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$KeySet.clear
     [java] *** benchmarks.instrumented.java.util.Hashtable.keySet
     [java] *** buggyprogram.BuggyProgram$User.present
     [java] *** spec.jbb.DeliveryTransaction.preprocess
     [java] *** spec.jbb.JBButil.negativeExpDistribution
     [java] *** benchmarks.instrumented.java.util.StringTokenizer.hasMoreElements
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EmptyIterator.next
     [java] *** stringbuffer.StringBuffer.deleteCharAt
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.getLine
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.copyInto
     [java] *** spec.reporter.HTMLTableGraphGenerator3.toHexString
     [java] *** benchmarks.stringbuffer.StringBuffer.capacity
     [java] *** benchmarks.instrumented.java.util.Random.nextBytes
     [java] *** benchmarks.jpf_test_cases.pipeline.BlockingQueue.take
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.values
     [java] *** benchmarks.instrumented.java15.util.TreeMap$3.remove
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.neq
     [java] *** benchmarks.dstest.VectorEnumerator.nextElement
     [java] *** benchmarks.instrumented.java.util.Vector.ensureCapacityHelper
     [java] *** spec.jbb.Orderline.setQuantity
     [java] *** benchmarks.instrumented.java15.util.Collections.unmodifiableSortedMap
     [java] *** benchmarks.instrumented.java15.util.HashMap$EntrySet.<init>
     [java] *** benchmarks.moldyn.md.runiters
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.lastIndexOf
     [java] *** benchmarks.dstest.MTLinkedHashSetTest.main
     [java] *** net.sf.cache4j.impl.SoftCacheObject.getObject
     [java] *** spec.jbb.Customer.getCreditLimit
     [java] *** benchmarks.instrumented.java15.util.HashMap$Values.size
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap$ImmutableEntry.toString
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.capacity
     [java] *** spec.jbb.Customer.getDistrictId
     [java] *** benchmarks.instrumented.java15.util.LinkedList.addFirst
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList$1.previous
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.firstElement
     [java] *** benchmarks.instrumented.java.util.TreeSet.addAll
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.addAll
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$Entry.remove
     [java] *** spec.reporter.HTMLTableGraphGenerator3.generateString
     [java] *** spec.jbb.PaymentTransaction.getMenuName
     [java] *** example2.ExampleThread1.run
     [java] *** spec.reporter.Metrics.relocateImageResource
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap.entrySet
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setPixelBorderColor
     [java] *** net.sf.cache4j.impl.SynchronizedCache.setCacheConfig
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.addAll
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.equals
     [java] *** benchmarks.instrumented.java.util.Arrays.swap
     [java] *** benchmarks.instrumented.java15.util.AbstractSet.removeAll
     [java] *** benchmarks.instrumented.java.util.HashSet.clear
     [java] *** benchmarks.dstest.MTTreeSetTest.main
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setTableSize
     [java] *** spec.reporter.Metrics.output_properly
     [java] *** benchmarks.instrumented.java15.util.EnumMap$KeyIterator.<init>
     [java] *** spec.reporter.Reporter.getOpt
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.values
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.zeroLengthElementArray
     [java] *** benchmarks.instrumented.java15.util.Vector.lastElement
     [java] *** spec.jbb.TimerData.formatResults
     [java] *** benchmarks.instrumented.java.util.EventObject.getSource
     [java] *** benchmarks.instrumented.java.util.TreeMap$EntryIterator.nextEntry
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.readResolve
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap$EntrySetView.isEmpty
     [java] *** benchmarks.instrumented.java15.util.Vector.indexOf
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.toString
     [java] *** benchmarks.montecarlo.ToResult.set_header
     [java] *** shop.Supplier.run
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap$ImmutableEntry.equals
     [java] *** benchmarks.instrumented.java.util.Hashtable.readObject
     [java] *** benchmarks.instrumented.java15.util.Collections.frequency
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$Values.size
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.listIterator
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.get
     [java] *** benchmarks.instrumented.java15.util.Vector$1.<init>
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.beforeWrite
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList$1.hasPrevious
     [java] *** spec.reporter.TextiReport.testBar
     [java] *** benchmarks.instrumented.java.util.HashMap.hash
     [java] *** benchmarks.dstest.LinkedListDeadlockTest.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap.leftOf
     [java] *** benchmarks.moldyn.JGFMolDynBench.JGFsetsize
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedMap.tailMap
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$EntrySet.contains
     [java] *** benchmarks.instrumented.java.util.Random.nextBoolean
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.privIntLeadingZeros
     [java] *** spec.jbb.Company.getCustomer
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.isEmpty
     [java] *** benchmarks.instrumented.java.util.BitSet.ensureCapacity
     [java] *** spec.jbb.Customer.getWarehouseId
     [java] *** benchmarks.instrumented.java.util.Hashtable$Entry.<init>
     [java] *** benchmarks.dstest.Vector.isEmpty
     [java] *** benchmarks.montecarlo.JGFMonteCarloBench.JGFtidyup
     [java] *** spec.jbb.CustomerReportTransaction.processTransactionLog
     [java] *** benchmarks.instrumented.java.util.Arrays.mergeSort
     [java] *** benchmarks.jpf_test_cases.boundedbuffer.Producer.<init>
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$LinkedHashIterator.hasNext
     [java] *** net.sf.cache4j.impl.EmptyCache.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap$EntrySet.size
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonList.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntrySet.remove
     [java] *** spec.jbb.JBBProperties.getApplicationLoggingLevel
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.<init>
     [java] *** benchmarks.montecarlo.MonteCarloPath.get_nTimeSteps
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.isEmpty
     [java] *** benchmarks.instrumented.java.util.TreeSet.comparator
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$KeySet.remove
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$10
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$11
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.clear
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$12
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.containsAll
     [java] *** net.sf.cache4j.impl.CacheObject.reset
     [java] *** shop.Shop.printCustomer
     [java] *** spec.reporter.GraphImage.setImageQuality
     [java] *** benchmarks.instrumented.java.util.StringTokenizer.nextToken
     [java] *** benchmarks.instrumented.java.util.LinkedList.contains
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.Buffer.put
     [java] *** benchmarks.moldyn.md.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable$EntrySet.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$9
     [java] *** benchmarks.instrumented.java15.util.SubList.subList
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$8
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.tailMap
     [java] *** spec.reporter.Metrics.JasonGraph
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$7
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$6
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$5
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedSet.headSet
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$4
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList$1.hasNext
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.indexOf
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$3
     [java] *** benchmarks.dstest.MTListDeadlock.linkedListDeadlock
     [java] *** spec.reporter.Metrics.getResults
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SynchronizedCollection.size
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$2
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$1
     [java] *** benchmarks.instrumented.java15.util.TreeMap.access$0
     [java] *** spec.jbb.District.addNewOrder
     [java] *** spec.jbb.validity.PepTest.printInterfaces
     [java] *** benchmarks.instrumented.java15.util.EnumMap.size
     [java] *** spec.jbb.JBBmain.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.getTable
     [java] *** benchmarks.instrumented.java.util.Hashtable$Entry.toString
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedMap.comparator
     [java] *** spec.jbb.infra.Util.ScreenException.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$PrivateEntryIterator.hasNext
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableRandomAccessList.subList
     [java] *** spec.jbb.CustomerReportTransaction.process
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.access$2
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.getTotalPuts
     [java] *** spec.jbb.JBButil.create_random_last_name
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList$1.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap.size
     [java] *** benchmarks.instrumented.java15.util.TreeMap.rotateLeft
     [java] *** benchmarks.instrumented.java.util.TimerThread.run
     [java] *** benchmarks.instrumented.java.util.EventObject.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap$ImmutableEntry.getValue
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Configuration.isResultConcurrent
     [java] *** benchmarks.raytracer.Vec.sub
     [java] *** benchmarks.dstest.Vector.firstElement
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$KeySet.iterator
     [java] *** spec.jbb.JBButil.random
     [java] *** spec.jbb.validity.C2.<init>
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.access$3
     [java] *** benchmarks.instrumented.java.util.TreeMap.lastEntry
     [java] *** benchmarks.instrumented.java15.util.EnumMap$KeySet.<init>
     [java] *** benchmarks.instrumented.java.util.ResourceBundleEnumeration.nextElement
     [java] *** benchmarks.montecarlo.ToInitAllTasks.get_dTime
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Values.clear
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.values
     [java] *** spec.jbb.Controller.readProperties
     [java] *** benchmarks.instrumented.java.util.Collections.unmodifiableList
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.insertElementAt
     [java] *** benchmarks.instrumented.java15.util.HashMap$Entry.setValue
     [java] *** benchmarks.stringbuffer.StringBufferTest.main
     [java] *** example2.ExampleThread2.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap.hash
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.indexOf
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.isEmpty
     [java] *** net.sf.cache4j.CacheFactory.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap.clone
     [java] *** benchmarks.instrumented.java.util.Hashtable$EmptyIterator.<init>
     [java] *** benchmarks.montecarlo.MonteCarloPath.get_returnDefinition
     [java] *** benchmarks.instrumented.java.util.Hashtable.isEmpty
     [java] *** benchmarks.instrumented.java.util.Collections.swap
     [java] *** spec.jbb.Stock.initStock
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMapEntryIterator.<init>
     [java] *** spec.jbb.validity.Check.doCheck
     [java] *** benchmarks.instrumented.java.util.TreeMap.colorOf
     [java] *** benchmarks.instrumented.java15.util.LinkedList.getFirst
     [java] *** spec.reporter.GraphImage.setScale
     [java] *** spec.jbb.TimerData.propResults
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers.putWork
     [java] *** benchmarks.instrumented.java.util.Hashtable$Entry.getKey
     [java] *** benchmarks.jgfutil.JGFInstrumentor.startTimer
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonList.contains
     [java] *** benchmarks.montecarlo.MonteCarloPath.getRatePath
     [java] *** benchmarks.montecarlo.Universal.errPrint
     [java] *** spec.jbb.OrderStatusTransaction.processTransactionLog
     [java] *** mergesort.MSort.AvailableThreadsState
     [java] *** shop.Signal.set
     [java] *** benchmarks.dstest.SetDeadlockTest.<init>
     [java] *** benchmarks.instrumented.java.util.Stack.pop
     [java] *** benchmarks.instrumented.java.util.HashMap$KeyIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap.fixAfterInsertion
     [java] *** benchmarks.instrumented.java.util.PropertyPermission.equals
     [java] *** benchmarks.instrumented.java.util.TreeSet.headSet
     [java] *** benchmarks.instrumented.java15.util.Collections$CopiesList.contains
     [java] *** benchmarks.instrumented.java15.util.Hashtable.put
     [java] *** benchmarks.instrumented.java.util.TreeMap.tailMap
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$2$1.hasNext
     [java] *** spec.jbb.OrderStatusTransaction.initializeTransactionLog
     [java] *** benchmarks.instrumented.java15.util.TreeMap.readTreeSet
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.containsKey
     [java] *** spec.reporter.GraphImage.setBackground
     [java] *** net.sf.cache4j.CacheFactory.getInstance
     [java] *** benchmarks.instrumented.java15.util.Collections.sort
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.getMaxMemorySize
     [java] *** spec.jbb.District.removeOldNewOrders
     [java] *** benchmarks.dstest.MTSetDeadlock.linkedHashSetDeadlock
     [java] *** benchmarks.dstest.NoSuchElementException.<init>
     [java] *** net.sf.cache4j.test.BlockingCacheTest$TThread.run
     [java] *** benchmarks.dstest.VectorEnumerator.hasMoreElements
     [java] *** benchmarks.instrumented.java.util.ResourceBundleEnumeration.hasMoreElements
     [java] *** spec.jbb.TimerData.zeroTimerData
     [java] *** benchmarks.instrumented.java.util.BitSet.toString
     [java] *** benchmarks.instrumented.java15.util.Arrays.cloneSubarray
     [java] *** benchmarks.raytracer.RayTracer.main
     [java] *** benchmarks.dstest.MTSetTest.run
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.containsAll
     [java] *** spec.jbb.Company.loadCustomerTable
     [java] *** spec.jbb.validity.PepTest.checkRemD
     [java] *** benchmarks.montecarlo.AppDemo.set_dataDirname
     [java] *** benchmarks.instrumented.java15.util.SubList$1.remove
     [java] *** spec.reporter.TextColumn.add
     [java] *** benchmarks.instrumented.java.util.StringTokenizer.setMaxDelimChar
     [java] *** spec.jbb.TimerData.getTotalTime
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList$1.next
     [java] *** benchmarks.instrumented.java.util.TaskQueue.rescheduleMin
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedMap.tailMap
     [java] *** benchmarks.montecarlo.ToInitAllTasks.get_pathStartValue
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.getValue
     [java] *** benchmarks.instrumented.java.util.Vector.trimToSize
     [java] *** benchmarks.instrumented.java15.util.HashMap.indexFor
     [java] *** benchmarks.instrumented.java15.util.EnumSet.range
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptySet.iterator
     [java] *** spec.jbb.validity.PepTest.checkRemL
     [java] *** benchmarks.instrumented.java15.util.Collections.nCopies
     [java] *** benchmarks.dstest.HashMapFactory.createMap
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList$1.add
     [java] *** benchmarks.instrumented.java.util.PropertyPermissionCollection.readObject
     [java] *** benchmarks.instrumented.java.util.TreeMap$KeyIterator.<init>
     [java] *** benchmarks.instrumented.java.util.Arrays$ArrayList.<init>
     [java] *** benchmarks.raytracer.JGFRayTracerBench.JGFrun
     [java] *** benchmarks.jgfutil.JGFTimer.addtime
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.mul
     [java] *** spec.reporter.Table.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedList.remove
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Generic.main
     [java] *** benchmarks.instrumented.java15.util.ArrayList.isEmpty
     [java] *** benchmarks.instrumented.java15.util.BitSet.hashCode
     [java] *** benchmarks.instrumented.java.util.RandomAccessSubList.subList
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.containsValue
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.putDouble
     [java] *** benchmarks.instrumented.java.util.Vector.setSize
     [java] *** spec.jbb.TimerData.setMeasurementTime
     [java] *** benchmarks.instrumented.java15.util.LinkedList$Entry.<init>
     [java] *** spec.jbb.StockLevelTransaction.setupStockLog
     [java] *** benchmarks.instrumented.java15.util.Vector.writeObject
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.indexOf
     [java] *** spec.jbb.Customer.getCustomerDataParts
     [java] *** benchmarks.instrumented.java15.util.HashMap.containsKey
     [java] *** spec.jbb.validity.StringAndInt.<init>
     [java] *** benchmarks.instrumented.java.util.NoSuchElementException.<init>
     [java] *** benchmarks.instrumented.java.util.Properties.getProperty
     [java] *** spec.jbb.validity.PepTest.checkMathFcts
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.elementAt
     [java] *** benchmarks.raytracer.Vec.comb2
     [java] *** spec.reporter.MultiVMReport.testBar
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$ValueIterator.<init>
     [java] *** benchmarks.montecarlo.ReturnPath.<init>
     [java] *** loader.Loader.go
     [java] *** benchmarks.instrumented.java15.util.Collections.emptyList
     [java] *** stringbuffer.StringBuffer.expandCapacity
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$EntrySet.toArray
     [java] *** benchmarks.montecarlo.PathId.copyInstanceVariables
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$Entry.addBefore
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.indexOf
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_EVICTION_ALGORITHM_FIFO
     [java] *** benchmarks.instrumented.java.util.Collections.iteratorBinarySearch
     [java] *** benchmarks.instrumented.java15.util.Collections.eq
     [java] *** benchmarks.instrumented.java.util.TreeMap.containsKey
     [java] *** benchmarks.instrumented.java15.util.BitSet.recalculateUnitsInUse
     [java] *** spec.jbb.History.getCustomerId
     [java] *** benchmarks.instrumented.java15.util.Collections.indexedBinarySearch
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.retainAll
     [java] *** spec.jbb.TimerData.displayThreadResults
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Values.size
     [java] *** benchmarks.instrumented.java15.util.TreeMap$3.contains
     [java] *** benchmarks.instrumented.java.util.PropertyPermissionCollection.elements
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.read_
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.clear
     [java] *** benchmarks.instrumented.java.util.Collections.access$0
     [java] *** benchmarks.instrumented.java15.util.Hashtable.access$3
     [java] *** benchmarks.instrumented.java15.util.Hashtable.access$2
     [java] *** net.sf.cache4j.impl.EmptyCache.put
     [java] *** benchmarks.instrumented.java15.util.Hashtable.access$5
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$EntryIterator.next
     [java] *** benchmarks.instrumented.java15.util.Hashtable.access$4
     [java] *** benchmarks.instrumented.java15.util.LinkedList.poll
     [java] *** benchmarks.instrumented.java15.util.Hashtable.access$1
     [java] *** benchmarks.instrumented.java15.util.Hashtable.access$0
     [java] *** benchmarks.montecarlo.ReturnPath.set_volatility2
     [java] *** benchmarks.dstest.LinkedListDeadlockTest.main
     [java] *** benchmarks.instrumented.java15.util.AbstractSet.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.size
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntryIterator.hashCode
     [java] *** benchmarks.instrumented.java.util.Random.<init>
     [java] *** benchmarks.instrumented.java.util.ResourceBundle$LoaderReference.getCacheKey
     [java] *** benchmarks.instrumented.java.util.AbstractMap$1.contains
     [java] *** benchmarks.dstest.MTTreeSetTest.<init>
     [java] *** spec.jbb.TimerData.<init>
     [java] *** benchmarks.instrumented.java15.util.Hashtable.remove
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$1.access$1
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.incRemove
     [java] *** benchmarks.instrumented.java.util.AbstractMap$1.size
     [java] *** spec.reporter.Metrics.getHighestScore
     [java] *** spec.jbb.Orderline.setSupplyWarehouse
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.subList
     [java] *** spec.reporter.TextMetrics.wrap
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptySet$1.remove
     [java] *** benchmarks.instrumented.java15.util.TreeMap.fixAfterDeletion
     [java] *** spec.jbb.NewOrderTransaction.init
     [java] *** benchmarks.instrumented.java15.util.Stack.search
     [java] *** benchmarks.instrumented.java.util.HashMap$Entry.getValue
     [java] *** spec.jbb.RunSequencer.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntryIterator.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.get
     [java] *** benchmarks.instrumented.java15.util.TreeMap.entrySet
     [java] *** benchmarks.instrumented.java15.util.LinkedList.removeFirst
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSet.hashCode
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.addAll
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Values.iterator
     [java] *** mergesort.MSort.ResetThreadCounter
     [java] *** benchmarks.instrumented.java15.util.LinkedList.addBefore
     [java] *** benchmarks.instrumented.java.util.AbstractList.equals
     [java] *** benchmarks.instrumented.java15.util.HashMap$EntrySet.contains
     [java] *** benchmarks.instrumented.java15.util.AbstractQueue.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.equals
     [java] *** benchmarks.instrumented.java.util.TreeMap$1.clear
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.getKey
     [java] *** benchmarks.raytracer.Sphere.setCenter
     [java] *** benchmarks.dstest.ArrayListDeadlockTest.main
     [java] *** benchmarks.instrumented.java.util.Arrays.cloneSubarray
     [java] *** benchmarks.instrumented.java.util.ResourceBundle$ResourceCacheKey.clear
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.remove
     [java] *** spec.reporter.HTMLTableGraphGenerator3.generate
     [java] *** benchmarks.raytracer.Vec.sub2
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedRandomAccessList.writeReplace
     [java] *** spec.jbb.Item.getPrice
     [java] *** spec.jbb.CustomerReportTransaction.delete
     [java] *** benchmarks.instrumented.java.util.HashMap.<init>
     [java] *** benchmarks.dstest.MapDeadlockTest.testMap2
     [java] *** benchmarks.dstest.MapDeadlockTest.testMap3
     [java] *** benchmarks.dstest.MapDeadlockTest.testMap1
     [java] *** benchmarks.instrumented.java.util.TreeMap.clear
     [java] *** buggyprogram.BuggyProgram.main
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonSet$1.remove
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.clear
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.addAll
     [java] *** spec.reporter.GraphImage.setPixelType
     [java] *** benchmarks.instrumented.java15.util.Collections.addAll
     [java] *** benchmarks.moldyn.particle.force
     [java] *** benchmarks.instrumented.java.util.Collections$EmptySet$1.<init>
     [java] *** stringbuffer.StringBuffer.readObject
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.putSubstring
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList$1.hasPrevious
     [java] *** spec.jbb.SaveOutput.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Collection.take
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonList.get
     [java] *** benchmarks.instrumented.java.util.Vector.insertElementAt
     [java] *** benchmarks.jpf_test_cases.boundedbuffer.Consumer.run
     [java] *** benchmarks.montecarlo.PathId.set_name
     [java] *** benchmarks.instrumented.java.util.Observable.deleteObserver
     [java] *** benchmarks.instrumented.java15.util.AbstractList.clear
     [java] *** benchmarks.dstest.ArrayListDeadlock2Test.main
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$KeyIterator.next
     [java] *** spec.jbb.validity.PepTest.printTime
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractMap.keySet
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.afterRead
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$10
     [java] *** spec.jbb.validity.PepTest.stringHash
     [java] *** benchmarks.dstest.MTVectorTest.run
     [java] *** benchmarks.instrumented.java15.util.EnumSet.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap.firstKey
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EntrySet.clear
     [java] *** benchmarks.instrumented.java15.util.LinkedList.entry
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.entrySet
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.init
     [java] *** spec.reporter.GraphImage.setForeground
     [java] *** benchmarks.jgfutil.JGFTimer.start
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList$1.remove
     [java] *** spec.reporter.Metrics.wrap
     [java] *** benchmarks.instrumented.java.util.AbstractList.subList
     [java] *** benchmarks.instrumented.java15.util.SubList.<init>
     [java] *** net.sf.cache4j.impl.CacheObject.updateStatistics
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections.swap
     [java] *** benchmarks.instrumented.java15.util.BitSet.unitIndex
     [java] *** loader.Loader.main
     [java] *** shop.Shop.putItem
     [java] *** benchmarks.instrumented.java.util.AbstractList.hashCode
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.IntSrcAbs.getToken
     [java] *** benchmarks.instrumented.java.util.Timer.access$0
     [java] *** net.sf.cache4j.impl.CacheObject.getId
     [java] *** benchmarks.instrumented.java.util.Timer.access$1
     [java] *** benchmarks.instrumented.java.util.Hashtable.containsValue
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonSet$1.next
     [java] *** spec.jbb.TimerData.updateTimerData
     [java] *** benchmarks.instrumented.java.util.TreeMap$EntryIterator.hasNext
     [java] *** benchmarks.instrumented.java.util.HashSet.readObject
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.contains
     [java] *** benchmarks.instrumented.java15.util.SubList.access$5
     [java] *** benchmarks.instrumented.java15.util.SubList.access$4
     [java] *** benchmarks.instrumented.java.util.HashSet.writeObject
     [java] *** spec.jbb.SaveOutput.start
     [java] *** spec.jbb.validity.digestExpected.getArray
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntrySet.clear
     [java] *** benchmarks.instrumented.java15.util.SubList.access$3
     [java] *** benchmarks.instrumented.java15.util.SubList.access$2
     [java] *** benchmarks.instrumented.java15.util.SubList.access$1
     [java] *** net.sf.cache4j.test.BlockingCacheTest.afterEachMethod
     [java] *** benchmarks.montecarlo.JGFMonteCarloBench.JGFvalidate
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.next
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.getLoader
     [java] *** benchmarks.instrumented.java.util.Vector.set
     [java] *** benchmarks.instrumented.java.util.HashMap$EntrySet.size
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.closeDeletion
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.isEmpty
     [java] *** benchmarks.raytracer.JGFRayTracerBench.JGFinitialise
     [java] *** shop.Customer.buy
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1.previous
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.closeDeletion
     [java] *** benchmarks.instrumented.java.util.Collections.get
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.firstKey
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$11
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$12
     [java] *** benchmarks.jpf_test_cases.pipeline.Pipeline.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable.equals
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.access$2
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.access$3
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.access$4
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.access$5
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.access$6
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.access$7
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.access$8
     [java] *** benchmarks.instrumented.java.util.Vector.lastIndexOf
     [java] *** benchmarks.instrumented.java.util.BitSet.bitsLeftOf
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.access$9
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.getValue
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.subMap
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMapEntryIterator.<init>
     [java] *** spec.jbb.CustomerReportTransaction.getMenuName
     [java] *** spec.jbb.validity.PepTest.testStringHash
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.remove
     [java] *** spec.jbb.Orderline.getItemName
     [java] *** spec.jbb.JBBmain.doItForValidation
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.isEmpty
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.containsKey
     [java] *** benchmarks.instrumented.java15.util.HashMap$Values.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$ReverseComparator.<init>
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBDataStorage.remove
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.writeObject
     [java] *** benchmarks.instrumented.java15.util.Hashtable$KeySet.<init>
     [java] *** benchmarks.instrumented.java15.util.LinkedList.toArray
     [java] *** benchmarks.instrumented.java.util.AbstractMap$1$1.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.typeCheck
     [java] *** spec.jbb.PaymentTransaction.process
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.entrySet
     [java] *** spec.jbb.JBBProperties.getRequiredProperty
     [java] *** benchmarks.instrumented.java.util.HashMap$KeySet.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.removeAll
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.access$1
     [java] *** benchmarks.instrumented.java15.util.AbstractList.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.access$0
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedMap.lastKey
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.contains
     [java] *** benchmarks.instrumented.java15.util.BitSet.clone
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonSet.size
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.createEntry
     [java] *** benchmarks.instrumented.java15.util.Vector.clone
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$1$1.<init>
     [java] *** benchmarks.instrumented.java.util.BitSet.intersects
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.clear
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.<init>
     [java] *** benchmarks.instrumented.java15.util.Vector.containsAll
     [java] *** spec.jbb.JBBProperties.getOptionalProperty
     [java] *** benchmarks.jpf_test_cases.pipeline.BlockingQueue.stop
     [java] *** spec.jbb.Order.getOrderlineCount
     [java] *** benchmarks.instrumented.java.util.Hashtable$EntrySet.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.containsAll
     [java] *** spec.reporter.Template.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.toArray
     [java] *** benchmarks.instrumented.java15.util.TreeMap$Entry.<init>
     [java] *** spec.jbb.District.removeFirstNewOrder
     [java] *** spec.jbb.TimerData.getWaitTimes
     [java] *** spec.jbb.District.getId
     [java] *** benchmarks.instrumented.java15.util.TreeMap.get
     [java] *** benchmarks.moldyn.JGFMolDynBench.JGFtidyup
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.notifyWriter
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_MAXMEMORYSIZE
     [java] *** spec.jbb.validity.superClass.bothVarAndMethod
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.putForCreate
     [java] *** benchmarks.montecarlo.AppDemo.set_nRunsMC
     [java] *** benchmarks.instrumented.java.util.AbstractList$ListItr.previousIndex
     [java] *** benchmarks.raytracer.TournamentBarrier.<init>
     [java] *** benchmarks.montecarlo.Utilities.joinString
     [java] *** spec.reporter.Metrics.format
     [java] *** benchmarks.instrumented.java.util.SubList.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap$EntryIterator.next
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.Buffer.get
     [java] *** benchmarks.instrumented.java15.util.SubList$1.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.get
     [java] *** benchmarks.instrumented.java.util.HashMap.createEntry
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedMap.tailMap
     [java] *** net.sf.cache4j.CacheFactory.loadConfig
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMapEntryIterator.hasNext
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntryIterator.toString
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.<init>
     [java] *** net.sf.cache4j.impl.EmptyCache.get
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.firstKey
     [java] *** benchmarks.jgfutil.JGFTimer.longprint
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedRandomAccessList.subList
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$HashIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.indexFor
     [java] *** benchmarks.montecarlo.Utilities.which
     [java] *** benchmarks.stringbuffer.StringBuffer.expandCapacity
     [java] *** benchmarks.instrumented.java15.util.TreeMap.containsKey
     [java] *** benchmarks.montecarlo.MonteCarloPath.get_expectedReturnRate
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Values.iterator
     [java] *** spec.jbb.District.addOrder
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap$EntrySetView.remove
     [java] *** spec.reporter.TemplateCompare.getTemplateString
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntryIterator.toString
     [java] *** benchmarks.instrumented.java15.util.HashMap.loadFactor
     [java] *** spec.jbb.validity.C3.<init>
     [java] *** benchmarks.instrumented.java.util.Observable.deleteObservers
     [java] *** benchmarks.instrumented.java.util.AbstractList$Itr.hasNext
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_BLOCKING
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.checkForComodification
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap$ImmutableEntry.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Configuration.isSome
     [java] *** spec.jbb.Company.buildUniqueCustomerKey
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.equals
     [java] *** benchmarks.instrumented.java.util.LinkedList.addLast
     [java] *** benchmarks.instrumented.java15.util.Arrays.sort2
     [java] *** benchmarks.instrumented.java.util.AbstractList$ListItr.nextIndex
     [java] *** benchmarks.instrumented.java.util.LinkedList.toArray
     [java] *** benchmarks.instrumented.java15.util.Arrays.sort1
     [java] *** benchmarks.instrumented.java.util.AbstractList.indexOf
     [java] *** benchmarks.moldyn.JGFMolDynBench.JGFrun
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.containsKey
     [java] *** benchmarks.instrumented.java.util.Collections.synchronizedList
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.equals
     [java] *** spec.reporter.Table.insertBreakAfterColons
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedSet.comparator
     [java] *** benchmarks.instrumented.java.util.Stack.search
     [java] *** benchmarks.instrumented.java.util.AbstractMap$1.<init>
     [java] *** spec.jbb.Warehouse.receivePayment
     [java] *** benchmarks.raytracer.Vec.normalize
     [java] *** benchmarks.instrumented.java15.util.Hashtable.clone
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.set
     [java] *** spec.jbb.JBBmain.initOutputDir
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.iterator
     [java] *** benchmarks.instrumented.java15.util.TreeMap.incrementSize
     [java] *** benchmarks.instrumented.java15.util.ArrayList.clear
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.equals
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedMap.comparator
     [java] *** net.sf.cache4j.impl.BlockingCache.clean
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.entrySet
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EmptyIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedMap.firstKey
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList$1.previousIndex
     [java] *** net.sf.cache4j.impl.BlockingCache.clear
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.toString
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.equals
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.fillFromUnsorted
     [java] *** benchmarks.instrumented.java15.util.HashMap.clear
     [java] *** net.sf.cache4j.impl.EmptyCache$CacheInfoImpl.getTotalPuts
     [java] *** benchmarks.instrumented.java15.util.HashMap.containsNullValue
     [java] *** benchmarks.stringbuffer.StringBuffer.append
     [java] *** benchmarks.dstest.MTListDeadlock.run
     [java] *** benchmarks.stringbuffer.StringBuffer.replace
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.contains
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSet.<init>
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.write_
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Collection.size
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBDataStorage.<init>
     [java] *** benchmarks.instrumented.java.util.Observable.addObserver
     [java] *** benchmarks.instrumented.java.util.ArrayList.ensureCapacity
     [java] *** benchmarks.instrumented.java15.util.HashSet.writeObject
     [java] *** spec.reporter.Result.ramp_up_int
     [java] *** benchmarks.instrumented.java15.util.EnumMap.access$9
     [java] *** benchmarks.instrumented.java.util.Hashtable.getEnumeration
     [java] *** benchmarks.instrumented.java15.util.EnumMap.access$5
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.add
     [java] *** benchmarks.instrumented.java15.util.EnumMap.access$6
     [java] *** benchmarks.instrumented.java15.util.EnumMap.access$7
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$KeySet.size
     [java] *** benchmarks.instrumented.java15.util.EnumMap.access$8
     [java] *** benchmarks.instrumented.java15.util.EnumMap.access$2
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedSet.headSet
     [java] *** benchmarks.instrumented.java15.util.EnumMap.access$3
     [java] *** benchmarks.montecarlo.AppDemo.processSerial
     [java] *** benchmarks.instrumented.java15.util.EnumMap.access$4
     [java] *** benchmarks.instrumented.java.util.ArrayList.readObject
     [java] *** spec.jbb.validity.PepTest.testVarAndMethodNameClash
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList$1.set
     [java] *** benchmarks.stringbuffer.StringBufferTest.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptySet$1.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections.disjoint
     [java] *** benchmarks.instrumented.java15.util.AbstractList.equals
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Entry.toString
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.previousIndex
     [java] *** spec.jbb.SaveOutput.stop
     [java] *** benchmarks.instrumented.java15.util.Hashtable.keySet
     [java] *** critical.Section.run
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.listIterator
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.getCacheId
     [java] *** benchmarks.instrumented.java15.util.Collections.iteratorBinarySearch
     [java] *** spec.jbb.StockLevelTransaction.init
     [java] *** benchmarks.instrumented.java.util.TreeMap$Entry.setValue
     [java] *** spec.jbb.Company.getMaxItems
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$Values.remove
     [java] *** loader.NewThread.run
     [java] *** benchmarks.montecarlo.ReturnPath.dbgDumpFields
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setAxesLabels
     [java] *** stringbuffer.StringBuffer.getChars
     [java] *** benchmarks.instrumented.java15.util.AbstractQueue.clear
     [java] *** benchmarks.instrumented.java.util.MissingResourceException.getKey
     [java] *** benchmarks.raytracer.JGFRayTracerBench.JGFvalidate
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.toString
     [java] *** spec.jbb.validity.Sub.getPrivate
     [java] *** benchmarks.instrumented.java15.util.Vector.removeElementAt
     [java] *** benchmarks.instrumented.java.util.TreeMap.get
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap$EntrySetView.size
     [java] *** spec.jbb.PaymentTransaction.setupInitLog
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList$1.previousIndex
     [java] *** benchmarks.instrumented.java15.util.BitSet.clear
     [java] *** benchmarks.instrumented.java15.util.SubList.remove
     [java] *** benchmarks.instrumented.java.util.AbstractMap.values
     [java] *** benchmarks.montecarlo.ToInitAllTasks.get_returnDefinition
     [java] *** benchmarks.instrumented.java15.util.BitSet.ensureCapacity
     [java] *** benchmarks.instrumented.java.util.HashSet.iterator
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.getTable
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.equals
     [java] *** benchmarks.instrumented.java15.util.StringTokenizer.<init>
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.containsValue
     [java] *** benchmarks.montecarlo.ReturnPath.get_returnDefinition
     [java] *** benchmarks.instrumented.java15.util.AbstractList.addAll
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$ValueIterator.<init>
     [java] *** spec.reporter.HTMLTableGraphGenerator3.isPixelBorderColorEnabled
     [java] *** spec.reporter.MultiVMReporter.getOpt
     [java] *** benchmarks.raytracer.JGFRayTracerBench.JGFsetsize
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.containsMapping
     [java] *** benchmarks.instrumented.java.util.Vector.toString
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonList.get
     [java] *** spec.reporter.GraphImage.plotLine
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.keySet
     [java] *** spec.jbb.Address.display
     [java] *** benchmarks.instrumented.java15.util.HashMap$HashIterator.<init>
     [java] *** spec.reporter.HTMLTableGraphGenerator3.isBackgroundColorEnabled
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.previousIndex
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.init
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EnumMapIterator.remove
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntrySet.<init>
     [java] *** spec.jbb.NewOrderTransaction.processTransactionLog
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$IdentityHashMapIterator.hasNext
     [java] *** benchmarks.dstest.Vector.trimToSize
     [java] *** spec.jbb.validity.subClass.<init>
     [java] *** benchmarks.montecarlo.ReturnPath.set_pathValue
     [java] *** benchmarks.dstest.MapDeadlockTest.getInput
     [java] *** benchmarks.instrumented.java.util.HashMap.eq
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.subMap
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$1.<init>
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.calculateBundleNames
     [java] *** buggyprogram.BuggyProgram.go
     [java] *** benchmarks.instrumented.java15.util.HashMap.isEmpty
     [java] *** benchmarks.instrumented.java15.util.Hashtable.containsKey
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$HashIterator.<init>
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setPixelSize
     [java] *** benchmarks.instrumented.java15.util.TreeSet.tailSet
     [java] *** benchmarks.dstest.SimpleObject.hashCode
     [java] *** benchmarks.montecarlo.JGFMonteCarloBench.JGFinitialise
     [java] *** buggyprogram.BuggyProgram$User.record
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.afterWrite
     [java] *** benchmarks.instrumented.java15.util.HashMap.<init>
     [java] *** spec.jbb.Orderline.getAmount
     [java] *** benchmarks.instrumented.java15.util.TreeMap$KeyIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractSet.hashCode
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSet.equals
     [java] *** benchmarks.instrumented.java.util.AbstractSet.hashCode
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.lastIndexOf
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.<init>
     [java] *** benchmarks.instrumented.java.util.HashMap$EntrySet.clear
     [java] *** benchmarks.instrumented.java15.util.LinkedList.<init>
     [java] *** spec.jbb.TimerData.getMenuWaitTime
     [java] *** benchmarks.instrumented.java15.util.Collections.reverse
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.equals
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.copyInto
     [java] *** benchmarks.instrumented.java.util.AbstractMap$1.iterator
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1.remove
     [java] *** spec.jbb.PaymentTransaction.processTransactionLog
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$LinkedHashIterator.nextEntry
     [java] *** benchmarks.instrumented.java.util.Random.writeObject
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Enumerator.hasMoreElements
     [java] *** benchmarks.instrumented.java15.util.HashMap$Values.clear
     [java] *** net.sf.cache4j.test.Cache4jTester.runTest
     [java] *** spec.jbb.TimerData.getTotalTimeSquare
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$KeySet.remove
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.resize
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.putAll
     [java] *** benchmarks.instrumented.java.util.Vector.clear
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$EntrySet.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedList.clone
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedMap.headMap
     [java] *** spec.reporter.Reporter.main
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.clear
     [java] *** benchmarks.dstest.SetDeadlockTest.getInput
     [java] *** benchmarks.instrumented.java15.util.Vector.isEmpty
     [java] *** benchmarks.instrumented.java.util.Random.nextFloat
     [java] *** benchmarks.instrumented.java15.util.Collections.checkedSet
     [java] *** benchmarks.instrumented.java15.util.Hashtable.isEmpty
     [java] *** spec.jbb.Order.getOrderlineList
     [java] *** shop.Shop.isEmpty
     [java] *** spec.jbb.Address.setUsingRandom
     [java] *** spec.jbb.District.removeNewOrder
     [java] *** spec.jbb.Order.setCarrierId
     [java] *** example2.ExampleTwo.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$EntryIterator.next
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.isEmpty
     [java] *** spec.reporter.Result.shifted_toRow
     [java] *** spec.jbb.Warehouse.getDistrict
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EntrySet.contains
     [java] *** spec.jbb.validity.LoopBounds.size
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.remove
     [java] *** benchmarks.raytracer.Scene.getView
     [java] *** benchmarks.instrumented.java.util.AbstractSet.<init>
     [java] *** spec.jbb.Customer.display
     [java] *** spec.jbb.validity.subClass.getVal
     [java] *** benchmarks.montecarlo.CallAppDemo.initialise
     [java] *** benchmarks.dstest.Vector.elementAt
     [java] *** benchmarks.instrumented.java.util.TimerTask.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection$1.remove
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.clear
     [java] *** spec.jbb.JBBmain.DoARun
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.removeAll
     [java] *** benchmarks.instrumented.java.util.PropertyPermissionCollection.add
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$Values.iterator
     [java] *** spec.jbb.validity.Super.getName
     [java] *** mergesort.MSort.PrintResults
     [java] *** benchmarks.instrumented.java.util.Collections.nCopies
     [java] *** spec.jbb.Company.addWarehouseThread
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap$ImmutableEntry.equals
     [java] *** benchmarks.instrumented.java.util.Hashtable$KeySet.clear
     [java] *** spec.jbb.DeliveryTransaction.initializeTransactionLog
     [java] *** spec.jbb.infra.Util.XMLTransactionLog.clear
     [java] *** spec.jbb.Company.getInitialNewOrders
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.inRange
     [java] *** spec.jbb.Orderline.setDistrictInfo
     [java] *** benchmarks.instrumented.java.util.EventListenerProxy.getListener
     [java] *** benchmarks.instrumented.java.util.Collections.binarySearch
     [java] *** benchmarks.instrumented.java15.util.Hashtable$KeySet.contains
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.clear
     [java] *** spec.reporter.ReportProps.getString
     [java] *** benchmarks.jgfutil.JGFInstrumentor.printperfTimer
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.entrySet
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.putText
     [java] *** spec.jbb.Stock.getData
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntryIterator.setValue
     [java] *** benchmarks.jgfutil.JGFTimer.reset
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyList.get
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.subList
     [java] *** spec.jbb.Infrastructure.createStorage
     [java] *** spec.jbb.Company.setrunMode
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$EntrySet.clear
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$LinkedHashIterator.nextEntry
     [java] *** stringbuffer.StringBuffer.toString
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntryIterator.<init>
     [java] *** benchmarks.instrumented.java.util.Vector.indexOf
     [java] *** benchmarks.montecarlo.ToInitAllTasks.get_startDate
     [java] *** benchmarks.instrumented.java.util.StringTokenizer.countTokens
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedSet.last
     [java] *** benchmarks.instrumented.java15.util.Collections$1.nextElement
     [java] *** spec.reporter.GraphImage.plotXAxisTicks
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.newEntryIterator
     [java] *** benchmarks.instrumented.java15.util.HashMap.newKeyIterator
     [java] *** benchmarks.instrumented.java.util.HashMap$KeyIterator.next
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.equals
     [java] *** spec.jbb.District.receivePayment
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.addAll
     [java] *** spec.jbb.validity.PepTest.doIntWhileLoop
     [java] *** spec.jbb.JBButil.currentTotalMem
     [java] *** benchmarks.instrumented.java.util.TreeMap.valEquals
     [java] *** benchmarks.jpf_test_cases.rax.FirstTask.<init>
     [java] *** benchmarks.instrumented.java15.util.EmptyStackException.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntryIterator.setValue
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSet.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeSet.writeObject
     [java] *** benchmarks.instrumented.java.util.TaskQueue.fixUp
     [java] *** spec.jbb.JBBmain.main
     [java] *** spec.jbb.Transaction.isRunValid
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.keySet
     [java] *** loader.NewThread.swpArray
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.hashCode
     [java] *** spec.jbb.Infrastructure.<init>
     [java] *** benchmarks.instrumented.java.util.TreeMap.parentOf
     [java] *** benchmarks.stringbuffer.StringBuffer.getChars
     [java] *** benchmarks.instrumented.java15.util.TreeMap.putAll
     [java] *** spec.jbb.StockLevelTransaction.<init>
     [java] *** benchmarks.montecarlo.Utilities.splitString
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.size
     [java] *** benchmarks.instrumented.java.util.Collections.shuffle
     [java] *** benchmarks.instrumented.java15.util.HashMap$KeySet.contains
     [java] *** benchmarks.dstest.Vector.removeElementAt
     [java] *** benchmarks.instrumented.java.util.PropertyPermission.hashCode
     [java] *** benchmarks.instrumented.java.util.AbstractSequentialList.<init>
     [java] *** spec.reporter.TextColumn.main
     [java] *** benchmarks.instrumented.java15.util.HashMap.removeEntryForKey
     [java] *** spec.jbb.TransactionManager.<init>
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.size
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.toArray
     [java] *** benchmarks.instrumented.java.util.Vector.capacity
     [java] *** spec.jbb.NewOrderTransaction.initializeTransactionLog
     [java] *** benchmarks.instrumented.java.util.Collections.unmodifiableSortedMap
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.size
     [java] *** benchmarks.instrumented.java15.util.Vector.iterator
     [java] *** spec.jbb.validity.LoopBounds.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.remove
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyList.contains
     [java] *** benchmarks.instrumented.java.util.HashMap$EntrySet.iterator
     [java] *** spec.jbb.StockLevelTransaction.process
     [java] *** benchmarks.instrumented.java15.util.TreeMap.getEntry
     [java] *** benchmarks.instrumented.java15.util.SubList.add
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.size
     [java] *** benchmarks.instrumented.java15.util.ArrayList.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.get
     [java] *** net.sf.cache4j.impl.LFUComparator.equals
     [java] *** spec.jbb.Stock.incrementOrderCount
     [java] *** benchmarks.instrumented.java15.util.StringTokenizer.isDelimiter
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EntrySet.size
     [java] *** benchmarks.instrumented.java15.util.StringTokenizer.hasMoreElements
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.contains
     [java] *** benchmarks.instrumented.java.util.Hashtable$Enumerator.hasMoreElements
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_IDLE
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap.isEmpty
     [java] *** benchmarks.instrumented.java.util.ArrayList.removeRange
     [java] *** benchmarks.stringbuffer.StringBuffer.copy
     [java] *** spec.jbb.Order.processLines
     [java] *** benchmarks.instrumented.java.util.Collections.synchronizedMap
     [java] *** benchmarks.instrumented.java15.util.TreeMap.buildFromSorted
     [java] *** benchmarks.instrumented.java.util.AbstractSequentialList.remove
     [java] *** benchmarks.dstest.MTSetTest.main
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.equals
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Entry.equals
     [java] *** benchmarks.instrumented.java.util.AbstractSequentialList.add
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.toArray
     [java] *** benchmarks.dstest.MapDeadlockTest.testWeakHashMap
     [java] *** benchmarks.instrumented.java15.util.Arrays.hashCode
     [java] *** critical.Section.<init>
     [java] *** net.sf.cache4j.test.BlockingCacheTest.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.entrySet
     [java] *** benchmarks.montecarlo.AppDemo.initSerial
     [java] *** benchmarks.instrumented.java15.util.Vector.setSize
     [java] *** benchmarks.jgfutil.JGFInstrumentor.retrieveData
     [java] *** benchmarks.jgfutil.JGFInstrumentor.storeData
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.maskNull
     [java] *** spec.reporter.HTMLTableGraphGenerator3.addXYPair
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedSet.tailSet
     [java] *** benchmarks.instrumented.java15.util.TreeMap$1.size
     [java] *** benchmarks.instrumented.java.util.BitSet.size
     [java] *** benchmarks.montecarlo.ToInitAllTasks.set_startDate
     [java] *** benchmarks.instrumented.java.util.AbstractMap$2.<init>
     [java] *** benchmarks.moldyn.mdRunner.run
     [java] *** spec.jbb.Item.setUsingRandom
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$Entry.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.isEmpty
     [java] *** benchmarks.instrumented.java.util.TreeMap.successor
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SrcAbs.choose
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$EntryIterator.next
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedSet.subSet
     [java] *** spec.jbb.MapDataStorage.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.size
     [java] *** spec.jbb.NewOrderTransaction.getMenuName
     [java] *** benchmarks.montecarlo.ToInitAllTasks.set_expectedReturnRate
     [java] *** benchmarks.jgfutil.JGFInstrumentor.addTimer
     [java] *** spec.jbb.Company$runModes.values
     [java] *** benchmarks.instrumented.java15.util.TreeSet.subSet
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Enumerator.nextElement
     [java] *** benchmarks.instrumented.java.util.SubList$1.add
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$KeySet.clear
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap$Entry.hashCode
     [java] *** account.Bank.Service
     [java] *** net.sf.cache4j.impl.EmptyCache.getCacheConfig
     [java] *** benchmarks.montecarlo.AppDemo.get_dataDirname
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.add
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.toString
     [java] *** benchmarks.instrumented.java15.util.HashMap.putForCreate
     [java] *** spec.reporter.TextiReport.print
     [java] *** benchmarks.instrumented.java15.util.Collections$ReverseComparator2.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1.set
     [java] *** benchmarks.instrumented.java15.util.HashSet.readObject
     [java] *** benchmarks.instrumented.java15.util.TreeMap.valEquals
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.hasNext
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.hasPrevious
     [java] *** spec.reporter.MultiVMReport.generateSingleRawFile
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.toString
     [java] *** benchmarks.instrumented.java.util.AbstractList$ListItr.add
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.equals
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setXYPairs
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.putAll
     [java] *** benchmarks.instrumented.java.util.AbstractMap$1$1.hasNext
     [java] *** spec.jbb.validity.PepTest.testArray
     [java] *** spec.jbb.JBBmain.DoAValidationRun
     [java] *** benchmarks.instrumented.java.util.HashMap.loadFactor
     [java] *** stringbuffer.StringBuffer.setCharAt
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedMap.firstKey
     [java] *** benchmarks.instrumented.java.util.Collections.rotate1
     [java] *** benchmarks.montecarlo.MonteCarloPath.set_returnDefinition
     [java] *** benchmarks.jpf_test_cases.rax.Event.wait_for_event
     [java] *** benchmarks.instrumented.java.util.Collections.rotate2
     [java] *** spec.jbb.MapDataStorage.<init>
     [java] *** benchmarks.instrumented.java15.util.Hashtable.get
     [java] *** benchmarks.instrumented.java15.util.TreeMap.comparator
     [java] *** benchmarks.instrumented.java.util.Collections.unmodifiableSet
     [java] *** benchmarks.instrumented.java.util.HashMap.newEntryIterator
     [java] *** benchmarks.raytracer.JGFRayTracerBench.JGFapplication
     [java] *** benchmarks.instrumented.java15.util.TreeMap$3.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1.next
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$KeySet.size
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntrySet.fillEntryArray
     [java] *** spec.jbb.TimerData.getMeasurementTime
     [java] *** benchmarks.instrumented.java.util.Collections.sort
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.put
     [java] *** benchmarks.instrumented.java.util.AbstractMap$SimpleEntry.eq
     [java] *** benchmarks.instrumented.java15.util.TreeSet.clone
     [java] *** benchmarks.instrumented.java.util.Random.readObject
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.zeroLengthKeyArray
     [java] *** benchmarks.instrumented.java15.util.SubList.addAll
     [java] *** net.sf.cache4j.impl.Configurator.loadConfig
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.access$5
     [java] *** benchmarks.instrumented.java.util.HashMap.init
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.access$4
     [java] *** benchmarks.instrumented.java15.util.Vector.toString
     [java] *** spec.jbb.JBBProperties.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.isEmpty
     [java] *** spec.jbb.PaymentTransaction.initializeTransactionLog
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.access$1
     [java] *** spec.reporter.TextBlock.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.access$0
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.access$3
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.access$2
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.putAll
     [java] *** example2.ExampleThread2.run
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.containsKey
     [java] *** net.sf.cache4j.impl.EmptyCache.remove
     [java] *** spec.jbb.NewOrderTransaction.process
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.set
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.hashCode
     [java] *** net.sf.cache4j.impl.EmptyCache.getCacheInfo
     [java] *** benchmarks.instrumented.java15.util.Vector.copyInto
     [java] *** spec.jbb.validity.PepTest.testClass
     [java] *** benchmarks.instrumented.java.util.Stack.push
     [java] *** spec.reporter.Report.<init>
     [java] *** benchmarks.instrumented.java15.util.Random.setSeed
     [java] *** benchmarks.instrumented.java.util.ListResourceBundle.<init>
     [java] *** stringbuffer.StringBufferTest.main
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.keySet
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.maskNull
     [java] *** benchmarks.instrumented.java15.util.HashMap.containsValue
     [java] *** benchmarks.instrumented.java15.util.RandomAccessSubList.<init>
     [java] *** benchmarks.instrumented.java.util.ResourceBundle$ResourceCacheKey.clone
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.removeElement
     [java] *** benchmarks.instrumented.java15.util.EnumMap.equals
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.equals
     [java] *** benchmarks.instrumented.java.util.ArrayList.get
     [java] *** spec.reporter.Metrics.detail
     [java] *** benchmarks.jpf_test_cases.readerswriters.Reader.<init>
     [java] *** benchmarks.instrumented.java.util.TreeMap.valueSearchNonNull
     [java] *** spec.jbb.validity.PepTest.main
     [java] *** benchmarks.raytracer.Vec.negate
     [java] *** benchmarks.instrumented.java.util.AbstractList.lastIndexOf
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntryIterator.hashCode
     [java] *** benchmarks.montecarlo.ReturnPath.get_pathValue
     [java] *** benchmarks.instrumented.java.util.TreeSet.isEmpty
     [java] *** benchmarks.instrumented.java15.util.Collections.copy
     [java] *** spec.jbb.CustomerReportTransaction.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.size
     [java] *** benchmarks.instrumented.java15.util.Collections.singletonMap
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$1.contains
     [java] *** benchmarks.instrumented.java15.util.LinkedList.set
     [java] *** benchmarks.instrumented.java15.util.Hashtable.getEnumeration
     [java] *** benchmarks.montecarlo.ReturnPath.computeVariance
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$KeyIterator.<init>
     [java] *** benchmarks.instrumented.java.util.Vector.contains
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.toString
     [java] *** benchmarks.instrumented.java15.util.HashMap.newValueIterator
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.eq
     [java] *** spec.reporter.Metrics.getSuggestedYAxisTickInterval
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.StandardCountingSemaphore.<init>
     [java] *** spec.jbb.TimerData.updateTPMC
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedSet.headSet
     [java] *** spec.jbb.Controller.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.toString
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap$EntrySetView.<init>
     [java] *** spec.jbb.TransactionManager.setrunMode
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Collection.add
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.getIdleTime
     [java] *** benchmarks.instrumented.java.util.TaskQueue.removeMin
     [java] *** benchmarks.instrumented.java15.util.Hashtable.toString
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$ValueIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntrySet.<init>
     [java] *** benchmarks.jgfutil.JGFInstrumentor.printTimer
     [java] *** spec.jbb.DeliveryTransaction.process
     [java] *** benchmarks.montecarlo.ToResult.get_finalStockPrice
     [java] *** benchmarks.raytracer.Scene.getLights
     [java] *** spec.jbb.Customer.getCreditStatus
     [java] *** benchmarks.instrumented.java.util.AbstractMap.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.get
     [java] *** benchmarks.instrumented.java.util.Hashtable$EntrySet.clear
     [java] *** spec.reporter.TextBlock.addRight
     [java] *** benchmarks.instrumented.java.util.HashMap$Values.<init>
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$EntryIterator.next
     [java] *** benchmarks.instrumented.java.util.Collections.synchronizedSortedMap
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Enumerator.<init>
     [java] *** benchmarks.montecarlo.ToInitAllTasks.set_endDate
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonSet.<init>
     [java] *** example2.ExampleThread2.m
     [java] *** account.Bank.<init>
     [java] *** benchmarks.instrumented.java15.util.Arrays$ArrayList.<init>
     [java] *** benchmarks.instrumented.java.util.SubList$1.previousIndex
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedSet.subSet
     [java] *** benchmarks.instrumented.java.util.Arrays.rangeCheck
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$LinkedHashIterator.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable$EntrySet.iterator
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$KeySet.<init>
     [java] *** benchmarks.stringbuffer.StringBuffer.delete
     [java] *** benchmarks.JGFMolDynBenchSizeA.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$KeyIterator.next
     [java] *** spec.jbb.Warehouse.removeOldestHistory
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.contains
     [java] *** net.sf.cache4j.impl.CacheObject.nextId
     [java] *** spec.jbb.MapDataStorage.get
     [java] *** benchmarks.instrumented.java15.util.Collections.rotate
     [java] *** benchmarks.dstest.MTHashtableTest.main
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.keySet
     [java] *** spec.jbb.Infrastructure.synchStorage
     [java] *** benchmarks.montecarlo.ToInitAllTasks.set_volatility
     [java] *** benchmarks.instrumented.java.util.Vector.removeAll
     [java] *** spec.jbb.OrderStatusTransaction.display
     [java] *** spec.reporter.TableGroupCompare.toString
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.Buffer.<init>
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.remove
     [java] *** benchmarks.montecarlo.RatePath.set_pathValue
     [java] *** benchmarks.instrumented.java.util.BitSet.hashCode
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.hashCode
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonSet.size
     [java] *** shop.Shop.main
     [java] *** benchmarks.instrumented.java15.util.Arrays$ArrayList.indexOf
     [java] *** benchmarks.montecarlo.ToInitAllTasks.set_pathStartValue
     [java] *** benchmarks.instrumented.java.util.HashMap.putAll
     [java] *** spec.jbb.infra.Util.XMLTransactionLog.putLine
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.equals
     [java] *** benchmarks.instrumented.java15.util.BitSet.intersects
     [java] *** benchmarks.instrumented.java15.util.HashMap$KeyIterator.next
     [java] *** benchmarks.instrumented.java.util.TreeMap.rightOf
     [java] *** benchmarks.montecarlo.AppDemo.runThread
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.putChar
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EmptyIterator.hasNext
     [java] *** benchmarks.montecarlo.RatePath.inc_pathValue
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSet.equals
     [java] *** benchmarks.instrumented.java15.util.ArrayList.lastIndexOf
     [java] *** benchmarks.instrumented.java.util.TreeSet.add
     [java] *** benchmarks.instrumented.java.util.TaskQueue.clear
     [java] *** spec.jbb.Order.initOrder
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.incMisses
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.size
     [java] *** spec.jbb.JBBmain.flushLog
     [java] *** benchmarks.moldyn.particle.velavg
     [java] *** spec.jbb.Transaction.getInstance
     [java] *** benchmarks.instrumented.java15.util.BitSet.trailingZeroCnt
     [java] *** benchmarks.instrumented.java.util.PropertyPermission.readObject
     [java] *** benchmarks.instrumented.java.util.Properties.toHex
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedSet.<init>
     [java] *** benchmarks.instrumented.java.util.HashMap$EntrySet.remove
     [java] *** spec.jbb.validity.LoopBounds.constraintAt
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.containsAll
     [java] *** spec.jbb.Stock.<init>
     [java] *** mergesort.MSort.CopyArrays
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSet.hashCode
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.nextKeyIndex
     [java] *** benchmarks.instrumented.java.util.TreeMap.lastKey
     [java] *** spec.jbb.Customer.getDiscountRate
     [java] *** benchmarks.dstest.WeakHashMapFactory.<init>
     [java] *** benchmarks.instrumented.java15.util.SubList$1.previous
     [java] *** benchmarks.instrumented.java.util.Dictionary.<init>
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.maskNull
     [java] *** benchmarks.dstest.MapDeadlockTest.testLinkedHashMap
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.setValue
     [java] *** spec.reporter.Report.print
     [java] *** net.sf.cache4j.impl.Configurator.<init>
     [java] *** benchmarks.raytracer.Ray.toString
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedSet.tailSet
     [java] *** benchmarks.instrumented.java.util.ArrayList.addAll
     [java] *** benchmarks.instrumented.java.util.AbstractSet.equals
     [java] *** spec.jbb.validity.PepTest.doLongWhileLoop
     [java] *** benchmarks.instrumented.java.util.Hashtable$KeySet.<init>
     [java] *** benchmarks.instrumented.java15.util.ArrayList.iterator
     [java] *** spec.reporter.Report.testBar
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$ValueIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.removeAll
     [java] *** benchmarks.instrumented.java.util.SubList.add
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedSet.<init>
     [java] *** benchmarks.instrumented.java.util.ArrayList.indexOf
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.access$3
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.access$2
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntrySet.iterator
     [java] *** net.sf.cache4j.impl.CacheObject.getObject
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.remove
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.access$1
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.access$0
     [java] *** benchmarks.instrumented.java15.util.SubList.set
     [java] *** spec.reporter.TextColumn.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractList$ListItr.previous
     [java] *** benchmarks.instrumented.java.util.Hashtable.toString
     [java] *** net.sf.cache4j.impl.SoftCacheObject.<init>
     [java] *** benchmarks.raytracer.Vec.cross
     [java] *** spec.reporter.Metrics.score_format
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBDataStorage.containsKey
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractSequentialList.addAll
     [java] *** benchmarks.instrumented.java.util.Arrays$ArrayList.get
     [java] *** spec.jbb.MapDataStorage.containsKey
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.<init>
     [java] *** spec.reporter.GraphImage.getSuggestedMinYScale
     [java] *** benchmarks.dstest.LinkedListTest.main
     [java] *** benchmarks.instrumented.java15.util.HashMap$KeySet.size
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedSet.<init>
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.containsKey
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.access$4
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.access$5
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.zeroLengthValueArray
     [java] *** benchmarks.instrumented.java15.util.Vector.removeElement
     [java] *** benchmarks.instrumented.java15.util.HashMap$KeyIterator.<init>
     [java] *** example2.Account.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$LinkedHashIterator.remove
     [java] *** benchmarks.instrumented.java.util.BitSet.trailingZeroCnt
     [java] *** spec.jbb.Order.getEntryTime
     [java] *** benchmarks.instrumented.java.util.PropertyPermission.getMask
     [java] *** spec.reporter.MultiVMTxtReport.testBar
     [java] *** benchmarks.instrumented.java.util.ArrayList.clear
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.privChar
     [java] *** benchmarks.montecarlo.AppDemo.get_dataFilename
     [java] *** spec.jbb.MapDataStorage.size
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.firstElement
     [java] *** benchmarks.instrumented.java.util.LinkedList.size
     [java] *** spec.jbb.Company.getElapsedTime
     [java] *** benchmarks.instrumented.java15.util.Vector.get
     [java] *** spec.reporter.GraphImage.resetConnectPoints
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList$1.hasNext
     [java] *** spec.jbb.Transaction.setSteadyState
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.afterEachMethod
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.access$0
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.ensureCapacity
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.hashCode
     [java] *** benchmarks.instrumented.java.util.Hashtable$Entry.getValue
     [java] *** benchmarks.instrumented.java.util.TimerThread.<init>
     [java] *** spec.reporter.MultiVMReporter.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractMap.equals
     [java] *** benchmarks.jgfutil.JGFTimer.printperf
     [java] *** benchmarks.instrumented.java.util.BitSet.recalculateUnitsInUse
     [java] *** net.sf.cache4j.CacheCleaner.<init>
     [java] *** benchmarks.dstest.LinkedListFactory.createList
     [java] *** benchmarks.instrumented.java15.util.LinkedList.listIterator
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.clone
     [java] *** manager.Trelease.run
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.get
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedSet.comparator
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.access$9
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.access$8
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.access$7
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.access$6
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.add
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.isEmpty
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.containsAll
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.get
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.access$1
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.access$0
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.access$5
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.access$4
     [java] *** benchmarks.instrumented.java15.util.HashSet.contains
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.access$3
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.access$2
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.hashCode
     [java] *** benchmarks.montecarlo.PathId.dbgDumpFields
     [java] *** stringbuffer.StringBuffer.subSequence
     [java] *** benchmarks.instrumented.java.util.HashMap.get
     [java] *** spec.reporter.Metrics.multiCurvesGraph
     [java] *** spec.reporter.TextBlock.add
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.toArray
     [java] *** benchmarks.instrumented.java15.util.ArrayList.size
     [java] *** spec.jbb.District.display
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.subList
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.isEmpty
     [java] *** spec.reporter.Table.toString
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.contains
     [java] *** benchmarks.instrumented.java.util.TreeMap.values
     [java] *** spec.jbb.JBButil.derived_random_init
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet$EnumSetIterator.hasNext
     [java] *** benchmarks.instrumented.java15.util.LinkedList.readObject
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$Entry.recordRemoval
     [java] *** spec.jbb.JBButil.milliSecondsToSleep
     [java] *** benchmarks.montecarlo.AppDemo.set_nTimeStepsMC
     [java] *** benchmarks.instrumented.java15.util.EnumMap.access$10
     [java] *** shop.Supplier.supply
     [java] *** benchmarks.instrumented.java.util.TreeMap.getCeilEntry
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection$1.remove
     [java] *** benchmarks.instrumented.java15.util.LinkedList.offer
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.size
     [java] *** benchmarks.instrumented.java.util.AbstractMap$2$1.<init>
     [java] *** benchmarks.instrumented.java.util.TooManyListenersException.<init>
     [java] *** benchmarks.instrumented.java.util.HashMap.resize
     [java] *** spec.jbb.StockLevelTransaction.setupInitLog
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.iterator
     [java] *** benchmarks.instrumented.java15.util.Arrays$ArrayList.size
     [java] *** benchmarks.instrumented.java15.util.HashMap$Entry.getValue
     [java] *** benchmarks.dstest.Vector.removeElement
     [java] *** spec.jbb.JBBLogFormatter.<init>
     [java] *** net.sf.cache4j.impl.BlockingCache.getCacheInfo
     [java] *** benchmarks.instrumented.java.util.Collections$EmptySet$1.remove
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.clear
     [java] *** benchmarks.dstest.MapDeadlockTest.testIdentityHashMap
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.indexOf
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptySet$1.hasNext
     [java] *** benchmarks.instrumented.java15.util.BitSet.flip
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.trimToSize
     [java] *** spec.jbb.NewOrderTransaction.display
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.complement
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedMap.headMap
     [java] *** spec.reporter.GraphImage.setPixelSize
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Collection.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyList.get
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.set
     [java] *** benchmarks.instrumented.java.util.Properties.save
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.get
     [java] *** spec.jbb.NewOrder.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonSet.contains
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Entry.getKey
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap$ImmutableEntry.setValue
     [java] *** benchmarks.instrumented.java.util.TreeMap$3.iterator
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.<init>
     [java] *** benchmarks.dstest.Vector.lastElement
     [java] *** spec.jbb.DeliveryTransaction.setupDeliveryLog
     [java] *** benchmarks.instrumented.java15.util.Collections.unmodifiableSortedSet
     [java] *** benchmarks.instrumented.java15.util.Arrays.<init>
     [java] *** benchmarks.instrumented.java15.util.ArrayList.fastRemove
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.remove
     [java] *** spec.jbb.Warehouse.getHistoryTable
     [java] *** loader.Loader.<init>
     [java] *** benchmarks.montecarlo.ReturnPath.set_mean
     [java] *** benchmarks.instrumented.java.util.Hashtable$Entry.clone
     [java] *** benchmarks.instrumented.java.util.HashSet.contains
     [java] *** benchmarks.instrumented.java15.util.TreeMap.tailMap
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.clear
     [java] *** spec.reporter.TextMetrics.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonList.<init>
     [java] *** spec.reporter.MultiVMReporter.usage
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.getCacheDesc
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.<init>
     [java] *** benchmarks.dstest.StackFactory.createList
     [java] *** benchmarks.instrumented.java15.util.SubList.iterator
     [java] *** benchmarks.instrumented.java15.util.AbstractList.subList
     [java] *** benchmarks.instrumented.java15.util.SubList$1.nextIndex
     [java] *** benchmarks.instrumented.java.util.TreeMap$ValueIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractMap$SimpleEntry.getKey
     [java] *** spec.jbb.validity.LoopBounds2.size
     [java] *** benchmarks.instrumented.java.util.Hashtable$EmptyIterator.hasNext
     [java] *** benchmarks.instrumented.java.util.TreeMap.computeRedLevel
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntrySet.contains
     [java] *** benchmarks.instrumented.java15.util.Hashtable$ValueCollection.clear
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntrySet.size
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.set
     [java] *** benchmarks.instrumented.java.util.TreeMap$2.size
     [java] *** benchmarks.instrumented.java.util.Collections$EmptySet.iterator
     [java] *** benchmarks.instrumented.java15.util.Hashtable$KeySet.remove
     [java] *** benchmarks.instrumented.java.util.TreeMap$Entry.getKey
     [java] *** benchmarks.instrumented.java.util.Hashtable$Enumerator.next
     [java] *** net.sf.cache4j.impl.SynchronizedCache.getCacheInfo
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap$ImmutableEntry.getKey
     [java] *** benchmarks.instrumented.java.util.SubList.remove
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.isEmpty
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.equals
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.remove
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.getReference
     [java] *** benchmarks.instrumented.java.util.TreeMap.fixAfterInsertion
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.hash
     [java] *** benchmarks.montecarlo.MonteCarloPath.computePathValue
     [java] *** spec.jbb.TimerData.setRampUpTime
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$HashIterator.hasNext
     [java] *** benchmarks.instrumented.java15.util.LinkedList.peek
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.getAlgorithmComparator
     [java] *** benchmarks.dstest.SetDeadlockTest.run
     [java] *** benchmarks.instrumented.java.util.RandomAccessSubList.<init>
     [java] *** spec.jbb.TimerData.rollupTimerData
     [java] *** benchmarks.instrumented.java.util.TreeMap$2.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.addAll
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedMap.headMap
     [java] *** benchmarks.instrumented.java15.util.HashMap$KeySet.iterator
     [java] *** benchmarks.instrumented.java.util.SubList.checkForComodification
     [java] *** benchmarks.instrumented.java15.util.TreeMap$2.contains
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.incHits
     [java] *** benchmarks.dstest.MapDeadlockTest.testHashMap
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.access$4
     [java] *** benchmarks.instrumented.java.util.Random.nextInt
     [java] *** benchmarks.dstest.SimpleObject.equals
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.access$2
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.newEntryIterator
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.access$3
     [java] *** benchmarks.dstest.HashMapFactory.<init>
     [java] *** benchmarks.instrumented.java.util.Vector$1.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections.singleton
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSet.equals
     [java] *** benchmarks.dstest.WeakHashMapDeadlockTest.<init>
     [java] *** spec.jbb.JBButil.create_random_a_string
     [java] *** spec.jbb.Warehouse.loadStockTable
     [java] *** benchmarks.instrumented.java15.util.AbstractList.set
     [java] *** benchmarks.instrumented.java.util.Collections.<init>
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.equals
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$Values.contains
     [java] *** spec.jbb.TreeMapDataStorage.<init>
     [java] *** net.sf.cache4j.impl.BlockingCache.getCacheConfig
     [java] *** benchmarks.instrumented.java15.util.Collections.unmodifiableList
     [java] *** benchmarks.instrumented.java.util.ListResourceBundle.getKeys
     [java] *** benchmarks.jpf_test_cases.pipeline.Stage.run
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.readObject
     [java] *** benchmarks.jpf_test_cases.boundedbuffer.Buffer.put
     [java] *** spec.jbb.DeliveryTransaction.setupInitLog
     [java] *** benchmarks.montecarlo.PriceStock.run
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext
     [java] *** mergesort.MSort.<init>
     [java] *** benchmarks.dstest.TreeMapDeadlockTest.main
     [java] *** spec.jbb.Customer.adjustBalance
     [java] *** benchmarks.instrumented.java15.util.Arrays.sort
     [java] *** benchmarks.instrumented.java15.util.Collections.unmodifiableCollection
     [java] *** net.sf.cache4j.impl.SynchronizedCache.resetCacheObject
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.privText
     [java] *** benchmarks.raytracer.Vec.adds
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.transfer
     [java] *** example2.ExampleTwo.main
     [java] *** benchmarks.instrumented.java.util.Hashtable$ValueCollection.<init>
     [java] *** benchmarks.instrumented.java.util.Properties.<init>
     [java] *** benchmarks.instrumented.java.util.Vector.writeObject
     [java] *** benchmarks.instrumented.java.util.PropertyResourceBundle.<init>
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setBackgroundColor
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedMap.comparator
     [java] *** spec.reporter.TableGroup.toString
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_PUT_GET
     [java] *** benchmarks.moldyn.particle.mkekin
     [java] *** benchmarks.instrumented.java15.util.LinkedList.iterator
     [java] *** benchmarks.instrumented.java.util.TreeMap.firstKey
     [java] *** spec.reporter.GraphImage.getLinearMapY
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$SimpleEntry.hashCode
     [java] *** spec.reporter.GraphImage.getLinearMapX
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers.getResults
     [java] *** net.sf.cache4j.impl.EmptyCache.setCacheConfig
     [java] *** benchmarks.jpf_test_cases.rax.START.main
     [java] *** benchmarks.instrumented.java.util.LinkedList.addBefore
     [java] *** shop.Customer.<init>
     [java] *** benchmarks.instrumented.java.util.Random.nextGaussian
     [java] *** benchmarks.instrumented.java.util.BitSet.set
     [java] *** benchmarks.instrumented.java15.util.BitSet.bitLen
     [java] *** net.sf.cache4j.impl.EmptyCache$CacheInfoImpl.reset
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.<init>
     [java] *** benchmarks.JGFRayTracerBenchSizeA.main
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedMap.<init>
     [java] *** shop.Customer.run
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.div
     [java] *** benchmarks.montecarlo.ToInitAllTasks.get_volatility
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonSet.<init>
     [java] *** benchmarks.dstest.Vector.size
     [java] *** spec.jbb.Company.getInitialOrders
     [java] *** benchmarks.instrumented.java.util.LinkedList.set
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Enumerator.hasNext
     [java] *** benchmarks.jpf_test_cases.boundedbuffer.BoundedBuffer.main
     [java] *** spec.reporter.TextMetrics.detail
     [java] *** benchmarks.instrumented.java15.util.NoSuchElementException.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.clear
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedMap.lastKey
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$CopiesList.size
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$Entry.recordRemoval
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$Values.clear
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection$1.<init>
     [java] *** benchmarks.instrumented.java.util.SubList$1.nextIndex
     [java] *** benchmarks.dstest.Vector.insertElementAt
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableRandomAccessList.writeReplace
     [java] *** benchmarks.instrumented.java.util.HashMap.writeObject
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.remove
     [java] *** benchmarks.instrumented.java15.util.AbstractList.add
     [java] *** benchmarks.instrumented.java15.util.Hashtable.rehash
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.values
     [java] *** benchmarks.montecarlo.ToInitAllTasks.get_header
     [java] *** benchmarks.instrumented.java15.util.TreeMap$2.iterator
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.equals
     [java] *** net.sf.cache4j.impl.BlockingCache.remove
     [java] *** benchmarks.montecarlo.AppDemoThread.run
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.getCacheMisses
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.transfer
     [java] *** benchmarks.instrumented.java.util.Hashtable.clone
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.values
     [java] *** benchmarks.dstest.MTArrayListTest.<init>
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.getMaxSize
     [java] *** benchmarks.instrumented.java15.util.EnumMap$Values.iterator
     [java] *** spec.jbb.TimerData.buildDisplay
     [java] *** spec.jbb.Transaction.setOrderLineCount
     [java] *** benchmarks.instrumented.java15.util.HashMap$Entry.toString
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntryIterator.setValue
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.iterator
     [java] *** benchmarks.instrumented.java.util.Hashtable$ValueCollection.clear
     [java] *** benchmarks.instrumented.java.util.Arrays.<init>
     [java] *** benchmarks.instrumented.java15.util.EnumSet.typeCheck
     [java] *** benchmarks.montecarlo.ToInitAllTasks.set_name
     [java] *** benchmarks.instrumented.java15.util.EnumMap$Values.contains
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedMap.subMap
     [java] *** benchmarks.instrumented.java.util.TreeSet.clone
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.clear
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.putDate
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator.notifyTakerChange
     [java] *** benchmarks.instrumented.java15.util.LinkedList.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.equals
     [java] *** benchmarks.instrumented.java.util.Collections.unmodifiableSortedSet
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.toString
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.clear
     [java] *** benchmarks.instrumented.java.util.BitSet.equals
     [java] *** spec.jbb.validity.digest.crunch_jar
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$KeySet.size
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList$1.<init>
     [java] *** benchmarks.dstest.VectorEnumerator.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonList.iterator
     [java] *** net.sf.cache4j.CacheFactory.setCleanInterval
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey
     [java] *** benchmarks.instrumented.java.util.Hashtable.containsKey
     [java] *** spec.jbb.NewOrder.destroy
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator.<init>
     [java] *** benchmarks.instrumented.java.util.ListResourceBundle.handleGetObject
     [java] *** shop.Signal.<init>
     [java] *** benchmarks.instrumented.java15.util.ArrayList.contains
     [java] *** net.sf.cache4j.impl.CacheObject.setObject
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap$EntrySetView.isEmpty
     [java] *** spec.reporter.Metrics.end_millis_at_wh
     [java] *** benchmarks.dstest.ArrayListDeadlockTest.<init>
     [java] *** spec.reporter.Metrics.benchmarkList
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$KeySet.hashCode
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection$1.hasNext
     [java] *** benchmarks.instrumented.java.util.HashMap.indexFor
     [java] *** benchmarks.instrumented.java.util.Collections$CopiesList.<init>
     [java] *** net.sf.cache4j.test.Cache4jDriver.main
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.access$2
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.access$1
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.access$0
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$IdentityHashMapIterator.remove
     [java] *** benchmarks.instrumented.java.util.StringTokenizer.hasMoreTokens
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.containsAll
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.removeAll
     [java] *** spec.jbb.History.<init>
     [java] *** spec.jbb.validity.LoopBounds.execute
     [java] *** benchmarks.montecarlo.MonteCarloPath.set_expectedReturnRate
     [java] *** mergesort.MSort.Merge
     [java] *** benchmarks.montecarlo.ToInitAllTasks.set_returnDefinition
     [java] *** benchmarks.instrumented.java.util.HashMap$HashIterator.nextEntry
     [java] *** benchmarks.instrumented.java.util.AbstractMap$2$1.next
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.putInt
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.isEmpty
     [java] *** benchmarks.instrumented.java15.util.Hashtable.hashCode
     [java] *** spec.jbb.Transaction.validateRun
     [java] *** benchmarks.instrumented.java.util.Vector.add
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.remove
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableRandomAccessList.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList$1.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.removeMapping
     [java] *** benchmarks.instrumented.java15.util.TreeMap$2.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap.clear
     [java] *** benchmarks.instrumented.java.util.ArrayList.lastIndexOf
     [java] *** benchmarks.moldyn.random.<init>
     [java] *** benchmarks.instrumented.java.util.Properties.writeln
     [java] *** benchmarks.montecarlo.AppDemo.get_results
     [java] *** spec.reporter.GraphImage.plotFlatLine
     [java] *** benchmarks.instrumented.java.util.Arrays.equals
     [java] *** spec.jbb.Customer.incrementPaymentCount
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.iterator
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_CACHE_CLEANER_TTL
     [java] *** benchmarks.instrumented.java.util.Collections.enumeration
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.get
     [java] *** spec.jbb.JBBProperties.setProp
     [java] *** benchmarks.instrumented.java.util.AbstractList$ListItr.hasPrevious
     [java] *** benchmarks.montecarlo.ReturnPath.get_expectedReturnRate
     [java] *** benchmarks.instrumented.java.util.AbstractMap$SimpleEntry.<init>
     [java] *** spec.jbb.validity.PepTest.testFor
     [java] *** benchmarks.instrumented.java15.util.TreeSet.remove
     [java] *** benchmarks.instrumented.java.util.TreeMap.put
     [java] *** manager.Trelease.ReleaseMemoryBlock
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.unmaskNull
     [java] *** stringbuffer.StringBuffer.setLength
     [java] *** net.sf.cache4j.impl.FIFOComparator.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable$KeySet.iterator
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.getCacheHits
     [java] *** benchmarks.instrumented.java.util.BitSet.clear
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.setElementAt
     [java] *** benchmarks.instrumented.java.util.TreeSet.readObject
     [java] *** benchmarks.dstest.LinkedHashMapDeadlockTest.<init>
     [java] *** benchmarks.instrumented.java15.util.ArrayList.RangeCheck
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.resize
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_PUT_GET
     [java] *** benchmarks.instrumented.java.util.HashMap$EntryIterator.<init>
     [java] *** spec.reporter.Result.toDetailRows
     [java] *** shop.Shop.getItem
     [java] *** spec.jbb.Customer.getBalance
     [java] *** benchmarks.jpf_test_cases.pipeline.BlockingQueue.add
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.equals
     [java] *** benchmarks.montecarlo.MonteCarloPath.copyInstanceVariables
     [java] *** spec.reporter.TextBlock.justifyRight
     [java] *** benchmarks.instrumented.java15.util.Arrays$ArrayList.set
     [java] *** benchmarks.instrumented.java.util.AbstractList$Itr.checkForComodification
     [java] *** net.sf.cache4j.test.BlockingCacheTest.nextId
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.nextId
     [java] *** benchmarks.instrumented.java.util.BitSet.cardinality
     [java] *** spec.jbb.validity.PepTest.fiskString
     [java] *** benchmarks.instrumented.java.util.HashMap$Entry.recordAccess
     [java] *** benchmarks.instrumented.java15.util.EnumMap.keySet
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setPixelBorderColorEnabled
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.remove
     [java] *** benchmarks.instrumented.java15.util.TreeSet.isEmpty
     [java] *** benchmarks.instrumented.java.util.LinkedList.getFirst
     [java] *** benchmarks.instrumented.java15.util.EnumMap.isValidKey
     [java] *** benchmarks.instrumented.java.util.HashMap.isEmpty
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$Values.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap.containsValue
     [java] *** benchmarks.montecarlo.MonteCarloPath.set_pathStartValue
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap$EntrySetView.contains
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.removeEldestEntry
     [java] *** benchmarks.instrumented.java15.util.Vector.hashCode
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.allowWriter
     [java] *** spec.reporter.GraphImage.setYAxisLabelsPrecision
     [java] *** spec.jbb.TimerData.setWaitTimes
     [java] *** benchmarks.montecarlo.ReturnPath.computeExpectedReturnRate
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.add
     [java] *** spec.jbb.Company.getTimerDataPtr
     [java] *** benchmarks.instrumented.java.util.AbstractList$ListItr.previous
     [java] *** net.sf.cache4j.impl.EmptyCache$CacheInfoImpl.getCacheMisses
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedSet.headSet
     [java] *** spec.jbb.validity.PepTest.shiftAnd
     [java] *** benchmarks.montecarlo.ReturnPath.set_nPathValue
     [java] *** spec.jbb.Customer.increaseYTD
     [java] *** benchmarks.dstest.MTArrayListTest.main
     [java] *** benchmarks.instrumented.java.util.BitSet.nextSetBit
     [java] *** critical.Critical.main
     [java] *** benchmarks.instrumented.java15.util.TreeMap$1.remove
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedSet.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractMap.putAll
     [java] *** benchmarks.instrumented.java.util.Properties.propertyNames
     [java] *** benchmarks.instrumented.java.util.Hashtable$KeySet.size
     [java] *** spec.jbb.StockLevelTransaction.getMenuName
     [java] *** spec.reporter.GraphImage.setXYAxesLabelsPrecision
     [java] *** benchmarks.instrumented.java15.util.Collections.emptySet
     [java] *** spec.jbb.JBButil.SecondsToSleep
     [java] *** benchmarks.instrumented.java.util.Collections$EmptySet$1.next
     [java] *** spec.jbb.validity.PepTest.testBitOps
     [java] *** benchmarks.instrumented.java.util.LinkedList.clear
     [java] *** spec.jbb.Warehouse.getId
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptySet.size
     [java] *** benchmarks.instrumented.java.util.BitSet.isEmpty
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.getMemorySize
     [java] *** net.sf.cache4j.impl.BlockingCache.resetCacheObject
     [java] *** benchmarks.instrumented.java15.util.TreeMap.key
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.put
     [java] *** benchmarks.instrumented.java.util.EventListenerProxy.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptySet$1.next
     [java] *** spec.jbb.TransactionManager.buildDeck
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.keySet
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.hashCode
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.cleanUpConstructionList
     [java] *** benchmarks.montecarlo.ToResult.get_volatility
     [java] *** benchmarks.montecarlo.JGFMonteCarloBench.JGFrun
     [java] *** benchmarks.instrumented.java.util.HashMap.containsValue
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.getTotalRemoves
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.size
     [java] *** benchmarks.instrumented.java15.lang.Math.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap.putAll
     [java] *** benchmarks.instrumented.java15.util.Hashtable.containsValue
     [java] *** spec.jbb.TransactionManager.isMultiple
     [java] *** benchmarks.instrumented.java.util.PropertyPermission.init
     [java] *** benchmarks.instrumented.java15.util.Collections.reverseOrder
     [java] *** spec.jbb.infra.Util.XMLTransactionLog.copy
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SynchronizedCollection.add
     [java] *** benchmarks.instrumented.java15.util.EnumSet.clone
     [java] *** benchmarks.instrumented.java.util.Hashtable$EmptyEnumerator.hasMoreElements
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.addRange
     [java] *** benchmarks.instrumented.java.util.Properties.enumerate
     [java] *** benchmarks.montecarlo.ReturnPath.get_volatility
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.iterator
     [java] *** benchmarks.montecarlo.ReturnPath.get_variance
     [java] *** benchmarks.raytracer.RayTracer.TransDir
     [java] *** benchmarks.montecarlo.ReturnPath.set_expectedReturnRate
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.IntSrcAbs.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$KeyIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.Vector.firstElement
     [java] *** benchmarks.instrumented.java15.util.EnumMap$KeySet.clear
     [java] *** spec.jbb.infra.Util.XMLTransactionLog.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.entrySet
     [java] *** benchmarks.instrumented.java15.util.SubList.rangeCheck
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSet.equals
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.hashCode
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.lastElement
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSet.<init>
     [java] *** benchmarks.montecarlo.ReturnPath.set_returnDefinition
     [java] *** benchmarks.instrumented.java.util.TreeMap.containsValue
     [java] *** net.sf.cache4j.CacheException.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections.synchronizedCollection
     [java] *** benchmarks.instrumented.java.util.TaskQueue.getMin
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$KeySet.<init>
     [java] *** benchmarks.instrumented.java15.util.EnumMap$ValueIterator.next
     [java] *** benchmarks.dstest.MapFactory.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator.mainAwaitTerminate
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Configuration.<init>
     [java] *** spec.jbb.DeliveryTransaction.init
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.incPut
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.iterator
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.contains
     [java] *** spec.jbb.Company.loadItemTable
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.values
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedSet.first
     [java] *** benchmarks.instrumented.java15.util.TreeMap$2.remove
     [java] *** mergesort.MSort.IncreaseThreadCounter
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$EntrySet.size
     [java] *** benchmarks.instrumented.java15.util.LinkedList.size
     [java] *** benchmarks.instrumented.java15.util.HashMap.capacity
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonSet$1.hasNext
     [java] *** spec.jbb.Company.setPropOutputPrefix
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.getKey
     [java] *** benchmarks.instrumented.java15.util.StringTokenizer.hasMoreTokens
     [java] *** spec.jbb.Company.setPopulationValues
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.clone
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap$ImmutableEntry.hashCode
     [java] *** benchmarks.instrumented.java15.util.AbstractQueue.remove
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers.<init>
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.incThreadCount
     [java] *** benchmarks.instrumented.java15.util.HashMap$HashIterator.remove
     [java] *** benchmarks.raytracer.Vec.dot
     [java] *** benchmarks.instrumented.java.util.Hashtable.entrySet
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptySet.<init>
     [java] *** benchmarks.instrumented.java.util.BitSet.or
     [java] *** spec.jbb.validity.PepTest.checkInst
     [java] *** benchmarks.instrumented.java15.util.Vector.clear
     [java] *** benchmarks.instrumented.java15.util.EnumMap.values
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$Entry.addBefore
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonSet.contains
     [java] *** spec.reporter.TextBlock.toString
     [java] *** spec.reporter.Run.<init>
     [java] *** benchmarks.instrumented.java.util.HashMap.maskNull
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap.size
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.setSize
     [java] *** shop.Shop.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractList.listIterator
     [java] *** benchmarks.instrumented.java.util.LinkedList.lastIndexOf
     [java] *** benchmarks.dstest.MTSetDeadlock.hashSetDeadlock
     [java] *** net.sf.cache4j.impl.SynchronizedCache.newCacheObject
     [java] *** benchmarks.montecarlo.MonteCarloPath.get_pathValue
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SynchronizedCollection.take
     [java] *** benchmarks.instrumented.java15.util.HashMap.createEntry
     [java] *** benchmarks.instrumented.java15.util.AbstractList.iterator
     [java] *** benchmarks.montecarlo.ToTask.<init>
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EntrySet.remove
     [java] *** benchmarks.instrumented.java.util.MissingResourceException.<init>
     [java] *** benchmarks.dstest.MTListTest.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMapEntryIterator.next
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.isEmpty
     [java] *** benchmarks.instrumented.java.util.HashMap$Entry.hashCode
     [java] *** benchmarks.raytracer.Surface.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableRandomAccessList.writeReplace
     [java] *** benchmarks.instrumented.java.util.HashSet.remove
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Values.toArray
     [java] *** benchmarks.instrumented.java.util.Vector.ensureCapacity
     [java] *** spec.jbb.NewOrderTransaction.setupInitLog
     [java] *** benchmarks.instrumented.java.util.HashMap.capacity
     [java] *** manager.Manager.isOtherNoteSet
     [java] *** stringbuffer.StringBuffer.capacity
     [java] *** benchmarks.instrumented.java15.util.Hashtable.reconstitutionPut
     [java] *** benchmarks.jgfutil.JGFInstrumentor.addOpsToTimer
     [java] *** benchmarks.instrumented.java15.util.TreeMap.remove
     [java] *** benchmarks.instrumented.java.util.HashSet.size
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.addAll
     [java] *** benchmarks.instrumented.java15.util.SubList.get
     [java] *** benchmarks.instrumented.java.util.Hashtable.size
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap.keySet
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$KeySet.toArray
     [java] *** spec.jbb.validity.PepTest.testHiddenField
     [java] *** benchmarks.instrumented.java15.util.HashMap$HashIterator.hasNext
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EnumMapIterator.checkLastReturnedIndex
     [java] *** benchmarks.moldyn.TournamentBarrier.setMaxBusyIter
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.access$0
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.access$1
     [java] *** benchmarks.instrumented.java15.util.TreeMap.rightOf
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.access$2
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntryIterator.toString
     [java] *** benchmarks.montecarlo.Utilities.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntryIterator.getKey
     [java] *** benchmarks.instrumented.java15.util.HashMap.newEntryIterator
     [java] *** benchmarks.dstest.StackFactory.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Generic.<init>
     [java] *** spec.jbb.validity.PepTest.<init>
     [java] *** benchmarks.raytracer.TournamentBarrier.setMaxBusyIter
     [java] *** benchmarks.instrumented.java.util.TreeMap.subMap
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$2$1.<init>
     [java] *** net.sf.cache4j.CacheCleaner.setCleanInterval
     [java] *** spec.jbb.Orderline.getItemId
     [java] *** net.sf.cache4j.impl.CacheObject.unlock
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.contains
     [java] *** benchmarks.instrumented.java15.util.ArrayList.addAll
     [java] *** benchmarks.instrumented.java.util.Hashtable$EntrySet.contains
     [java] *** benchmarks.instrumented.java15.util.Random.writeObject
     [java] *** benchmarks.instrumented.java.util.Vector.addElement
     [java] *** benchmarks.instrumented.java15.util.EnumMap.typeCheck
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_REFERENCE_SOFT
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.indexOf
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap$EntrySetView.size
     [java] *** spec.jbb.TimerData.getTPMC
     [java] *** benchmarks.montecarlo.RatePath.getReturnCompounded
     [java] *** benchmarks.montecarlo.ReturnPath.get_volatility2
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedRandomAccessList.subList
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.getBundle
     [java] *** benchmarks.dstest.TreeSetTest.main
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.nextIndex
     [java] *** spec.reporter.MultiVMTxtReport.print
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.containsValue
     [java] *** spec.reporter.Metrics.checkElapsed
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.createEntry
     [java] *** spec.jbb.Company.loadInitialOrders
     [java] *** spec.jbb.JBBmain.commandLineParser
     [java] *** benchmarks.instrumented.java.util.TreeMap.putAll
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.get
     [java] *** benchmarks.instrumented.java.util.Observable.clearChanged
     [java] *** benchmarks.instrumented.java.util.AbstractList.remove
     [java] *** benchmarks.instrumented.java.util.TreeMap$2.iterator
     [java] *** benchmarks.instrumented.java.util.TreeMap.keySet
     [java] *** benchmarks.jpf_test_cases.pipeline.Listener.<init>
     [java] *** benchmarks.raytracer.Scene.setObject
     [java] *** benchmarks.raytracer.Surface.toString
     [java] *** benchmarks.instrumented.java15.util.SubList.removeRange
     [java] *** benchmarks.jpf_test_cases.pipeline.PipeInttest.main
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.iterator
     [java] *** benchmarks.instrumented.java15.util.TreeMap.readObject
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.hashCode
     [java] *** benchmarks.instrumented.java15.util.AbstractList$ListItr.nextIndex
     [java] *** benchmarks.instrumented.java.util.Arrays$ArrayList.toArray
     [java] *** manager.TmemoryHandler.<init>
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.offer
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$LinkedHashIterator.<init>
     [java] *** benchmarks.raytracer.Light.<init>
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBDataStorage.size
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap.isEmpty
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedRandomAccessList.<init>
     [java] *** benchmarks.instrumented.java15.util.Vector.ensureCapacity
     [java] *** net.sf.cache4j.test.Cache4jTester.newInstances
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap$ImmutableEntry.getValue
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue$Itr.hasNext
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.toArray
     [java] *** benchmarks.instrumented.java15.util.AbstractList$ListItr.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.trimToSize
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.iterator
     [java] *** spec.reporter.MultiVMTxtReport.cput
     [java] *** benchmarks.montecarlo.ToResult.get_header
     [java] *** spec.jbb.DeliveryHandler.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedSet.first
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator.notifyPoolChange
     [java] *** spec.jbb.Warehouse.initWarehouse
     [java] *** benchmarks.dstest.StackDeadlockTest.main
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EmptyIterator.remove
     [java] *** spec.reporter.TextBlock.rep
     [java] *** benchmarks.instrumented.java15.util.TreeMap$1.clear
     [java] *** spec.jbb.validity.PepTest.testLookupSwitch
     [java] *** benchmarks.instrumented.java.util.TreeMap$2.contains
     [java] *** benchmarks.instrumented.java15.util.AbstractSequentialList.add
     [java] *** spec.reporter.Report.printOtherProperties
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$1.remove
     [java] *** benchmarks.instrumented.java.util.TaskQueue.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractMap$SimpleEntry.hashCode
     [java] *** spec.jbb.Controller.initOutputDir
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedSet.last
     [java] *** spec.jbb.validity.Super.getPrivate
     [java] *** benchmarks.instrumented.java15.util.Hashtable.<init>
     [java] *** benchmarks.instrumented.java.util.Vector.elements
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$2$1.next
     [java] *** benchmarks.dstest.IdentityHashMapDeadlockTest.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SrcAbs.buildTable
     [java] *** benchmarks.instrumented.java.util.Properties.saveConvert
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.entrySet
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.clear
     [java] *** spec.reporter.Metrics.rampdown_millis_at_wh
     [java] *** spec.reporter.Result.detailRow
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.<init>
     [java] *** benchmarks.instrumented.java.util.TreeSet.remove
     [java] *** benchmarks.montecarlo.Universal.set_prompt
     [java] *** spec.jbb.validity.Super.toString
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$2.iterator
     [java] *** benchmarks.moldyn.JGFMolDynBench.JGFvalidate
     [java] *** spec.jbb.JBBmain.run
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyList.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.remove
     [java] *** benchmarks.montecarlo.Universal.set_DEBUG
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.size
     [java] *** benchmarks.montecarlo.ToTask.set_randomSeed
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$2.contains
     [java] *** benchmarks.raytracer.RayTracer.intersect
     [java] *** benchmarks.raytracer.Barrier.<init>
     [java] *** benchmarks.instrumented.java.util.ResourceBundle$ResourceCacheKey.hashCode
     [java] *** spec.jbb.OrderStatusTransaction.init
     [java] *** benchmarks.instrumented.java15.util.AbstractList$Itr.next
     [java] *** benchmarks.instrumented.java.util.Arrays$ArrayList.size
     [java] *** benchmarks.instrumented.java.util.AbstractMap.put
     [java] *** benchmarks.instrumented.java.util.Vector.toArray
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.set
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.add
     [java] *** benchmarks.instrumented.java15.util.LinkedList.add
     [java] *** benchmarks.raytracer.Vec.toString
     [java] *** benchmarks.dstest.ArrayListDeadlock2Test.<init>
     [java] *** benchmarks.jpf_test_cases.pipeline.Pipeline.stop
     [java] *** benchmarks.instrumented.java.util.Hashtable.values
     [java] *** benchmarks.instrumented.java15.util.TreeMap.clone
     [java] *** benchmarks.instrumented.java15.util.EnumMap$ValueIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.EnumMap.remove
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.toString
     [java] *** benchmarks.instrumented.java15.util.TreeSet.last
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.lastIndexOf
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.privSubstring
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$ValueIterator.next
     [java] *** spec.jbb.Customer.getMiddleName
     [java] *** benchmarks.dstest.ArrayListTest.main
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue$Itr.next
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.entrySet
     [java] *** benchmarks.instrumented.java.util.TreeSet.iterator
     [java] *** spec.reporter.MultiVMTxtReport.get
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EntrySet.add
     [java] *** benchmarks.instrumented.java15.util.StringTokenizer.scanToken
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.eq
     [java] *** net.sf.cache4j.impl.BlockingCache.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$1.hasMoreElements
     [java] *** benchmarks.instrumented.java15.util.Random.next
     [java] *** spec.jbb.TransactionManager.initTransactionManager
     [java] *** benchmarks.instrumented.java15.util.HashMap$Entry.equals
     [java] *** benchmarks.instrumented.java.util.SubList$1.set
     [java] *** benchmarks.instrumented.java.util.Arrays.binarySearch
     [java] *** benchmarks.instrumented.java.util.Arrays.sort
     [java] *** benchmarks.jpf_test_cases.rax.SecondTask.run
     [java] *** net.sf.cache4j.impl.EmptyCache$CacheInfoImpl.toString
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.retainAll
     [java] *** benchmarks.instrumented.java.util.TreeMap.remove
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$Values.iterator
     [java] *** benchmarks.instrumented.java.util.SubList$1.hasNext
     [java] *** spec.reporter.GraphImage.getSuggestedYAxisTickInterval
     [java] *** benchmarks.instrumented.java.util.AbstractMap$1$1.next
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$EntrySet.<init>
     [java] *** benchmarks.instrumented.java15.util.BitSet.bit
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.put
     [java] *** benchmarks.instrumented.java15.util.TreeSet.clear
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap.keySet
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.nextKeyIndex
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.containsKey
     [java] *** spec.jbb.Company$runModes.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedHashSet.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.put
     [java] *** benchmarks.montecarlo.ToInitAllTasks.get_name
     [java] *** benchmarks.instrumented.java15.util.Collections.checkedSortedMap
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$EntryIterator.<init>
     [java] *** spec.jbb.Orderline.getBrandGeneric
     [java] *** spec.reporter.Title.getTitleString
     [java] *** benchmarks.instrumented.java.util.Stack.empty
     [java] *** benchmarks.instrumented.java15.util.SubList.listIterator
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.setValue
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.lastElement
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractSequentialList.set
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator.notifyDoneChange
     [java] *** benchmarks.instrumented.java.util.Collections.replaceAll
     [java] *** benchmarks.dstest.IdentityHashMapFactory.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.containsKey
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.StandardBarrier.releaseAll
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntryIterator.next
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.resize
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.headMap
     [java] *** benchmarks.instrumented.java15.util.Hashtable.equals
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntrySet.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.remove
     [java] *** benchmarks.instrumented.java.util.SubList.subList
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.containsValue
     [java] *** spec.jbb.Transaction.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.size
     [java] *** benchmarks.instrumented.java.util.Vector$1.nextElement
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.remove
     [java] *** net.sf.cache4j.test.Cache4jTester.main
     [java] *** spec.reporter.Metrics.create_warehouse_array
     [java] *** benchmarks.instrumented.java.util.Hashtable$EmptyEnumerator.nextElement
     [java] *** benchmarks.moldyn.mdRunner.<init>
     [java] *** spec.reporter.TextColumn.join
     [java] *** benchmarks.instrumented.java.util.HashMap.newValueIterator
     [java] *** benchmarks.instrumented.java.util.TreeMap.clone
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedMap.subMap
     [java] *** benchmarks.instrumented.java.util.TreeMap.addAllForTreeSet
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.isEmpty
     [java] *** benchmarks.instrumented.java15.util.ArrayList.get
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$KeyIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$Entry.getKey
     [java] *** benchmarks.dstest.Vector.removeAllElements
     [java] *** benchmarks.instrumented.java.util.LinkedList.listIterator
     [java] *** benchmarks.moldyn.TournamentBarrier.DoBarrier
     [java] *** spec.reporter.Result.<init>
     [java] *** benchmarks.instrumented.java.util.SubList$1.next
     [java] *** benchmarks.instrumented.java.util.SubList.access$4
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.Consumer.run
     [java] *** benchmarks.instrumented.java.util.SubList.access$2
     [java] *** benchmarks.instrumented.java15.util.LinkedList.getLast
     [java] *** benchmarks.instrumented.java.util.SubList.access$3
     [java] *** benchmarks.instrumented.java.util.SubList.access$0
     [java] *** benchmarks.instrumented.java.util.SubList.access$1
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$SimpleEntry.eq
     [java] *** benchmarks.instrumented.java.util.HashSet.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.addAll
     [java] *** benchmarks.stringbuffer.StringBuffer.insert
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBSortedStorage.removeFirstElem
     [java] *** spec.jbb.validity.PepTest.testObjectHash
     [java] *** benchmarks.instrumented.java15.util.Collections$ReverseComparator2.compare
     [java] *** benchmarks.instrumented.java.util.TimerThread.mainLoop
     [java] *** net.sf.cache4j.impl.LRUComparator.compare
     [java] *** benchmarks.jpf_test_cases.pipeline.BlockingQueue.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.clone
     [java] *** benchmarks.instrumented.java.util.TreeMap.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.removeAll
     [java] *** benchmarks.instrumented.java15.util.Random.nextLong
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$2$1.remove
     [java] *** benchmarks.instrumented.java15.util.Hashtable.contains
     [java] *** benchmarks.instrumented.java.util.Collections$EmptySet.readResolve
     [java] *** benchmarks.instrumented.java.util.AbstractList.set
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonList.contains
     [java] *** account.Bank.main
     [java] *** spec.jbb.District.lastOrderId
     [java] *** spec.reporter.TextiReport.cput
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EnumMapIterator.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$ValueIterator.next
     [java] *** spec.jbb.Warehouse.getAddress
     [java] *** net.sf.cache4j.CacheFactory.getCache
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_PUT_OBJ_PUT_NULL_GET
     [java] *** account.Bank.checkResult
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.<init>
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.getEntry
     [java] *** spec.reporter.Metrics.check_all
     [java] *** benchmarks.instrumented.java15.util.TreeMap$Entry.hashCode
     [java] *** spec.jbb.Customer.getAddress
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntryIterator.checkLastReturnedIndexForEntryUse
     [java] *** benchmarks.instrumented.java.util.Collections$EmptySet.contains
     [java] *** benchmarks.montecarlo.CallAppDemo.runiters
     [java] *** benchmarks.instrumented.java.util.Arrays$ArrayList.indexOf
     [java] *** spec.jbb.infra.Util.XMLTransactionLog.populateXML
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$ValueIterator.<init>
     [java] *** shop.Shop.writeBug
     [java] *** spec.jbb.ResFilter.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap.entrySet
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWVSNTest.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap$KeySet.remove
     [java] *** benchmarks.dstest.MapDeadlockTest.<init>
     [java] *** benchmarks.instrumented.java15.util.Hashtable.getIterator
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$ValueIterator.<init>
     [java] *** spec.jbb.validity.PepTest.testRandom
     [java] *** benchmarks.dstest.MTListTest.main
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.toString
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_MAXSIZE_AND_MAXMEMORYSIZE
     [java] *** benchmarks.instrumented.java.util.TreeSet.writeObject
     [java] *** benchmarks.instrumented.java15.util.EnumMap.get
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$2.access$1
     [java] *** benchmarks.montecarlo.ReturnPath.computeMean
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.add
     [java] *** benchmarks.instrumented.java.util.Timer.cancel
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.containsValue
     [java] *** benchmarks.jpf_test_cases.pipeline.Listener.run
     [java] *** spec.jbb.JBButil.setLog
     [java] *** benchmarks.instrumented.java.util.AbstractMap.get
     [java] *** benchmarks.instrumented.java.util.Collections$ReverseComparator.compare
     [java] *** benchmarks.instrumented.java.util.Observable.hasChanged
     [java] *** benchmarks.instrumented.java15.util.TreeMap.writeObject
     [java] *** benchmarks.instrumented.java15.util.TreeSet.headSet
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.addEntry
     [java] *** benchmarks.instrumented.java15.util.TreeMap$1.<init>
     [java] *** benchmarks.instrumented.java15.util.StringTokenizer.nextElement
     [java] *** spec.jbb.Company.dumpCustomerTable
     [java] *** benchmarks.dstest.TreeMapFactory.<init>
     [java] *** benchmarks.instrumented.java15.util.EnumSet.noneOf
     [java] *** net.sf.cache4j.impl.CacheObject.getCreateTime
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.removeMapping
     [java] *** benchmarks.dstest.MTSetDeadlock.<init>
     [java] *** benchmarks.jpf_test_cases.boundedbuffer.Consumer.<init>
     [java] *** benchmarks.dstest.ListDeadlockTest.testList3
     [java] *** benchmarks.instrumented.java.util.AbstractMap$SimpleEntry.equals
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.contains
     [java] *** benchmarks.dstest.ListDeadlockTest.testList2
     [java] *** benchmarks.dstest.ListDeadlockTest.testList1
     [java] *** benchmarks.instrumented.java.util.BitSet.nextClearBit
     [java] *** benchmarks.instrumented.java.util.TreeSet.last
     [java] *** benchmarks.instrumented.java.util.Vector.clone
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$KeySet.iterator
     [java] *** buggyprogram.BuggyProgram.acivateUsers
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EntrySet.iterator
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EmptyEnumerator.nextElement
     [java] *** benchmarks.raytracer.Primitive.<init>
     [java] *** benchmarks.instrumented.java.util.TreeMap$Entry.hashCode
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.size
     [java] *** benchmarks.dstest.ListDeadlockTest.testStack
     [java] *** benchmarks.instrumented.java15.util.Hashtable$ValueCollection.size
     [java] *** benchmarks.montecarlo.ToInitAllTasks.set_nTimeSteps
     [java] *** benchmarks.instrumented.java15.util.TreeMap.deleteEntry
     [java] *** benchmarks.montecarlo.PriceStock.setInitAllTasks
     [java] *** net.sf.cache4j.impl.LFUComparator.<init>
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.removeAllElements
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.hashCode
     [java] *** spec.jbb.Customer.updateCustomerData
     [java] *** spec.reporter.TextBlock.main
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_CACHE_CLEANER_IDLE
     [java] *** spec.jbb.Company.<init>
     [java] *** benchmarks.instrumented.java15.util.Vector.setElementAt
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.contains
     [java] *** benchmarks.instrumented.java15.util.Collections.rotate1
     [java] *** benchmarks.instrumented.java.util.HashMap.put
     [java] *** benchmarks.instrumented.java.util.Collections.indexedBinarySearch
     [java] *** benchmarks.instrumented.java15.util.Collections.rotate2
     [java] *** benchmarks.instrumented.java15.util.AbstractSequentialList.iterator
     [java] *** benchmarks.instrumented.java.util.Collections.synchronizedCollection
     [java] *** spec.jbb.District.getAddress
     [java] *** benchmarks.instrumented.java15.util.Vector.remove
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.keySet
     [java] *** net.sf.cache4j.impl.CacheObject.getObjectId
     [java] *** spec.jbb.Orderline.process
     [java] *** spec.jbb.TimerData.getThinkingWaitTime
     [java] *** benchmarks.instrumented.java.util.TreeMap.firstEntry
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedMap.subMap
     [java] *** benchmarks.instrumented.java15.util.EnumMap.writeObject
     [java] *** spec.reporter.GraphImage.plot
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setPixelPadSize
     [java] *** net.sf.cache4j.impl.SynchronizedCache.valid
     [java] *** benchmarks.dstest.MTLinkedListInfiniteLoop.run
     [java] *** benchmarks.instrumented.java.util.ResourceBundle$ResourceCacheKey.setKeyValues
     [java] *** spec.jbb.JBButil.getLog
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap$ImmutableEntry.setValue
     [java] *** benchmarks.instrumented.java.util.HashMap$Entry.recordRemoval
     [java] *** benchmarks.instrumented.java.util.Hashtable$Enumerator.remove
     [java] *** benchmarks.instrumented.java.util.HashMap$EntrySet.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap.lastKey
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.isEmpty
     [java] *** spec.jbb.validity.PepTest.testDiv
     [java] *** benchmarks.jgfutil.JGFTimer.print
     [java] *** benchmarks.instrumented.java.util.Hashtable.clear
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.setSize
     [java] *** benchmarks.instrumented.java15.util.TreeSet.readObject
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.rem
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.put
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedSet.tailSet
     [java] *** net.sf.cache4j.impl.LRUComparator.equals
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.<init>
     [java] *** benchmarks.instrumented.java.util.Observable.<init>
     [java] *** net.sf.cache4j.impl.SynchronizedCache.get
     [java] *** benchmarks.instrumented.java.util.TreeMap$EntryIterator.remove
     [java] *** spec.reporter.TextMetrics.ratioTable
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet$EnumSetIterator.next
     [java] *** benchmarks.instrumented.java15.util.Collections$CopiesList.get
     [java] *** net.sf.cache4j.impl.CacheObject.getLastAccessTime
     [java] *** benchmarks.dstest.LinkedHashMapFactory.createMap
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.toString
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest$TThread.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.removeElementAt
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers.execute
     [java] *** benchmarks.jgfutil.JGFInstrumentor.addTimeToTimer
     [java] *** benchmarks.instrumented.java15.util.AbstractList$ListItr.previousIndex
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.put
     [java] *** benchmarks.instrumented.java15.util.BitSet.and
     [java] *** spec.jbb.Warehouse.trimOrdersForSteadyState
     [java] *** spec.jbb.validity.syncTest.syncMethod2
     [java] *** benchmarks.instrumented.java.util.Vector.removeElementAt
     [java] *** benchmarks.instrumented.java15.util.LinkedList.element
     [java] *** benchmarks.instrumented.java.util.LinkedList.access$0
     [java] *** benchmarks.instrumented.java.util.ResourceBundleEnumeration.<init>
     [java] *** benchmarks.jpf_test_cases.boundedbuffer.Buffer.get
     [java] *** benchmarks.instrumented.java.util.Hashtable$EmptyIterator.remove
     [java] *** benchmarks.instrumented.java15.util.EnumMap.removeMapping
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.toArray
     [java] *** benchmarks.instrumented.java.util.LinkedList.access$3
     [java] *** spec.jbb.Orderline.getSupplyWarehouse
     [java] *** net.sf.cache4j.impl.EmptyCache$CacheInfoImpl.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedList.access$1
     [java] *** benchmarks.instrumented.java.util.LinkedList.access$2
     [java] *** spec.reporter.Metrics.metric
     [java] *** benchmarks.instrumented.java15.util.Dictionary.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.inRange2
     [java] *** benchmarks.instrumented.java.util.HashMap.clone
     [java] *** benchmarks.instrumented.java.util.HashMap$KeySet.iterator
     [java] *** spec.jbb.Order.setAllLocal
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap.entrySet
     [java] *** benchmarks.jpf_test_cases.readerswriters.Writer.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.contains
     [java] *** spec.jbb.DeliveryTransaction.display
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$KeySet.hashCode
     [java] *** benchmarks.montecarlo.RatePath.<init>
     [java] *** benchmarks.instrumented.java15.util.Vector.elements
     [java] *** benchmarks.instrumented.java.util.AbstractMap.containsValue
     [java] *** benchmarks.montecarlo.JGFMonteCarloBench.JGFapplication
     [java] *** benchmarks.instrumented.java15.util.SubList.checkForComodification
     [java] *** benchmarks.instrumented.java.util.PropertyPermission.newPermissionCollection
     [java] *** benchmarks.instrumented.java15.util.Vector.subList
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.addAll
     [java] *** spec.jbb.validity.PepTest.dontDouble
     [java] *** benchmarks.instrumented.java15.util.ConcurrentModificationException.<init>
     [java] *** benchmarks.montecarlo.RatePath.getEndPathValue
     [java] *** benchmarks.montecarlo.PathId.<init>
     [java] *** benchmarks.instrumented.java.util.Collections.synchronizedSet
     [java] *** benchmarks.instrumented.java.util.Hashtable$EmptyEnumerator.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable$Enumerator.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.containsKey
     [java] *** spec.jbb.Customer.addOrder
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.containsAll
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.<init>
     [java] *** benchmarks.instrumented.java.util.TimerTask.scheduledExecutionTime
     [java] *** benchmarks.raytracer.Scene.getObjects
     [java] *** benchmarks.montecarlo.PriceStock.setTask
     [java] *** benchmarks.montecarlo.Universal.<init>
     [java] *** benchmarks.jpf_test_cases.readerswriters.Reader.run
     [java] *** spec.jbb.validity.PepTest.checkInst2
     [java] *** spec.jbb.JBButil.create_random_float_val_return
     [java] *** benchmarks.instrumented.java.util.LinkedList.removeLast
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.entrySet
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.isEmpty
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.toArray
     [java] *** benchmarks.instrumented.java.util.TreeMap$1.remove
     [java] *** spec.jbb.DeliveryHandler.handleDelivery
     [java] *** benchmarks.instrumented.java.util.LinkedList.entry
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap$EntrySetView.iterator
     [java] *** benchmarks.raytracer.Vec.comb
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$1$1.hasNext
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$EntrySet.clear
     [java] *** benchmarks.instrumented.java.util.BitSet.and
     [java] *** benchmarks.instrumented.java15.util.Vector.addElement
     [java] *** benchmarks.dstest.Vector.toString
     [java] *** benchmarks.instrumented.java15.util.HashMap$Entry.getKey
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMapEntryIterator.next
     [java] *** benchmarks.instrumented.java.util.HashMap.containsNullValue
     [java] *** benchmarks.instrumented.java15.util.HashMap.keySet
     [java] *** benchmarks.instrumented.java15.util.Arrays.equals
     [java] *** benchmarks.instrumented.java.util.SubList$1.hasPrevious
     [java] *** benchmarks.instrumented.java.util.Random.nextLong
     [java] *** benchmarks.instrumented.java15.util.AbstractSequentialList.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntrySet.toArray
     [java] *** spec.reporter.ReportProps.getInt
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Worker.<init>
     [java] *** benchmarks.dstest.MTSetTest.<init>
     [java] *** benchmarks.jpf_test_cases.pipeline.PipeInttest.<init>
     [java] *** spec.jbb.Warehouse.getDistrictPtr
     [java] *** benchmarks.instrumented.java.util.Timer$1.<init>
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_PUT_CLEAR_GET
     [java] *** benchmarks.moldyn.random.update
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.access$4
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.access$3
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.access$2
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Entry.getValue
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.access$1
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.access$0
     [java] *** manager.Manager.main
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyList.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.hashCode
     [java] *** benchmarks.instrumented.java.util.ArrayList.<init>
     [java] *** benchmarks.raytracer.Scene.getObject
     [java] *** benchmarks.instrumented.java.util.Vector.setElementAt
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.init
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedMap.firstKey
     [java] *** benchmarks.montecarlo.AppDemo.get_nRunsMC
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.retainAll
     [java] *** spec.reporter.Result.expected_peak
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.StandardBarrier.blockAll
     [java] *** benchmarks.instrumented.java.util.Collections$ReverseComparator.<init>
     [java] *** benchmarks.instrumented.java.util.HashMap$KeySet.remove
     [java] *** benchmarks.instrumented.java15.util.EnumMap.clear
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.iterator
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.keySet
     [java] *** benchmarks.instrumented.java.util.Observable.setChanged
     [java] *** spec.jbb.Company.setOutputs
     [java] *** benchmarks.montecarlo.PathId.set_startDate
     [java] *** benchmarks.instrumented.java.util.HashMap.putForCreate
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.incPut
     [java] *** net.sf.cache4j.impl.SynchronizedCache.remove
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet$EnumSetIterator.remove
     [java] *** spec.jbb.TransactionManager.getrunMode
     [java] *** spec.jbb.TransactionManager.createTxnInstances
     [java] *** example2.ExampleThread1.<init>
     [java] *** spec.reporter.MultiVMReporter.main
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyList.iterator
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.iterator
     [java] *** benchmarks.stringbuffer.StringBuffer.length
     [java] *** benchmarks.instrumented.java15.util.AbstractList.hashCode
     [java] *** spec.reporter.Metrics.dotsGraph
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.<init>
     [java] *** benchmarks.instrumented.java.util.TreeMap.decrementSize
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.arraycopy
     [java] *** spec.jbb.TreeMapDataStorage.removeFirstElem
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedMap.firstKey
     [java] *** spec.jbb.District.getOrderTable
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.Consumer.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractQueue.addAll
     [java] *** net.sf.cache4j.impl.Utils.<init>
     [java] *** spec.reporter.MultiVMReport.checkInstanceTiming
     [java] *** benchmarks.instrumented.java15.util.Collections.get
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.fixDown
     [java] *** benchmarks.instrumented.java15.util.Hashtable$KeySet.clear
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.incMisses
     [java] *** benchmarks.instrumented.java.util.AbstractMap$SimpleEntry.toString
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.removeAt
     [java] *** benchmarks.raytracer.TournamentBarrier.debug
     [java] *** benchmarks.instrumented.java15.util.Collections.synchronizedList
     [java] *** benchmarks.instrumented.java.util.PropertyResourceBundle.handleGetObject
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$Entry.access$0
     [java] *** benchmarks.instrumented.java.util.Hashtable$EmptyIterator.next
     [java] *** benchmarks.instrumented.java.util.Vector.removeRange
     [java] *** benchmarks.instrumented.java.util.TaskQueue.add
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.StandardCountingSemaphore.signal
     [java] *** benchmarks.instrumented.java15.util.SubList$1.previousIndex
     [java] *** benchmarks.raytracer.RayTracerRunner.run0
     [java] *** benchmarks.instrumented.java15.util.HashMap.getEntry
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.privCharFill
     [java] *** spec.jbb.validity.syncTest.main
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.capacity
     [java] *** benchmarks.instrumented.java15.util.Arrays$ArrayList.get
     [java] *** benchmarks.instrumented.java15.util.HashMap.size
     [java] *** spec.jbb.NewOrderTransaction.setDistrictandCustomer
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.listIterator
     [java] *** spec.jbb.Stock.getDistrictInfo
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.equals
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_MAXMEMORYSIZE
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap.values
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap$EntrySetView.remove
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.previous
     [java] *** benchmarks.instrumented.java.util.TreeMap$ValueIterator.next
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet$EnumSetIterator.<init>
     [java] *** benchmarks.instrumented.java.util.TreeMap$KeyIterator.next
     [java] *** benchmarks.instrumented.java15.util.TreeMap.colorOf
     [java] *** spec.jbb.Stock.incrementYTD
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.add
     [java] *** benchmarks.instrumented.java.util.ResourceBundle$1.<init>
     [java] *** spec.reporter.TemplateCompare.<init>
     [java] *** benchmarks.jgfutil.JGFTimer.<init>
     [java] *** benchmarks.instrumented.java15.util.BitSet.getBits
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getValue
     [java] *** benchmarks.instrumented.java15.util.BitSet.bitsRightOf
     [java] *** net.sf.cache4j.impl.BlockingCache.tmapRemove
     [java] *** benchmarks.instrumented.java.util.BitSet.xor
     [java] *** net.sf.cache4j.impl.FIFOComparator.compare
     [java] *** benchmarks.instrumented.java15.util.Collections.checkedMap
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.subList
     [java] *** net.sf.cache4j.impl.FIFOComparator.equals
     [java] *** benchmarks.instrumented.java.util.AbstractMap.containsKey
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1.<init>
     [java] *** benchmarks.raytracer.Vec.mult
     [java] *** benchmarks.montecarlo.Universal.get_DEBUG
     [java] *** benchmarks.instrumented.java.util.Timer$1.finalize
     [java] *** benchmarks.instrumented.java15.util.Arrays.vecswap
     [java] *** benchmarks.instrumented.java15.util.Random.nextDouble
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.remove
     [java] *** benchmarks.dstest.Vector.setElementAt
     [java] *** benchmarks.instrumented.java.util.Hashtable$Enumerator.hasNext
     [java] *** benchmarks.instrumented.java15.util.Vector.insertElementAt
     [java] *** benchmarks.instrumented.java15.util.Arrays.med3
     [java] *** spec.jbb.District.getName
     [java] *** spec.jbb.Customer.getPhone
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptySet.contains
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.putAll
     [java] *** benchmarks.JGFMonteCarloBenchSizeA.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections.synchronizedMap
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.hasPrevious
     [java] *** benchmarks.instrumented.java.util.ResourceBundle$ResourceCacheKey.equals
     [java] *** benchmarks.instrumented.java15.util.TreeMap.headMap
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.putCharFill
     [java] *** stringbuffer.StringBuffer.reverse
     [java] *** net.sf.cache4j.impl.CacheObject.getAccessCount
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap.containsKey
     [java] *** benchmarks.instrumented.java15.util.Stack.peek
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.keySet
     [java] *** benchmarks.instrumented.java.util.AbstractList.iterator
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.toString
     [java] *** spec.reporter.JBBReportFilenameFilter.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.values
     [java] *** benchmarks.instrumented.java15.util.Arrays.binarySearch
     [java] *** spec.jbb.Warehouse.validDistrict
     [java] *** net.sf.cache4j.impl.EmptyCache$CacheInfoImpl.getTotalRemoves
     [java] *** benchmarks.instrumented.java.util.ArrayList.isEmpty
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.values
     [java] *** benchmarks.dstest.Vector.lastIndexOf
     [java] *** spec.jbb.JBBProperties.getProps
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.<init>
     [java] *** spec.jbb.District.retrieveOrder
     [java] *** spec.jbb.PaymentTransaction.delete
     [java] *** benchmarks.instrumented.java15.util.AbstractList$Itr.<init>
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_TTL
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap$EntrySetView.iterator
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.readResolve
     [java] *** benchmarks.JGFMonteCarloBenchSizeA.main
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.containsNullValue
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedMap.subMap
     [java] *** benchmarks.instrumented.java15.util.LinkedList.clone
     [java] *** benchmarks.instrumented.java15.util.Vector.removeAll
     [java] *** benchmarks.instrumented.java15.util.Vector.addAll
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.putAll
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.size
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$1.iterator
     [java] *** benchmarks.instrumented.java15.util.Hashtable$ValueCollection.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptySet.readResolve
     [java] *** benchmarks.instrumented.java.util.TreeMap.comparator
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedSet.subSet
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.removeAll
     [java] *** benchmarks.instrumented.java15.util.LinkedHashSet.iterator
     [java] *** spec.jbb.validity.PepTest.testMisk
     [java] *** benchmarks.instrumented.java15.util.Collections.checkedList
     [java] *** benchmarks.instrumented.java15.util.EnumMap$KeySet.iterator
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.containsNullValue
     [java] *** spec.reporter.TextiReport.configSection
     [java] *** benchmarks.montecarlo.ToInitAllTasks.get_expectedReturnRate
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedMap.comparator
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedSet.tailSet
     [java] *** benchmarks.instrumented.java15.util.TreeSet.iterator
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.<init>
     [java] *** benchmarks.instrumented.java.util.HashSet.add
     [java] *** benchmarks.instrumented.java15.util.EnumMap$KeySet.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.lastIndexOf
     [java] *** spec.jbb.JBBLogFormatter.format
     [java] *** spec.jbb.Customer.incrementDeliveryCount
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.toString
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.transfer
     [java] *** benchmarks.instrumented.java15.util.TreeMap.setColor
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.retainAll
     [java] *** benchmarks.instrumented.java15.util.HashSet.remove
     [java] *** benchmarks.instrumented.java15.util.TreeMap.valueSearchNull
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.equals
     [java] *** benchmarks.montecarlo.MonteCarloPath.writeFile
     [java] *** benchmarks.instrumented.java.util.SubList.addAll
     [java] *** benchmarks.instrumented.java.util.HashMap$KeySet.contains
     [java] *** benchmarks.raytracer.RayTracer.render
     [java] *** benchmarks.instrumented.java15.util.Vector.equals
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$LinkedHashIterator.hasNext
     [java] *** benchmarks.instrumented.java15.util.Stack.push
     [java] *** benchmarks.instrumented.java.util.StringTokenizer.scanToken
     [java] *** spec.jbb.JBButil.<init>
     [java] *** stringbuffer.StringBuffer.insert
     [java] *** spec.jbb.TimerData.getTypingWaitTime
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.entrySet
     [java] *** net.sf.cache4j.CacheFactory.addCache
     [java] *** spec.reporter.Metrics.tableAndGraph
     [java] *** spec.reporter.ReportProps.getDouble
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.size
     [java] *** benchmarks.instrumented.java15.util.Vector.add
     [java] *** mergesort.MSort.DecreaseThreadCounter
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.getTotalPuts
     [java] *** benchmarks.dstest.Vector.ensureCapacityHelper
     [java] *** benchmarks.instrumented.java15.util.HashSet.add
     [java] *** benchmarks.instrumented.java15.util.HashSet.size
     [java] *** benchmarks.instrumented.java15.util.BitSet.bitCount
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedSet.last
     [java] *** spec.jbb.validity.syncTest.syncMethod
     [java] *** spec.jbb.validity.PepTest.checkAllNull
     [java] *** net.sf.cache4j.impl.CacheObject.toString
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SrcAbs.<init>
     [java] *** spec.jbb.District.newOrderIter
     [java] *** spec.reporter.Metrics.ratioOrNa
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_PUT_REMOVE_GET
     [java] *** benchmarks.instrumented.java15.util.HashMap$KeySet.<init>
     [java] *** benchmarks.instrumented.java15.util.HashSet.clone
     [java] *** spec.jbb.PaymentTransaction.init
     [java] *** net.sf.cache4j.impl.SoftCacheObject.setObject
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.Producer.<init>
     [java] *** spec.reporter.TextBlock.join
     [java] *** net.sf.cache4j.test.BlockingCacheTest.decThreadCount
     [java] *** benchmarks.montecarlo.AppDemo.set_tasks
     [java] *** benchmarks.instrumented.java.util.Vector.removeElement
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$KeySet.removeAll
     [java] *** benchmarks.instrumented.java15.util.AbstractList$Itr.hasNext
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.removeAll
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntrySet.toArray
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonSet.iterator
     [java] *** benchmarks.instrumented.java.util.ArrayList.trimToSize
     [java] *** spec.jbb.validity.C1.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$ValueIterator.next
     [java] *** benchmarks.instrumented.java15.util.HashMap$EntrySet.iterator
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.toArray
     [java] *** net.sf.cache4j.impl.BlockingCache.size
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.containsKey
     [java] *** benchmarks.instrumented.java15.util.HashMap.unmaskNull
     [java] *** spec.jbb.Warehouse.retrieveItem
     [java] *** benchmarks.moldyn.JGFMolDynBench.JGFapplication
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$EntrySet.remove
     [java] *** benchmarks.instrumented.java15.util.Hashtable.writeObject
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.getKey
     [java] *** spec.jbb.Stock.incrementRemoteCount
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.getLocale
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.removeAll
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedSet.comparator
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.toString
     [java] *** benchmarks.instrumented.java.util.Vector.retainAll
     [java] *** benchmarks.instrumented.java15.util.ArrayList.toArray
     [java] *** benchmarks.montecarlo.ToTask.set_header
     [java] *** benchmarks.montecarlo.MonteCarloPath.get_fluctuations
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$2.<init>
     [java] *** benchmarks.instrumented.java.util.ArrayList.size
     [java] *** benchmarks.instrumented.java.util.Collections$CopiesList.get
     [java] *** spec.jbb.validity.PepTest.testObjectArray
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList$1.set
     [java] *** benchmarks.instrumented.java.util.BitSet.andNot
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.<init>
     [java] *** spec.jbb.Warehouse.loadHistoryTable
     [java] *** benchmarks.instrumented.java.util.Properties.loadConvert
     [java] *** spec.jbb.RunSequencer.padNumber
     [java] *** benchmarks.instrumented.java.util.Hashtable.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.writeObject
     [java] *** benchmarks.instrumented.java15.util.EnumSet.writeReplace
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.toString
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.<init>
     [java] *** spec.jbb.TransactionManager.readUserValue
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.size
     [java] *** benchmarks.dstest.ListDeadlockTest.testArrayList
     [java] *** spec.reporter.Result.warehouses
     [java] *** benchmarks.instrumented.java.util.Hashtable$ValueCollection.iterator
     [java] *** account.Account.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$EntrySet.contains
     [java] *** spec.jbb.OrderStatusTransaction.getMenuName
     [java] *** spec.reporter.Metrics.compareTableAndGraph
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSet.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyList.readResolve
     [java] *** benchmarks.instrumented.java.util.Arrays.fill
     [java] *** benchmarks.instrumented.java15.util.Arrays$ArrayList.contains
     [java] *** benchmarks.dstest.LinkedHashSetTest.<init>
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setForegroundColor
     [java] *** net.sf.cache4j.CacheFactory.removeCache
     [java] *** spec.jbb.Company.displayResultTotals
     [java] *** benchmarks.instrumented.java15.util.LinkedList.addLast
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$1$1.remove
     [java] *** spec.jbb.District.removeOldestOrder
     [java] *** benchmarks.instrumented.java.util.Collections.lastIndexOfSubList
     [java] *** benchmarks.montecarlo.RatePath.readRatesFile
     [java] *** benchmarks.instrumented.java.util.ListResourceBundle.loadLookup
     [java] *** spec.reporter.Result.rampdown_millis
     [java] *** benchmarks.jpf_test_cases.pipeline.Pipeline.add
     [java] *** net.sf.cache4j.test.BlockingCacheTest.init
     [java] *** benchmarks.montecarlo.RatePath.get_pathValue
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.writeObject
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Configuration.isResultNone
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.unmaskNull
     [java] *** spec.jbb.Orderline.validateAndProcess
     [java] *** benchmarks.dstest.MTSetDeadlock.treeSetDeadlock
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.<init>
     [java] *** spec.jbb.Warehouse.getTaxRate
     [java] *** benchmarks.montecarlo.MonteCarloPath.set_nTimeSteps
     [java] *** shop.Signal.get
     [java] *** benchmarks.instrumented.java15.util.TreeMap$PrivateEntryIterator.<init>
     [java] *** spec.jbb.JBBmain.callReporter
     [java] *** benchmarks.instrumented.java15.util.BitSet.equals
     [java] *** stringbuffer.StringBuffer.charAt
     [java] *** benchmarks.instrumented.java.util.TreeMap$2.clear
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.addAll
     [java] *** spec.reporter.Metrics.start_millis_at_wh
     [java] *** benchmarks.instrumented.java15.util.Vector.contains
     [java] *** benchmarks.instrumented.java.util.Collections.unmodifiableMap
     [java] *** spec.jbb.validity.syncTest.<init>
     [java] *** mergesort.MergeSort.<init>
     [java] *** spec.jbb.validity.StringAndInt.clone
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.clear
     [java] *** benchmarks.montecarlo.Universal.get_UNIVERSAL_DEBUG
     [java] *** benchmarks.instrumented.java15.util.Random.nextFloat
     [java] *** spec.jbb.JBButil.random_init
     [java] *** benchmarks.instrumented.java15.util.Random.nextBoolean
     [java] *** benchmarks.instrumented.java.util.AbstractList.listIterator
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.<init>
     [java] *** spec.reporter.Metrics.BothScore
     [java] *** spec.reporter.Result.toFirstRow
     [java] *** benchmarks.instrumented.java.util.HashSet.isEmpty
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyList.size
     [java] *** benchmarks.instrumented.java15.util.TreeSet.comparator
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.setLocale
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.unmaskNull
     [java] *** spec.jbb.Address.getZip
     [java] *** benchmarks.instrumented.java15.util.TreeMap$Entry.equals
     [java] *** spec.reporter.MultiVMTxtReport.checkInstanceTiming
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedRandomAccessList.writeReplace
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.get
     [java] *** benchmarks.instrumented.java15.util.TreeSet.first
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.insertElementAt
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.equals
     [java] *** benchmarks.instrumented.java15.util.Collections.fill
     [java] *** spec.reporter.MultiVMReport.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.<init>
     [java] *** benchmarks.instrumented.java.util.TreeMap.readTreeSet
     [java] *** benchmarks.dstest.HashMapDeadlockTest.main
     [java] *** benchmarks.dstest.SetDeadlockTest.testLinkedHashSet
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.readObject
     [java] *** spec.jbb.CustomerReportTransaction.setupCustomerLog
     [java] *** net.sf.cache4j.impl.SynchronizedCache.size
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap.<init>
     [java] *** spec.reporter.Metrics.getScoreAt
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.isEmpty
     [java] *** spec.jbb.TimerData.updateBTPS
     [java] *** benchmarks.instrumented.java15.util.LinkedList.get
     [java] *** benchmarks.instrumented.java.util.Hashtable.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$1.iterator
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.toArray
     [java] *** benchmarks.instrumented.java.util.HashMap$EntryIterator.next
     [java] *** spec.jbb.Order.dateOrderlines
     [java] *** benchmarks.instrumented.java.util.Collections.fill
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.removeAll
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedRandomAccessList.<init>
     [java] *** manager.TmemoryHandler.run
     [java] *** benchmarks.instrumented.java15.util.TreeMap$Entry.setValue
     [java] *** benchmarks.instrumented.java15.util.Vector.ensureCapacityHelper
     [java] *** spec.jbb.Company.trimOrdersForSteadyState
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.containsKey
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.access$0
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.access$1
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.<init>
     [java] *** benchmarks.instrumented.java15.util.BitSet.size
     [java] *** benchmarks.instrumented.java.util.TreeMap$Entry.<init>
     [java] *** benchmarks.instrumented.java.util.HashMap.putAllForCreate
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$Entry.recordAccess
     [java] *** spec.jbb.Orderline.getStockPtr
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.isEmpty
     [java] *** benchmarks.instrumented.java.util.TreeMap.getEntry
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedMap.firstKey
     [java] *** spec.jbb.validity.PepTest.checkInterfaceInstanceOf
     [java] *** benchmarks.instrumented.java15.util.AbstractQueue.element
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$SimpleEntry.toString
     [java] *** benchmarks.instrumented.java.util.Vector.size
     [java] *** spec.reporter.HTMLTableGraphGenerator3.getInverseLinearMapY
     [java] *** spec.reporter.HTMLTableGraphGenerator3.getInverseLinearMapX
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.readResolve
     [java] *** benchmarks.dstest.Vector.setSize
     [java] *** benchmarks.instrumented.java.util.Collections.reverseOrder
     [java] *** spec.jbb.JBBProperties.checkCompliance
     [java] *** spec.jbb.JBButil.create_a_string_with_original
     [java] *** benchmarks.montecarlo.Universal.dbgPrint
     [java] *** benchmarks.instrumented.java15.util.BitSet.nextSetBit
     [java] *** benchmarks.instrumented.java15.util.Vector.elementAt
     [java] *** spec.jbb.JBBmain.increaseNumWarehouses
     [java] *** benchmarks.dstest.HashMapDeadlockTest.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.removeMapping
     [java] *** net.sf.cache4j.impl.Configurator.getInt
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.add
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$EntrySet.toArray
     [java] *** spec.jbb.TransactionManager.runTxn
     [java] *** spec.reporter.Metrics.<init>
     [java] *** spec.jbb.Item.<init>
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EmptyEnumerator.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap.containsKey
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$KeySet.remove
     [java] *** benchmarks.instrumented.java15.util.EnumMap$KeyIterator.next
     [java] *** spec.reporter.TextColumn.size
     [java] *** spec.jbb.validity.superClass.getVal
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.toString
     [java] *** benchmarks.instrumented.java.util.Vector.<init>
     [java] *** benchmarks.raytracer.Isect.<init>
     [java] *** spec.reporter.GraphImage.plotYAxisTicks
     [java] *** spec.jbb.PaymentTransaction.<init>
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.lastKey
     [java] *** benchmarks.montecarlo.ToResult.set_pathValue
     [java] *** spec.jbb.Company.setMultiJVMRampingValues
     [java] *** benchmarks.dstest.ListDeadlockTest.testLinkedList
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_PUT_REMOVE_GET
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.setValue
     [java] *** benchmarks.instrumented.java15.util.TreeMap.decrementSize
     [java] *** spec.jbb.History.getDate
     [java] *** spec.jbb.History.initHistory
     [java] *** benchmarks.instrumented.java15.util.StringTokenizer.skipDelimiters
     [java] *** benchmarks.dstest.MTSetDeadlock.run
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.clear
     [java] *** benchmarks.instrumented.java15.util.Hashtable.values
     [java] *** benchmarks.dstest.StackDeadlockTest.<init>
     [java] *** benchmarks.instrumented.java15.util.Arrays.deepToString
     [java] *** spec.jbb.validity.PepTest.printRemD
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.clone
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$KeySet.contains
     [java] *** benchmarks.instrumented.java.util.Properties.load
     [java] *** benchmarks.instrumented.java.util.Timer.schedule
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.readResolve
     [java] *** spec.jbb.Company.prepareForStart
     [java] *** benchmarks.instrumented.java15.util.Vector.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$2.size
     [java] *** benchmarks.instrumented.java.util.AbstractMap$2.contains
     [java] *** benchmarks.montecarlo.ToResult.set_expectedReturnRate
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.putAll
     [java] *** spec.jbb.Item.getId
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedSet.subSet
     [java] *** benchmarks.instrumented.java15.util.TreeMap.values
     [java] *** spec.jbb.TimerData.calculateResponseTimeStats
     [java] *** benchmarks.instrumented.java15.util.AbstractList.indexOf
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap$Values.iterator
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.equals
     [java] *** spec.reporter.TableGroup.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$IdentityHashMapIterator.nextIndex
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.hashCode
     [java] *** spec.reporter.Metrics.score_at_wh
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.iterator
     [java] *** benchmarks.instrumented.java.util.ArrayList.set
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.previous
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedSet.last
     [java] *** benchmarks.instrumented.java.util.Arrays.vecswap
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.writeObject
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Configuration.isAsynchronous
     [java] *** benchmarks.instrumented.java.util.PropertyPermissionCollection.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.readResolve
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBSortedStorage.<init>
     [java] *** spec.jbb.RunSequencer.getSeqString
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.StandardBarrier.await
     [java] *** mergesort.MergeSort.main
     [java] *** benchmarks.instrumented.java15.util.TreeMap.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedList.getLast
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$IdentityHashMapIterator.remove
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.getLineCount
     [java] *** spec.jbb.validity.PepTest.testExc6
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue$Itr.remove
     [java] *** spec.jbb.validity.PepTest.testExc7
     [java] *** spec.jbb.validity.PepTest.testExc4
     [java] *** spec.jbb.validity.PepTest.testExc5
     [java] *** benchmarks.instrumented.java.util.Hashtable.hashCode
     [java] *** spec.jbb.validity.PepTest.testExc2
     [java] *** benchmarks.instrumented.java.util.TreeSet.tailSet
     [java] *** spec.jbb.validity.PepTest.testExc3
     [java] *** spec.jbb.validity.PepTest.testExc1
     [java] *** benchmarks.dstest.IdentityHashMapFactory.createMap
     [java] *** benchmarks.instrumented.java.util.Hashtable.get
     [java] *** benchmarks.raytracer.Scene.getLight
     [java] *** benchmarks.dstest.Vector.addElement
     [java] *** benchmarks.montecarlo.PathId.set_dTime
     [java] *** benchmarks.montecarlo.ToInitAllTasks.set_header
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$1.next
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$KeyIterator.next
     [java] *** spec.jbb.District.<init>
     [java] *** benchmarks.raytracer.Ray.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractList.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSet.hashCode
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.decThreadCount
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.expungeStaleEntries
     [java] *** benchmarks.dstest.ArrayListFactory.createList
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.destroy
     [java] *** spec.reporter.Result.TwoRow
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$Entry.access$0
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.setElementAt
     [java] *** benchmarks.stringbuffer.StringBuffer.toString
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.containsKey
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.size
     [java] *** spec.reporter.HTMLTableGraphGenerator3.clearXYPairs
     [java] *** benchmarks.instrumented.java.util.ResourceBundle$LoaderReference.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList$1.previous
     [java] *** spec.jbb.validity.PepTest.checkClose
     [java] *** benchmarks.stringbuffer.StringBufferTest.run
     [java] *** benchmarks.instrumented.java.util.TreeMap$1.contains
     [java] *** spec.jbb.CustomerReportTransaction.initializeTransactionLog
     [java] *** benchmarks.instrumented.java15.util.EnumMap$Values.clear
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$EntrySet.remove
     [java] *** benchmarks.dstest.ListDeadlockTest.run
     [java] *** spec.jbb.validity.Super.getProtected
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.findBundle
     [java] *** spec.jbb.validity.Sub.getProtected
     [java] *** benchmarks.instrumented.java15.util.HashMap$Entry.<init>
     [java] *** spec.jbb.Item.getBrandInfo
     [java] *** spec.jbb.Controller.main
     [java] *** benchmarks.instrumented.java.util.AbstractMap.toString
     [java] *** benchmarks.instrumented.java15.util.ArrayList.writeObject
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedRandomAccessList.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonSet.access$0
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.checkForComodification
     [java] *** benchmarks.instrumented.java.util.Arrays.asList
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.clone
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$KeySet.clear
     [java] *** benchmarks.instrumented.java15.util.TreeMap.containsValue
     [java] *** benchmarks.instrumented.java.util.Vector.subList
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.toString
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet$EnumSetIterator.next
     [java] *** benchmarks.instrumented.java15.util.Collections.synchronizedSortedSet
     [java] *** benchmarks.instrumented.java.util.SubList.removeRange
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.putDollars
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonList.size
     [java] *** stringbuffer.StringBuffer.getValue
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.get
     [java] *** spec.jbb.validity.PepTest.checkInstanceOf
     [java] *** benchmarks.montecarlo.AppDemo.get_nTimeStepsMC
     [java] *** benchmarks.instrumented.java15.util.ArrayList.add
     [java] *** benchmarks.instrumented.java.util.Properties.store
     [java] *** benchmarks.instrumented.java15.util.AbstractSequentialList.get
     [java] *** benchmarks.instrumented.java.util.HashMap$HashIterator.remove
     [java] *** benchmarks.instrumented.java.util.Hashtable$KeySet.contains
     [java] *** benchmarks.instrumented.java.util.Collections.copy
     [java] *** benchmarks.instrumented.java15.util.Hashtable$KeySet.size
     [java] *** spec.reporter.TextiReport.get
     [java] *** benchmarks.dstest.SetDeadlockTest.main
     [java] *** benchmarks.instrumented.java15.util.ArrayList.clone
     [java] *** benchmarks.instrumented.java.util.TreeMap$EntryIterator.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractMap.<init>
     [java] *** net.sf.cache4j.test.Cache4jTester.fill
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonSet$1.remove
     [java] *** benchmarks.dstest.MTHashtableTest.run
     [java] *** benchmarks.instrumented.java.util.AbstractMap$2.iterator
     [java] *** benchmarks.instrumented.java.util.TreeSet.clear
     [java] *** benchmarks.instrumented.java15.util.AbstractList.lastIndexOf
     [java] *** spec.jbb.TreeMapDataStorage.getMedianValue
     [java] *** spec.reporter.Result.meas_int
     [java] *** benchmarks.instrumented.java15.util.AbstractQueue.add
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedSet.<init>
     [java] *** benchmarks.dstest.HashSetTest.run
     [java] *** net.sf.cache4j.impl.Utils.copy
     [java] *** benchmarks.instrumented.java.util.TreeMap$2.remove
     [java] *** benchmarks.instrumented.java15.util.SubList$1.set
     [java] *** benchmarks.instrumented.java.util.AbstractMap$2$1.remove
     [java] *** benchmarks.instrumented.java15.util.EnumMap.containsMapping
     [java] *** benchmarks.instrumented.java15.util.TreeMap.firstEntry
     [java] *** spec.jbb.validity.Check.checkSubclassing
     [java] *** benchmarks.instrumented.java15.util.HashSet.<init>
     [java] *** net.sf.cache4j.test.Cache4jTester.log
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.get
     [java] *** benchmarks.instrumented.java.util.Vector.get
     [java] *** benchmarks.montecarlo.AppDemo.get_tasks
     [java] *** spec.reporter.Result.end_millis
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.<init>
     [java] *** spec.jbb.JBBmain.startJBBthread
     [java] *** spec.jbb.TransactionManager.goValidate
     [java] *** benchmarks.instrumented.java.util.AbstractSet.removeAll
     [java] *** benchmarks.dstest.Vector.indexOf
     [java] *** benchmarks.instrumented.java.util.Hashtable$ValueCollection.size
     [java] *** net.sf.cache4j.impl.BlockingCache.access$0
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.retainAll
     [java] *** benchmarks.instrumented.java.util.Hashtable$Entry.equals
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.getStringArray
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.indexFor
     [java] *** benchmarks.instrumented.java15.util.Hashtable$KeySet.iterator
     [java] *** benchmarks.instrumented.java.util.BitSet.clone
     [java] *** benchmarks.instrumented.java.util.Hashtable$Enumerator.nextElement
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.get
     [java] *** benchmarks.stringbuffer.StringBuffer.setLength
     [java] *** spec.jbb.Order.getId
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Configuration.isSynchronous
     [java] *** spec.jbb.TimerData.accumulateTransactionStats
     [java] *** spec.jbb.PaymentTransaction.setupPaymentLog
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.toString
     [java] *** benchmarks.instrumented.java15.util.ArrayList.readObject
     [java] *** benchmarks.moldyn.random.seed
     [java] *** benchmarks.instrumented.java15.util.EnumMap.entrySet
     [java] *** spec.jbb.Company.startValidation
     [java] *** benchmarks.instrumented.java15.util.SubList$1.hasNext
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntryIterator.getValue
     [java] *** benchmarks.instrumented.java.util.TreeMap.incrementSize
     [java] *** spec.jbb.Orderline.getDeliveryDateTime
     [java] *** benchmarks.raytracer.Sphere.intersect
     [java] *** benchmarks.montecarlo.RatePath.getReturnNonCompounded
     [java] *** benchmarks.instrumented.java.util.BitSet.bit
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.getValue
     [java] *** benchmarks.instrumented.java.util.Arrays.med3
     [java] *** benchmarks.stringbuffer.StringBuffer.getValue
     [java] *** benchmarks.instrumented.java.util.TreeMap$EntryIterator.next
     [java] *** benchmarks.instrumented.java15.util.TreeMap$Entry.getValue
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBDataStorage.put
     [java] *** benchmarks.instrumented.java.util.Hashtable$KeySet.remove
     [java] *** spec.jbb.Controller.setOutputDirectory
     [java] *** spec.jbb.StockLevelTransaction.delete
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.putTime
     [java] *** benchmarks.instrumented.java.util.HashMap.values
     [java] *** benchmarks.montecarlo.Universal.get_prompt
     [java] *** benchmarks.montecarlo.PathId.get_startDate
     [java] *** spec.jbb.TimerData.propThreadResults
     [java] *** benchmarks.instrumented.java15.util.Collections$ReverseComparator.compare
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1.hasPrevious
     [java] *** net.sf.cache4j.impl.LRUComparator.<init>
     [java] *** spec.reporter.Reporter.<init>
     [java] *** spec.reporter.TableGroupCompare.<init>
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$KeySet.iterator
     [java] *** spec.jbb.History.getAmount
     [java] *** benchmarks.dstest.MTLinkedListInfiniteLoop.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$EntryIterator.<init>
     [java] *** spec.reporter.Result.toRow
     [java] *** benchmarks.instrumented.java.util.HashMap.keySet
     [java] *** benchmarks.instrumented.java15.util.EnumMap$KeySet.contains
     [java] *** spec.jbb.Item.getName
     [java] *** spec.jbb.validity.Sub.getName
     [java] *** benchmarks.instrumented.java15.util.Random.readObject
     [java] *** benchmarks.instrumented.java.util.BitSet.get
     [java] *** benchmarks.montecarlo.RatePath.get_pathDate
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_THREAD1
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntryIterator.hashCode
     [java] *** benchmarks.raytracer.Scene.setView
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyList.contains
     [java] *** benchmarks.instrumented.java15.util.HashSet.isEmpty
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWVSNTest.main
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$Entry.recordAccess
     [java] *** benchmarks.montecarlo.ToResult.<init>
     [java] *** spec.jbb.District.setUsingRandom
     [java] *** net.sf.cache4j.test.Cache4jTester.<init>
     [java] *** benchmarks.raytracer.TournamentBarrier.DoBarrier
     [java] *** spec.jbb.RunSequencer.getSeq
     [java] *** benchmarks.dstest.ArrayListTest.<init>
     [java] *** benchmarks.instrumented.java.util.Vector.isEmpty
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SynchronizedCollection.<init>
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.init
     [java] *** benchmarks.instrumented.java.util.HashMap$EntrySet.contains
     [java] *** spec.jbb.validity.PepTest.Verify
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntrySet.removeAll
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.readObject
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_REFERENCE_STRONG
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Values.size
     [java] *** benchmarks.montecarlo.AppDemo.set_results
     [java] *** benchmarks.instrumented.java.util.Stack.peek
     [java] *** benchmarks.jpf_test_cases.MyRandom.nextInt
     [java] *** benchmarks.instrumented.java15.util.TreeMap$KeyIterator.next
     [java] *** benchmarks.instrumented.java.util.SubList.rangeCheck
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$1.size
     [java] *** net.sf.cache4j.test.Cache4jDriver.<init>
     [java] *** benchmarks.dstest.MTListTest.run
     [java] *** benchmarks.instrumented.java15.util.Random.nextInt
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList$1.nextIndex
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.hashCode
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.headMap
     [java] *** spec.jbb.NewOrderTransaction.processPreloadedOrders
     [java] *** benchmarks.instrumented.java.util.HashMap$HashIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.EnumMap.put
     [java] *** spec.jbb.JBButil.create_random_item_id
     [java] *** benchmarks.instrumented.java15.util.EnumMap$Values.size
     [java] *** benchmarks.instrumented.java15.util.LinkedList.indexOf
     [java] *** benchmarks.instrumented.java15.util.AbstractList$Itr.remove
     [java] *** loader.Loader.checkResult
     [java] *** benchmarks.montecarlo.PriceStock.<init>
     [java] *** spec.jbb.validity.PepTest.testForLoop
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet$EnumSetIterator.hasNext
     [java] *** spec.jbb.Company.getMaxCustomersPerDistrict
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$HashIterator.remove
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.remove
     [java] *** benchmarks.jgfutil.JGFInstrumentor.resetTimer
     [java] *** benchmarks.raytracer.RayTracer.Shadow
     [java] *** benchmarks.instrumented.java15.util.Hashtable.entrySet
     [java] *** benchmarks.stringbuffer.StringBuffer.setCharAt
     [java] *** benchmarks.montecarlo.PathId.get_endDate
     [java] *** benchmarks.instrumented.java.util.HashMap$Entry.setValue
     [java] *** spec.reporter.GraphImage.setXAxisLabelsPrecision
     [java] *** benchmarks.instrumented.java15.util.BitSet.set
     [java] *** benchmarks.instrumented.java.util.TaskQueue.isEmpty
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.putAll
     [java] *** benchmarks.instrumented.java15.util.TreeMap$EntryIterator.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable.keys
     [java] *** spec.jbb.TimerData.getRampUpTime
     [java] *** benchmarks.instrumented.java.util.AbstractMap.hashCode
     [java] *** spec.jbb.infra.Util.XMLLineDocumentException.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractList.clear
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.putLong
     [java] *** benchmarks.instrumented.java.util.BitSet.unitIndex
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.containsAll
     [java] *** benchmarks.instrumented.java.util.TreeMap.key
     [java] *** benchmarks.stringbuffer.StringBuffer.deleteCharAt
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$HashIterator.remove
     [java] *** benchmarks.stringbuffer.StringBuffer.<init>
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.beforeRead
     [java] *** benchmarks.instrumented.java15.util.Collections.access$0
     [java] *** benchmarks.instrumented.java.util.SubList$1.<init>
     [java] *** spec.reporter.GraphImage.<init>
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.next
     [java] *** benchmarks.montecarlo.ReturnPath.get_mean
     [java] *** benchmarks.instrumented.java15.util.Arrays.fill
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.remove
     [java] *** benchmarks.instrumented.java.util.EmptyStackException.<init>
     [java] *** spec.jbb.Stock.getQuantity
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.get
     [java] *** benchmarks.montecarlo.JGFMonteCarloBench.JGFsetsize
     [java] *** spec.jbb.JBBmain.doIt
     [java] *** spec.reporter.Run.ratio
     [java] *** benchmarks.instrumented.java.util.Arrays.sort1
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.writeObject
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.propagate
     [java] *** benchmarks.instrumented.java.util.AbstractMap$2.access$0
     [java] *** benchmarks.instrumented.java15.util.AbstractList$ListItr.add
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.newValueIterator
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$HashIterator.nextEntry
     [java] *** benchmarks.instrumented.java.util.Arrays.sort2
     [java] *** benchmarks.raytracer.RayTracer.shade
     [java] *** spec.jbb.DeliveryTransaction.getMenuName
     [java] *** benchmarks.instrumented.java.util.ArrayList.remove
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.getMemorySize
     [java] *** benchmarks.jpf_test_cases.pipeline.Stage.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.containsValue
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setAxesLabelsPrecision
     [java] *** spec.jbb.Company.dumpWarehouseTable
     [java] *** benchmarks.jpf_test_cases.readerswriters.Writer.run
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeSet.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections.checkedSortedSet
     [java] *** benchmarks.instrumented.java15.util.SubList.size
     [java] *** stringbuffer.StringBuffer.substring
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.maskNull
     [java] *** benchmarks.instrumented.java.util.Vector.elementAt
     [java] *** spec.jbb.validity.PepTest.loopExitContinueInExceptionHandler
     [java] *** spec.jbb.Customer.getLastName
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Values.contains
     [java] *** spec.jbb.Company.getOutDeliveriesFile
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.containsValue
     [java] *** spec.jbb.Infrastructure.createSortedStorage
     [java] *** benchmarks.instrumented.java15.util.LinkedList.addAll
     [java] *** benchmarks.dstest.TreeSetTest.run
     [java] *** critical.Critical.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedSet.first
     [java] *** benchmarks.instrumented.java.util.TreeMap$Entry.getValue
     [java] *** net.sf.cache4j.CacheCleaner.run
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setBackgroundColorEnabled
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable.put
     [java] *** benchmarks.jpf_test_cases.MyRandom.<init>
     [java] *** spec.jbb.validity.PepTest.testDup
     [java] *** benchmarks.instrumented.java.util.ConcurrentModificationException.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractList.add
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Entry.clone
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$EntryIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap$ImmutableEntry.hashCode
     [java] *** benchmarks.instrumented.java.util.TreeSet.subSet
     [java] *** benchmarks.instrumented.java.util.SubList.get
     [java] *** net.sf.cache4j.impl.BlockingCache.getCacheObject
     [java] *** benchmarks.instrumented.java.util.Hashtable$EntrySet.size
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedMap.lastKey
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonSet$1.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$KeySet.size
     [java] *** benchmarks.instrumented.java.util.HashMap$Values.iterator
     [java] *** spec.jbb.Company.setJVMInstanceValues
     [java] *** benchmarks.dstest.Vector.capacity
     [java] *** benchmarks.instrumented.java15.util.HashMap.values
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$KeySet.clear
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1.add
     [java] *** benchmarks.instrumented.java15.util.SubList$1.hasPrevious
     [java] *** benchmarks.instrumented.java15.util.EnumMap.readObject
     [java] *** spec.reporter.ReportProps.<init>
     [java] *** benchmarks.dstest.ListDeadlockTest.getInput
     [java] *** benchmarks.instrumented.java.util.TreeMap.getPrecedingEntry
     [java] *** benchmarks.instrumented.java.util.StringTokenizer.skipDelimiters
     [java] *** benchmarks.instrumented.java15.util.AbstractList$Itr.checkForComodification
     [java] *** benchmarks.instrumented.java.util.HashMap.unmaskNull
     [java] *** benchmarks.instrumented.java.util.Hashtable.elements
     [java] *** benchmarks.instrumented.java.util.TreeMap.rotateRight
     [java] *** benchmarks.instrumented.java.util.SubList.set
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Entry.setValue
     [java] *** benchmarks.instrumented.java.util.HashMap.newKeyIterator
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntryIterator.equals
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.containsValue
     [java] *** benchmarks.instrumented.java.util.AbstractMap.isEmpty
     [java] *** spec.jbb.Address.getStreet1
     [java] *** benchmarks.instrumented.java.util.LinkedList.writeObject
     [java] *** benchmarks.instrumented.java15.util.TooManyListenersException.<init>
     [java] *** spec.jbb.Address.getStreet2
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.containsKey
     [java] *** spec.jbb.Company.dumpItemTable
     [java] *** benchmarks.instrumented.java15.util.Arrays$ArrayList.iterator
     [java] *** spec.jbb.PrintLastSeq.main
     [java] *** benchmarks.instrumented.java15.util.HashMap.get
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Enumerator.remove
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonSet$1.next
     [java] *** benchmarks.raytracer.RayTracer.SpecularDirection
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$IdentityHashMapIterator.hasNext
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.size
     [java] *** benchmarks.instrumented.java.util.TreeMap$1.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$KeySet.<init>
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.fixUp
     [java] *** benchmarks.instrumented.java15.util.Hashtable$ValueCollection.iterator
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$Entry.remove
     [java] *** spec.reporter.Result.elapsed
     [java] *** benchmarks.instrumented.java.util.TreeMap.setColor
     [java] *** spec.reporter.GraphImage.plotXYAxes
     [java] *** benchmarks.jpf_test_cases.rax.FirstTask.run
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$EntrySet.size
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.addElement
     [java] *** benchmarks.jgfutil.JGFInstrumentor.stopTimer
     [java] *** spec.jbb.JBBProperties.setRequiredProperty
     [java] *** benchmarks.stringbuffer.StringBuffer.setShared
     [java] *** stringbuffer.StringBuffer.setShared
     [java] *** benchmarks.instrumented.java15.util.HashMap.transfer
     [java] *** benchmarks.instrumented.java15.util.HashMap$Entry.recordAccess
     [java] *** benchmarks.instrumented.java15.util.TreeMap.getCeilEntry
     [java] *** benchmarks.jpf_test_cases.rax.SecondTask.<init>
     [java] *** example2.ExampleThread1.m
     [java] *** benchmarks.instrumented.java.util.AbstractList.<init>
     [java] *** benchmarks.instrumented.java15.util.Stack.empty
     [java] *** benchmarks.instrumented.java.util.Hashtable.rehash
     [java] *** benchmarks.instrumented.java15.util.Stack.<init>
     [java] *** benchmarks.instrumented.java.util.ArrayList.clone
     [java] *** benchmarks.instrumented.java.util.HashMap$Values.contains
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.write
     [java] *** benchmarks.instrumented.java.util.TreeMap.headMap
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.remove
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntrySet.<init>
     [java] *** benchmarks.instrumented.java15.util.Hashtable.elements
     [java] *** benchmarks.instrumented.java.util.Vector.removeAllElements
     [java] *** benchmarks.instrumented.java.util.HashMap$Values.size
     [java] *** benchmarks.montecarlo.ToResult.get_pathValue
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedMap.lastKey
     [java] *** spec.jbb.JBBmain.stopJBBthread
     [java] *** benchmarks.instrumented.java15.util.Arrays.swap
     [java] *** benchmarks.instrumented.java.util.LinkedList.removeFirst
     [java] *** benchmarks.montecarlo.PriceStock.getResult
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.set
     [java] *** benchmarks.dstest.WeakHashMapFactory.createMap
     [java] *** spec.jbb.validity.LoopBounds.main
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.hashCode
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntryIterator.equals
     [java] *** benchmarks.instrumented.java15.util.Collections.replaceAll
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.size
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection$1.next
     [java] *** benchmarks.instrumented.java15.util.TreeSet.contains
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.set
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.add
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.reset
     [java] *** benchmarks.dstest.Vector.ensureCapacity
     [java] *** benchmarks.raytracer.Interval.<init>
     [java] *** benchmarks.dstest.Vector.contains
     [java] *** benchmarks.instrumented.java.util.Vector.equals
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$9
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$8
     [java] *** benchmarks.instrumented.java15.util.TreeMap.subMap
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$3
     [java] *** benchmarks.instrumented.java.util.Collections$1.<init>
     [java] *** spec.jbb.District.getTaxRate
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$2
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$1
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$0
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$7
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$6
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$5
     [java] *** benchmarks.instrumented.java.util.TreeMap.access$4
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntrySet.size
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.newCacheObject
     [java] *** benchmarks.raytracer.Sphere.normal
     [java] *** shop.Supplier.<init>
     [java] *** benchmarks.instrumented.java15.util.Hashtable.readObject
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.containsValue
     [java] *** spec.jbb.MapDataStorage.put
     [java] *** benchmarks.instrumented.java15.util.TreeMap.size
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Values.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap.eq
     [java] *** benchmarks.instrumented.java.util.AbstractList.addAll
     [java] *** benchmarks.instrumented.java15.util.TreeMap.compare
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.reset
     [java] *** spec.jbb.JBBmain.runWarehouse
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.entrySet
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.NestedMonitor.main
     [java] *** spec.jbb.JBButil.currentFreeMem
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_REFERENCE_SOFT
     [java] *** benchmarks.instrumented.java15.util.ArrayList.ensureCapacity
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EmptyEnumerator.hasMoreElements
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.subList
     [java] *** spec.jbb.Transaction.setValidation
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.getBundleImpl
     [java] *** benchmarks.instrumented.java15.util.EnumMap.containsValue
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.retainAll
     [java] *** benchmarks.instrumented.java.util.HashMap.remove
     [java] *** spec.jbb.validity.digestExpected.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$ValueIterator.next
     [java] *** benchmarks.JGFMolDynBenchSizeA.main
     [java] *** spec.reporter.GraphImage.getSuggestedMinXScale
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.<init>
     [java] *** benchmarks.instrumented.java.util.StringTokenizer.nextElement
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.lastKey
     [java] *** benchmarks.instrumented.java15.util.HashMap$EntrySet.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.isEmpty
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.typeCheck
     [java] *** spec.jbb.Company.primeWithDummyData
     [java] *** spec.jbb.TransactionManager.manualSelection
     [java] *** benchmarks.instrumented.java15.util.HashMap.putAllForCreate
     [java] *** benchmarks.instrumented.java.util.TreeMap.valueSearchNull
     [java] *** benchmarks.dstest.LinkedHashSetTest.main
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$EntrySet.iterator
     [java] *** stringbuffer.StringBuffer.ensureCapacity
     [java] *** benchmarks.instrumented.java.util.BitSet.getBits
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedMap.<init>
     [java] *** benchmarks.instrumented.java.util.Properties.list
     [java] *** benchmarks.raytracer.RayTracer.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.comparator
     [java] *** spec.jbb.ResFilter.accept
     [java] *** benchmarks.instrumented.java15.util.Vector.removeAllElements
     [java] *** benchmarks.montecarlo.RatePath.getPathValue
     [java] *** benchmarks.dstest.WeakHashMapDeadlockTest.main
     [java] *** benchmarks.instrumented.java.util.HashMap.entrySet
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.containsKey
     [java] *** benchmarks.instrumented.java15.util.Collections$1.hasMoreElements
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_THREAD1
     [java] *** benchmarks.instrumented.java.util.TreeMap.rotateLeft
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap$EntrySetView.contains
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.get
     [java] *** benchmarks.instrumented.java15.util.EnumMap.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractList$Itr.remove
     [java] *** benchmarks.instrumented.java.util.TreeMap.writeObject
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.hashCode
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.setParent
     [java] *** benchmarks.instrumented.java.util.HashMap.readObject
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.<init>
     [java] *** net.sf.cache4j.impl.SynchronizedCache.getCacheConfig
     [java] *** benchmarks.instrumented.java15.util.EnumMap.containsKey
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableRandomAccessList.subList
     [java] *** benchmarks.moldyn.Barrier.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap.removeMapping
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$KeySet.contains
     [java] *** spec.jbb.DeliveryTransaction.delete
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.add
     [java] *** spec.reporter.ReportProps.getLong
     [java] *** benchmarks.instrumented.java.util.ArrayList.RangeCheck
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$SimpleEntry.setValue
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.add
     [java] *** net.sf.cache4j.impl.BlockingCache.valid
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Configuration.isAll
     [java] *** net.sf.cache4j.impl.SynchronizedCache.access$0
     [java] *** spec.jbb.validity.digest.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$SimpleEntry.<init>
     [java] *** benchmarks.montecarlo.PathId.get_name
     [java] *** benchmarks.instrumented.java.util.Stack.<init>
     [java] *** benchmarks.instrumented.java.util.Vector.remove
     [java] *** benchmarks.instrumented.java15.util.LinkedList.lastIndexOf
     [java] *** buggyprogram.BuggyProgram$User.run
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.hasNext
     [java] *** benchmarks.dstest.SimpleObject.<init>
     [java] *** benchmarks.instrumented.java.util.AbstractMap$SimpleEntry.getValue
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntrySet.removeAll
     [java] *** benchmarks.instrumented.java.util.AbstractMap$2$1.hasNext
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList$1.nextIndex
     [java] *** benchmarks.dstest.MapDeadlockTest.run
     [java] *** spec.jbb.PaymentTransaction.display
     [java] *** benchmarks.instrumented.java.util.Properties.setProperty
     [java] *** spec.jbb.NewOrder.initNewOrder
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.allowReader
     [java] *** benchmarks.instrumented.java15.util.BitSet.length
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonSet$1.hasNext
     [java] *** benchmarks.instrumented.java.util.Vector.firstElement
     [java] *** spec.jbb.DeliveryTransaction.<init>
     [java] *** spec.jbb.Company.startAutomated
     [java] *** benchmarks.instrumented.java15.util.Collections.unmodifiableSet
     [java] *** benchmarks.instrumented.java.util.AbstractList$Itr.next
     [java] *** benchmarks.instrumented.java.util.Collections.singletonMap
     [java] *** benchmarks.instrumented.java.util.TreeMap$Entry.equals
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$ValueIterator.next
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$IdentityHashMapIterator.nextIndex
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$KeySet.remove
     [java] *** spec.jbb.Company$runModes.valueOf
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$ValueIterator.next
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.removeElement
     [java] *** benchmarks.instrumented.java.util.HashMap$KeySet.clear
     [java] *** benchmarks.montecarlo.CallAppDemo.<init>
     [java] *** spec.jbb.TimerData.getMinimumTime
     [java] *** spec.jbb.NewOrderTransaction.<init>
     [java] *** spec.jbb.Customer.getId
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Enumerator.next
     [java] *** spec.jbb.Company.getWarehousePtr
     [java] *** benchmarks.dstest.ListDeadlockTest.<init>
     [java] *** benchmarks.montecarlo.ReturnPath.estimatePath
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonSet.access$1
     [java] *** benchmarks.dstest.SetDeadlockTest.testHashSet
     [java] *** spec.jbb.Stock.changeQuantity
     [java] *** benchmarks.instrumented.java.util.HashMap$ValueIterator.next
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.retainAll
     [java] *** benchmarks.montecarlo.Universal.errPrintln
     [java] *** benchmarks.instrumented.java15.util.HashSet.iterator
     [java] *** spec.jbb.validity.PepTest.checkClassNameOf
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_EVICTION_ALGORITHM_LRU
     [java] *** stringbuffer.StringBuffer.replace
     [java] *** net.sf.cache4j.impl.BlockingCache.checkOverflow
     [java] *** net.sf.cache4j.impl.Utils.size
     [java] *** benchmarks.instrumented.java15.util.TreeMap$2.size
     [java] *** benchmarks.instrumented.java.util.Observable.notifyObservers
     [java] *** benchmarks.instrumented.java15.util.EnumMap.clone
     [java] *** benchmarks.instrumented.java.util.Collections.reverse
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.inRange2
     [java] *** spec.jbb.validity.LoopBounds2.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntrySet.iterator
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.remove
     [java] *** benchmarks.instrumented.java15.util.BitSet.xor
     [java] *** benchmarks.instrumented.java15.util.TreeMap$2.clear
     [java] *** benchmarks.instrumented.java.util.Vector.lastElement
     [java] *** benchmarks.instrumented.java.util.TreeMap$Entry.toString
     [java] *** spec.jbb.Order.getTotalAmount
     [java] *** benchmarks.instrumented.java15.util.EnumMap$KeySet.size
     [java] *** benchmarks.montecarlo.AppDemo.processResults
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.recalculateSize
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.removeEldestEntry
     [java] *** benchmarks.instrumented.java15.util.HashMap$Entry.recordRemoval
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$KeyIterator.next
     [java] *** benchmarks.montecarlo.DemoException.<init>
     [java] *** benchmarks.instrumented.java15.util.EnumSet.complementOf
     [java] *** net.sf.cache4j.impl.BlockingCache.get
     [java] *** spec.jbb.OrderStatusTransaction.setupInitLog
     [java] *** benchmarks.instrumented.java.util.Collections.max
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.addAll
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.getTotalRemoves
     [java] *** benchmarks.instrumented.java.util.BitSet.bitLen
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.put
     [java] *** benchmarks.instrumented.java15.util.Arrays.rangeCheck
     [java] *** account.Account.run
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedMap.subMap
     [java] *** benchmarks.instrumented.java.util.TaskQueue.fixDown
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntrySet.remove
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedSet.subSet
     [java] *** benchmarks.raytracer.Primitive.setColor
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$KeyIterator.next
     [java] *** net.sf.cache4j.impl.Configurator.getCapacityLong
     [java] *** spec.jbb.JBButil.create_random_n_string
     [java] *** org.w3c.dom.DOMException.<init>
     [java] *** benchmarks.jpf_test_cases.boundedbuffer.Buffer.<init>
     [java] *** spec.jbb.validity.PepTest.testIf
     [java] *** net.sf.cache4j.impl.EmptyCache.size
     [java] *** benchmarks.moldyn.particle.domove
     [java] *** benchmarks.jgfutil.JGFTimer.addops
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.size
     [java] *** benchmarks.instrumented.java.util.Timer.<init>
     [java] *** benchmarks.instrumented.java.util.PropertyPermissionCollection.implies
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_PUT_CLEAR_GET
     [java] *** account.Bank.go
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.hash
     [java] *** spec.jbb.TimerData.getMaximumTime
     [java] *** benchmarks.instrumented.java15.util.TreeSet.addAll
     [java] *** benchmarks.instrumented.java.util.SubList.size
     [java] *** benchmarks.instrumented.java15.util.Hashtable.size
     [java] *** benchmarks.instrumented.java15.util.StringTokenizer.nextToken
     [java] *** benchmarks.instrumented.java15.util.HashMap.put
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$KeySet.iterator
     [java] *** benchmarks.raytracer.JGFRayTracerBench.JGFtidyup
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.initializeArray
     [java] *** benchmarks.dstest.LinkedListTest.<init>
     [java] *** net.sf.cache4j.impl.SynchronizedCache.<init>
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.isEmpty
     [java] *** spec.jbb.Order.getCarrierId
     [java] *** net.sf.cache4j.impl.CacheObject.setObjectSize
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.containsValue
     [java] *** benchmarks.instrumented.java.util.Collections$EmptySet.size
     [java] *** net.sf.cache4j.CacheFactory.getCacheIds
     [java] *** benchmarks.instrumented.java15.util.HashMap.resize
     [java] *** benchmarks.dstest.MTListDeadlock.arrayListDeadlock
     [java] *** spec.jbb.validity.PepTest.testTableSwitch
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.eq
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.contains
     [java] *** benchmarks.instrumented.java15.util.EnumMap.unmaskNull
     [java] *** benchmarks.instrumented.java15.util.HashMap$ValueIterator.next
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_EVICTION_ALGORITHM_LFU
     [java] *** benchmarks.instrumented.java15.util.Collections.lastIndexOfSubList
     [java] *** spec.jbb.validity.PepTest.printPrimes
     [java] *** benchmarks.instrumented.java.util.Hashtable.writeObject
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.putAll
     [java] *** benchmarks.instrumented.java.util.MissingResourceException.getClassName
     [java] *** benchmarks.montecarlo.ReturnPath.set_variance
     [java] *** spec.jbb.Warehouse.getDistrictCount
     [java] *** benchmarks.instrumented.java.util.AbstractList.removeRange
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers.destroy
     [java] *** benchmarks.instrumented.java15.util.RandomAccessSubList.subList
     [java] *** benchmarks.instrumented.java.util.TreeMap.leftOf
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.Producer.run
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.findBundleInCache
     [java] *** benchmarks.instrumented.java.util.TreeMap$1.size
     [java] *** spec.jbb.CustomerReportTransaction.setupInitLog
     [java] *** benchmarks.instrumented.java15.util.HashSet.clear
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSet.hashCode
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.addAll
     [java] *** benchmarks.instrumented.java.util.Vector.containsAll
     [java] *** spec.jbb.validity.PepTest.testGC
     [java] *** spec.jbb.Address.getCity
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.getType
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntrySet.toArray
     [java] *** benchmarks.instrumented.java15.util.EnumMap$Values.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection$1.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntryIterator.getValue
     [java] *** benchmarks.instrumented.java15.util.Collections$CopiesList.iterator
     [java] *** spec.jbb.Orderline.setDeliveryTime
     [java] *** benchmarks.instrumented.java15.util.TreeSet.size
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.remove
     [java] *** benchmarks.instrumented.java.util.AbstractMap$1.access$0
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSet.iterator
     [java] *** benchmarks.instrumented.java15.util.EnumSet.copyOf
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.toString
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.keySet
     [java] *** benchmarks.moldyn.JGFMolDynBench.JGFinitialise
     [java] *** benchmarks.montecarlo.ReturnPath.get_nPathValue
     [java] *** benchmarks.instrumented.java15.util.Collections.enumeration
     [java] *** spec.jbb.Company.loadWarehouseHistoryTable
     [java] *** benchmarks.instrumented.java.util.HashMap$Entry.equals
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.add
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedSet.headSet
     [java] *** spec.reporter.Report.messages
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSet.<init>
     [java] *** benchmarks.instrumented.java15.util.LinkedList.contains
     [java] *** benchmarks.instrumented.java15.util.Random.nextBytes
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.lastIndexOf
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.removeAll
     [java] *** benchmarks.instrumented.java.util.AbstractSequentialList.get
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.indexOf
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.remove
     [java] *** benchmarks.dstest.HashSetTest.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections.max
     [java] *** benchmarks.instrumented.java15.util.Collections$CopiesList.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.keySet
     [java] *** spec.jbb.Company.isCustomer
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.arraycopy
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.put
     [java] *** benchmarks.instrumented.java15.util.BitSet.toString
     [java] *** benchmarks.dstest.MTListDeadlock.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.lastIndexOf
     [java] *** benchmarks.instrumented.java.util.LinkedList$ListItr.remove
     [java] *** benchmarks.instrumented.java15.util.HashMap$EntryIterator.<init>
     [java] *** benchmarks.dstest.ListFactory.<init>
     [java] *** benchmarks.instrumented.java15.util.LinkedList.clear
     [java] *** benchmarks.instrumented.java15.util.Vector.set
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.equals
     [java] *** benchmarks.instrumented.java.util.BitSet.flip
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.remove
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.newKeyIterator
     [java] *** benchmarks.instrumented.java.util.Collections$1.nextElement
     [java] *** spec.reporter.TextBlock.justifyLeft
     [java] *** benchmarks.instrumented.java.util.TreeMap.fixAfterDeletion
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntrySet.clear
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.transfer
     [java] *** benchmarks.raytracer.RayTracerRunner.run
     [java] *** spec.reporter.Title.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable.getIterator
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedMap.values
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedMap.tailMap
     [java] *** benchmarks.instrumented.java.util.Collections.min
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap.containsValue
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntryIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.BitSet.isEmpty
     [java] *** benchmarks.instrumented.java.util.TreeMap$3.clear
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.clearBuffer
     [java] *** benchmarks.stringbuffer.StringBuffer.subSequence
     [java] *** benchmarks.instrumented.java.util.LinkedList.indexOf
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1.hasNext
     [java] *** benchmarks.raytracer.Scene.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap.get
     [java] *** mergesort.MSort.Init
     [java] *** benchmarks.instrumented.java.util.AbstractCollection.containsAll
     [java] *** benchmarks.instrumented.java15.util.Arrays.toString
     [java] *** benchmarks.instrumented.java.util.TreeMap$3.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap.maskNull
     [java] *** spec.reporter.Template.getTemplateString
     [java] *** benchmarks.instrumented.java.util.LinkedList$Entry.<init>
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.incHits
     [java] *** benchmarks.instrumented.java15.util.Collections.synchronizedSet
     [java] *** benchmarks.dstest.Vector.elements
     [java] *** spec.reporter.TextiReport.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$Entry.toString
     [java] *** benchmarks.jpf_test_cases.rax.Event.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.le
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Values.clear
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet$EnumSetIterator.remove
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$KeyIterator.next
     [java] *** benchmarks.jgfutil.JGFInstrumentor.readTimer
     [java] *** benchmarks.montecarlo.Universal.dbgPrintln
     [java] *** benchmarks.instrumented.java.util.TreeSet.<init>
     [java] *** spec.reporter.TextColumn.merge
     [java] *** benchmarks.instrumented.java15.util.HashMap.remove
     [java] *** spec.jbb.Warehouse.getName
     [java] *** spec.jbb.Warehouse.retrieveStock
     [java] *** spec.jbb.OrderStatusTransaction.<init>
     [java] *** benchmarks.dstest.Vector.clone
     [java] *** spec.jbb.SaveOutput.write
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.containsMapping
     [java] *** mergesort.MSort.run
     [java] *** benchmarks.instrumented.java.util.LinkedList.get
     [java] *** benchmarks.instrumented.java15.util.Collections.shuffle
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.lt
     [java] *** benchmarks.instrumented.java.util.ArrayList.toArray
     [java] *** benchmarks.instrumented.java15.util.Collections.synchronizedSortedMap
     [java] *** benchmarks.jpf_test_cases.boundedbuffer.BoundedBuffer.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable.contains
     [java] *** benchmarks.instrumented.java.util.TreeMap$3.size
     [java] *** benchmarks.instrumented.java.util.TreeMap.buildFromSorted
     [java] *** spec.jbb.Customer.getFirstName
     [java] *** net.sf.cache4j.impl.BlockingCache.setCacheConfig
     [java] *** spec.jbb.DeliveryTransaction.processTransactionLog
     [java] *** benchmarks.instrumented.java.util.Vector.addAll
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.contains
     [java] *** stringbuffer.StringBufferTest.run
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.<init>
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.addRange
     [java] *** benchmarks.instrumented.java15.util.Vector.removeRange
     [java] *** spec.jbb.validity.Super.<init>
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue$Itr.checkForComodification
     [java] *** manager.Manager.setNote
     [java] *** benchmarks.instrumented.java.util.HashMap.containsKey
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.containsKey
     [java] *** spec.jbb.validity.PepTest.isPrime
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.ge
     [java] *** benchmarks.instrumented.java.util.TreeSet.first
     [java] *** spec.reporter.Result.rampup_millis
     [java] *** spec.reporter.HTMLTableGraphGenerator3.getLinearMapY
     [java] *** spec.reporter.HTMLTableGraphGenerator3.getLinearMapX
     [java] *** benchmarks.instrumented.java15.util.AbstractSequentialList.remove
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList.readResolve
     [java] *** spec.jbb.validity.PepTest.checkRemainders
     [java] *** benchmarks.montecarlo.ToResult.set_volatility2
     [java] *** benchmarks.instrumented.java.util.HashSet.clone
     [java] *** benchmarks.instrumented.java15.util.LinkedList.access$3
     [java] *** benchmarks.instrumented.java15.util.LinkedList.access$4
     [java] *** benchmarks.instrumented.java.util.AbstractMap$2.size
     [java] *** benchmarks.instrumented.java15.util.LinkedList.access$1
     [java] *** benchmarks.instrumented.java15.util.LinkedList.access$2
     [java] *** benchmarks.instrumented.java15.util.Collections.min
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Values.toArray
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap$LinkedHashIterator.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.<init>
     [java] *** net.sf.cache4j.impl.SynchronizedCache.clear
     [java] *** benchmarks.dstest.MTHashtableTest.<init>
     [java] *** net.sf.cache4j.impl.SynchronizedCache.clean
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.read
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.remove
     [java] *** benchmarks.instrumented.java.util.Hashtable$Entry.setValue
     [java] *** spec.reporter.Metrics.check_points_for_metric
     [java] *** stringbuffer.StringBuffer.<init>
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.put
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.setValue
     [java] *** benchmarks.instrumented.java15.util.Vector.size
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.gt
     [java] *** benchmarks.instrumented.java15.util.BitSet.readObject
     [java] *** spec.jbb.JBButil.set_random_seed
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.put
     [java] *** benchmarks.instrumented.java.util.LinkedList.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedMap.comparator
     [java] *** benchmarks.instrumented.java15.util.AbstractSequentialList.set
     [java] *** benchmarks.instrumented.java15.util.TreeMap$PrivateEntryIterator.nextEntry
     [java] *** benchmarks.montecarlo.CallAppDemo.presults
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.Semaphore.down
     [java] *** benchmarks.instrumented.java.util.Collections.singleton
     [java] *** spec.jbb.Orderline.getItemPrice
     [java] *** buggyprogram.BuggyProgram$User.generate
     [java] *** benchmarks.moldyn.md.initialise
     [java] *** benchmarks.instrumented.java15.util.EnumMap.maskNull
     [java] *** benchmarks.raytracer.Scene.addLight
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonSet$1.<init>
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.putBundleInCache
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_REFERENCE_STRONG
     [java] *** stringbuffer.StringBuffer.delete
     [java] *** benchmarks.jgfutil.JGFTimer.stop
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.hashCode
     [java] *** stringbuffer.StringBuffer.length
     [java] *** benchmarks.dstest.MTLinkedListInfiniteLoop.main
     [java] *** benchmarks.moldyn.JGFMolDynBench.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.setValue
     [java] *** spec.jbb.JBButil.currentUsedMem
     [java] *** benchmarks.moldyn.TournamentBarrier.debug
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.values
     [java] *** benchmarks.instrumented.java15.util.BitSet.andNot
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.sub
     [java] *** benchmarks.instrumented.java15.util.Vector$1.hasMoreElements
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.unmaskNull
     [java] *** spec.reporter.MultiVMTxtReport.<init>
     [java] *** benchmarks.jpf_test_cases.rax.Event.signal_event
     [java] *** benchmarks.montecarlo.ToInitAllTasks.set_dTime
     [java] *** benchmarks.jpf_test_cases.rax.START.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyMap.size
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey
     [java] *** spec.jbb.StockLevelTransaction.processTransactionLog
     [java] *** spec.jbb.JBBProperties.copyPropsToOutput
     [java] *** benchmarks.instrumented.java.util.Collections$CopiesList.size
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedSet.last
     [java] *** benchmarks.instrumented.java.util.LinkedList.readObject
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap.values
     [java] *** net.sf.cache4j.impl.LFUComparator.compare
     [java] *** benchmarks.dstest.MTLinkedHashSetTest.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.putAll
     [java] *** benchmarks.instrumented.java.util.LinkedList.addFirst
     [java] *** benchmarks.jpf_test_cases.readerswriters.Vector.removeElementAt
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.clear
     [java] *** spec.jbb.Order.getCustomerPtr
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.clone
     [java] *** benchmarks.raytracer.Scene.addObject
     [java] *** spec.jbb.Company.getCustomerByLastName
     [java] *** benchmarks.instrumented.java15.util.Stack.pop
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$IdentityHashMapIterator.<init>
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_PUT_OBJ_PUT_NULL_GET
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.fillFromSorted
     [java] *** benchmarks.instrumented.java15.util.ArrayList.trimToSize
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.remove
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.retainAll
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.isEmpty
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonSet.iterator
     [java] *** benchmarks.instrumented.java15.util.ArrayList.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.remove
     [java] *** spec.jbb.Order.<init>
     [java] *** benchmarks.instrumented.java15.util.BitSet.cardinality
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.init
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntrySet.contains
     [java] *** benchmarks.instrumented.java15.util.Arrays.deepEquals
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet$EnumSetIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.EnumSet$SerializationProxy.<init>
     [java] *** net.sf.cache4j.impl.CacheObject.getObjectSize
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_MAXSIZE
     [java] *** benchmarks.raytracer.View.<init>
     [java] *** spec.reporter.Reporter.usage
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedMap.tailMap
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$Values.size
     [java] *** benchmarks.instrumented.java.util.HashMap$Values.clear
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_MAXSIZE
     [java] *** net.sf.cache4j.impl.SynchronizedCache.put
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.size
     [java] *** benchmarks.instrumented.java.util.SubList$1.remove
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedSet.first
     [java] *** benchmarks.montecarlo.PathId.set_endDate
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.clear
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.clear
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.capacity
     [java] *** benchmarks.instrumented.java15.util.TreeMap.computeRedLevel
     [java] *** benchmarks.montecarlo.MonteCarloPath.<init>
     [java] *** spec.jbb.TimerData.initialize
     [java] *** benchmarks.instrumented.java15.util.EnumMap$Values.remove
     [java] *** benchmarks.instrumented.java.util.AbstractSequentialList.iterator
     [java] *** benchmarks.instrumented.java15.util.AbstractList$ListItr.hasPrevious
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest$TThread.run
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMapEntryIterator.hasNext
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_EVICTION_ALGORITHM_FIFO
     [java] *** benchmarks.montecarlo.MonteCarloPath.set_volatility
     [java] *** benchmarks.jgfutil.JGFTimer.perf
     [java] *** benchmarks.instrumented.java.util.AbstractMap.clone
     [java] *** benchmarks.instrumented.java15.util.EnumSet$SerializationProxy.readResolve
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap$ImmutableEntry.<init>
     [java] *** spec.jbb.validity.subClass.className
     [java] *** benchmarks.instrumented.java15.util.Random.<init>
     [java] *** benchmarks.instrumented.java15.util.Random.nextGaussian
     [java] *** benchmarks.instrumented.java15.util.HashMap$EntrySet.clear
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedMap.<init>
     [java] *** benchmarks.montecarlo.MonteCarloPath.set_fluctuations
     [java] *** spec.jbb.Orderline.setAmount
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntrySet.iterator
     [java] *** spec.reporter.GraphImage.setConnectPointsEnabled
     [java] *** benchmarks.stringbuffer.StringBuffer.reverse
     [java] *** benchmarks.montecarlo.JGFMonteCarloBench.<init>
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.Semaphore.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.<init>
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$Values.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.expungeStaleEntries
     [java] *** benchmarks.instrumented.java15.util.AbstractList.removeRange
     [java] *** net.sf.cache4j.impl.CacheObject.lock
     [java] *** benchmarks.dstest.TreeMapDeadlockTest.<init>
     [java] *** benchmarks.instrumented.java15.util.Hashtable.putAll
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.add
     [java] *** benchmarks.instrumented.java15.util.TreeMap.rotateRight
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.putAll
     [java] *** benchmarks.instrumented.java.util.AbstractMap.clear
     [java] *** spec.reporter.Metrics.calculate
     [java] *** spec.reporter.Metrics.check_points_before_metric
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.capacity
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.nextIndex
     [java] *** spec.jbb.District.nextOrderId
     [java] *** benchmarks.raytracer.Vec.scale
     [java] *** spec.jbb.validity.Sub.<init>
     [java] *** benchmarks.instrumented.java15.util.LinkedList.removeLast
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.add
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_EVICTION_ALGORITHM_LFU
     [java] *** benchmarks.instrumented.java.util.ResourceBundle$ResourceCacheKey.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSet.hashCode
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.complement
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedRandomAccessList.subList
     [java] *** benchmarks.instrumented.java.util.PropertyPermissionCollection.writeObject
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.equals
     [java] *** spec.jbb.Transaction.setLogWrite
     [java] *** benchmarks.instrumented.java.util.HashMap.addEntry
     [java] *** benchmarks.stringbuffer.StringBuffer.substring
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonMap.get
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.add
     [java] *** benchmarks.instrumented.java15.util.HashMap$ValueIterator.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntryIterator.getKey
     [java] *** net.sf.cache4j.impl.SynchronizedCache.checkOverflow
     [java] *** benchmarks.instrumented.java.util.HashMap.removeEntryForKey
     [java] *** spec.reporter.Metrics.rampup_millis_at_wh
     [java] *** spec.jbb.Warehouse.<init>
     [java] *** benchmarks.instrumented.java.util.Random.setSeed
     [java] *** benchmarks.instrumented.java15.util.Hashtable.keys
     [java] *** net.sf.cache4j.test.BlockingCacheTest.incThreadCount
     [java] *** benchmarks.instrumented.java.util.Hashtable$Entry.hashCode
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$KeySet.removeAll
     [java] *** spec.jbb.validity.superClass.className
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableRandomAccessList.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable.putAll
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.addAll
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator.take
     [java] *** benchmarks.instrumented.java.util.PropertyPermission.writeObject
     [java] *** benchmarks.instrumented.java15.util.Collections.<init>
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.NestedMonitor.<init>
     [java] *** benchmarks.montecarlo.MonteCarloPath.get_volatility
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.addElement
     [java] *** spec.reporter.MultiVMReport.print
     [java] *** benchmarks.instrumented.java.util.BitSet.readObject
     [java] *** benchmarks.instrumented.java.util.TreeSet.contains
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.clear
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.toString
     [java] *** benchmarks.instrumented.java.util.TreeMap.size
     [java] *** benchmarks.instrumented.java15.util.TreeMap$ValueIterator.<init>
     [java] *** spec.jbb.validity.PepTest.testDeepStack
     [java] *** benchmarks.instrumented.java15.util.EnumSet.access$1
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.privLong
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.ensureCapacity
     [java] *** spec.jbb.Orderline.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Worker.run
     [java] *** benchmarks.instrumented.java.util.Collections.rotate
     [java] *** benchmarks.instrumented.java.util.ArrayList.writeObject
     [java] *** benchmarks.dstest.HashSetTest.main
     [java] *** benchmarks.instrumented.java15.util.Collections.singletonList
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.addEntry
     [java] *** benchmarks.instrumented.java15.util.ArrayList.indexOf
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.size
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Coordinator.add
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntryIterator.next
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.<init>
     [java] *** benchmarks.moldyn.particle.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$IdentityHashMapIterator.<init>
     [java] *** benchmarks.montecarlo.ToInitAllTasks.get_endDate
     [java] *** benchmarks.instrumented.java15.util.StringTokenizer.setMaxDelimCodePoint
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap$ImmutableEntry.getKey
     [java] *** benchmarks.instrumented.java15.util.Collections.checkedCollection
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_MAXSIZE_AND_MAXMEMORYSIZE
     [java] *** spec.jbb.NewOrder.getOrderPtr
     [java] *** spec.jbb.Customer.getSince
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.add
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedSet.tailSet
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.entrySet
     [java] *** spec.jbb.JBButil.choose_random_last_name
     [java] *** benchmarks.montecarlo.AppDemo.initTasks
     [java] *** benchmarks.instrumented.java15.util.TreeMap$1.contains
     [java] *** benchmarks.instrumented.java15.util.Vector.trimToSize
     [java] *** benchmarks.raytracer.RayTracer.createScene
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSortedSet.first
     [java] *** benchmarks.montecarlo.AppDemoThread.<init>
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_CACHE_CLEANER_IDLE
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.listIterator
     [java] *** benchmarks.montecarlo.PathId.get_dTime
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.toArray
     [java] *** benchmarks.dstest.MTVectorTest.<init>
     [java] *** benchmarks.instrumented.java15.util.Hashtable.clear
     [java] *** benchmarks.instrumented.java15.util.AbstractSet.equals
     [java] *** benchmarks.raytracer.JGFRayTracerBench.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$KeyIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections.list
     [java] *** benchmarks.montecarlo.AppDemoThread.run0
     [java] *** benchmarks.jpf_test_cases.MyRandom.nextRandom
     [java] *** spec.jbb.Customer.getLatestOrder
     [java] *** benchmarks.dstest.MTVectorTest.main
     [java] *** benchmarks.instrumented.java15.util.HashMap$Values.contains
     [java] *** spec.jbb.Company.getMaxWarehouses
     [java] *** benchmarks.montecarlo.Universal.set_UNIVERSAL_DEBUG
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.listIterator
     [java] *** benchmarks.moldyn.TournamentBarrier.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1.nextIndex
     [java] *** benchmarks.instrumented.java15.util.HashMap$HashIterator.nextEntry
     [java] *** spec.jbb.Address.getState
     [java] *** benchmarks.instrumented.java15.util.Collections.emptyMap
     [java] *** benchmarks.raytracer.Sphere.toString
     [java] *** spec.jbb.NewOrder.getId
     [java] *** spec.jbb.Company.loadWarehouseTable
     [java] *** benchmarks.instrumented.java.util.LinkedList.add
     [java] *** spec.jbb.validity.superClass.<init>
     [java] *** benchmarks.instrumented.java.util.Hashtable.access$4
     [java] *** benchmarks.instrumented.java.util.Hashtable.access$5
     [java] *** benchmarks.instrumented.java.util.Hashtable.access$2
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedCollection.contains
     [java] *** benchmarks.instrumented.java.util.Hashtable.access$3
     [java] *** benchmarks.instrumented.java.util.Collections.list
     [java] *** benchmarks.instrumented.java.util.Hashtable.access$1
     [java] *** benchmarks.instrumented.java.util.Hashtable.access$0
     [java] *** benchmarks.instrumented.java15.util.SubList$1.next
     [java] *** benchmarks.instrumented.java15.util.TreeMap$PrivateEntryIterator.remove
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.values
     [java] *** benchmarks.dstest.MapDeadlockTest.testTreeMap
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.iterator
     [java] *** benchmarks.instrumented.java.util.Vector.copyInto
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyList.readResolve
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.ReplicatedWorkers.getPoolSize
     [java] *** benchmarks.instrumented.java15.util.Vector$1.nextElement
     [java] *** benchmarks.instrumented.java15.util.EnumSet.allOf
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.get
     [java] *** benchmarks.instrumented.java15.util.HashMap$KeySet.clear
     [java] *** benchmarks.instrumented.java.util.Arrays$ArrayList.contains
     [java] *** benchmarks.montecarlo.MonteCarloPath.computeFluctuationsGaussian
     [java] *** benchmarks.instrumented.java15.util.Collections$1.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$SimpleEntry.getValue
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap.removeMapping
     [java] *** benchmarks.montecarlo.ReturnPath.set_volatility
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Entry.hashCode
     [java] *** spec.jbb.MapDataStorage.elements
     [java] *** benchmarks.montecarlo.MonteCarloPath.set_pathValue
     [java] *** example2.Account.getBalance1
     [java] *** example2.Account.getBalance2
     [java] *** benchmarks.instrumented.java.util.HashMap$Entry.<init>
     [java] *** benchmarks.instrumented.java.util.HashMap$Entry.toString
     [java] *** benchmarks.dstest.Vector.<init>
     [java] *** benchmarks.instrumented.java15.util.HashMap.writeObject
     [java] *** spec.reporter.GraphImage.drawLegend
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.retainAll
     [java] *** benchmarks.instrumented.java.util.TreeSet.size
     [java] *** benchmarks.instrumented.java.util.Hashtable$ValueCollection.contains
     [java] *** net.sf.cache4j.impl.EmptyCache$CacheInfoImpl.getCacheHits
     [java] *** benchmarks.instrumented.java15.util.BitSet.bitsLeftOf
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_EVICTION_ALGORITHM_LRU
     [java] *** benchmarks.instrumented.java.util.SubList.iterator
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBDataStorage.elements
     [java] *** benchmarks.instrumented.java.util.Collections$CopiesList.contains
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedList.lastIndexOf
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.containsValue
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Entry.hashCode
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.containsAll
     [java] *** benchmarks.jpf_test_cases.nestedmonitors.Semaphore.up
     [java] *** benchmarks.instrumented.java.util.BitSet.length
     [java] *** benchmarks.instrumented.java15.util.Collections.binarySearch
     [java] *** spec.reporter.TextColumn.toString
     [java] *** spec.reporter.TextBlock.size
     [java] *** benchmarks.instrumented.java.util.SubList.listIterator
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntryIterator.equals
     [java] *** benchmarks.instrumented.java.util.Collections.synchronizedSortedSet
     [java] *** benchmarks.instrumented.java.util.TreeMap.entrySet
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.grow
     [java] *** benchmarks.instrumented.java15.util.AbstractMap.get
     [java] *** benchmarks.instrumented.java15.util.TreeMap.valueSearchNonNull
     [java] *** benchmarks.montecarlo.ToResult.set_finalStockPrice
     [java] *** benchmarks.instrumented.java.util.AbstractMap$1$1.remove
     [java] *** benchmarks.instrumented.java.util.Collections.indexOfSubList
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection.containsAll
     [java] *** benchmarks.instrumented.java.util.HashMap$Entry.getKey
     [java] *** benchmarks.instrumented.java15.util.SubList$1.add
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedMap.containsValue
     [java] *** benchmarks.instrumented.java15.util.HashMap.init
     [java] *** spec.jbb.OrderStatusTransaction.setupOrderLog
     [java] *** benchmarks.instrumented.java15.util.LinkedList.writeObject
     [java] *** benchmarks.instrumented.java15.util.BitSet.get
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getValue
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.StandardBarrier.<init>
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.privInt
     [java] *** benchmarks.instrumented.java.util.HashMap.removeMapping
     [java] *** benchmarks.instrumented.java.util.AbstractList$Itr.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.hashCode
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntryIterator.next
     [java] *** spec.jbb.NewOrderTransaction.setupOrderLog
     [java] *** benchmarks.instrumented.java.util.Observable.countObservers
     [java] *** spec.jbb.JBButil.register_warehouse_Random_stream
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_IDLE
     [java] *** benchmarks.instrumented.java.util.AbstractMap.size
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSet.iterator
     [java] *** benchmarks.instrumented.java.util.ArrayList.add
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.add
     [java] *** benchmarks.stringbuffer.StringBuffer.ensureCapacity
     [java] *** benchmarks.instrumented.java.util.HashMap.clear
     [java] *** benchmarks.instrumented.java15.util.ArrayList.set
     [java] *** benchmarks.instrumented.java.util.TimerTask.cancel
     [java] *** benchmarks.instrumented.java15.util.TreeMap$3.size
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$SimpleEntry.getKey
     [java] *** benchmarks.instrumented.java15.util.TreeMap.parentOf
     [java] *** benchmarks.instrumented.java15.util.ArrayList.removeRange
     [java] *** benchmarks.instrumented.java.util.BitSet.bitsRightOf
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntryIterator.getValue
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SignsSrcAbs.abs
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$Entry.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntrySet.contains
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.throwMissingResourceException
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBSortedStorage.deleteFirstEntities
     [java] *** spec.jbb.NewOrderTransaction.delete
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.access$3
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$KeyIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.access$4
     [java] *** benchmarks.instrumented.java15.util.Hashtable$EntrySet.<init>
     [java] *** benchmarks.instrumented.java.util.TreeMap.deleteEntry
     [java] *** benchmarks.montecarlo.ToTask.get_randomSeed
     [java] *** example2.Account.setBalance1
     [java] *** example2.Account.setBalance2
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection$1.hasNext
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.access$1
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$ValueIterator.next
     [java] *** spec.jbb.validity.PepTest.deepRecursion
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.access$2
     [java] *** spec.jbb.Transaction.invalidateRun
     [java] *** benchmarks.montecarlo.ToInitAllTasks.get_nTimeSteps
     [java] *** benchmarks.instrumented.java15.util.HashMap.addEntry
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.tailMap
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$HashIterator.hasNext
     [java] *** benchmarks.dstest.LinkedListFactory.<init>
     [java] *** benchmarks.instrumented.java.util.EventObject.toString
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$1.<init>
     [java] *** net.sf.cache4j.test.BlockingCacheTest$TThread.<init>
     [java] *** spec.jbb.TransactionManager.goManual
     [java] *** net.sf.cache4j.impl.EmptyCache.clear
     [java] *** spec.jbb.Address.<init>
     [java] *** net.sf.cache4j.impl.EmptyCache.clean
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$Values.remove
     [java] *** benchmarks.instrumented.java15.util.TreeMap.put
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.values
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setScale
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EntryIterator.getKey
     [java] *** spec.jbb.Customer.setUsingRandom
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.loadBundle
     [java] *** benchmarks.montecarlo.ToResult.toString
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.newKeyIterator
     [java] *** benchmarks.montecarlo.ToInitAllTasks.<init>
     [java] *** spec.reporter.ReportProps.load
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedMap.headMap
     [java] *** benchmarks.instrumented.java.util.PropertyPermission.implies
     [java] *** benchmarks.raytracer.Ray.point
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedMap.<init>
     [java] *** benchmarks.instrumented.java15.util.Arrays.deepHashCode
     [java] *** benchmarks.instrumented.java.util.HashMap$KeySet.size
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.comparator
     [java] *** spec.jbb.CustomerReportTransaction.display
     [java] *** benchmarks.instrumented.java.util.Random.next
     [java] *** benchmarks.instrumented.java.util.AbstractList$ListItr.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$Values.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$Values.clear
     [java] *** benchmarks.raytracer.Vec.<init>
     [java] *** stringbuffer.StringBuffer.copy
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.poll
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedMap.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList.get
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedList$1.next
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.put
     [java] *** benchmarks.instrumented.java.util.Properties.continueLine
     [java] *** benchmarks.instrumented.java15.util.StringTokenizer.countTokens
     [java] *** benchmarks.instrumented.java15.util.Collections.indexOfSubList
     [java] *** benchmarks.instrumented.java.util.HashMap$ValueIterator.<init>
     [java] *** benchmarks.instrumented.java15.util.BitSet.<init>
     [java] *** spec.reporter.GraphImage.init
     [java] *** spec.reporter.MultiVMTxtReport.configSection
     [java] *** benchmarks.instrumented.java.util.AbstractMap$SimpleEntry.setValue
     [java] *** benchmarks.instrumented.java.util.PropertyPermission.<init>
     [java] *** benchmarks.stringbuffer.StringBuffer.readObject
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$1$1.next
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableSortedMap.headMap
     [java] *** benchmarks.dstest.SimpleObject.compareTo
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.heapify
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.clear
     [java] *** net.sf.cache4j.test.SynchronizedCacheTest.test_CACHE_CLEANER_TTL
     [java] *** buggyprogram.BuggyProgram$User.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSet.iterator
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.equals
     [java] *** spec.jbb.Orderline.getStockQuantity
     [java] *** benchmarks.jgfutil.JGFInstrumentor.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap.lastEntry
     [java] *** spec.jbb.Warehouse.setUsingRandom
     [java] *** net.sf.cache4j.impl.BlockingCache.put
     [java] *** benchmarks.instrumented.java.util.TreeMap.compare
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.isEmpty
     [java] *** benchmarks.instrumented.java.util.Random.nextDouble
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBSortedStorage.getMedianValue
     [java] *** benchmarks.instrumented.java.util.Timer.sched
     [java] *** spec.reporter.HTMLTableGraphGenerator3.setPixelImage
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.getCacheHits
     [java] *** spec.jbb.TimerData.useWaitTimesPercentage
     [java] *** benchmarks.instrumented.java15.util.TreeMap.getPrecedingEntry
     [java] *** stringbuffer.StringBufferTest.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$SingletonMap$ImmutableEntry.toString
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.inRange
     [java] *** benchmarks.instrumented.java15.util.Arrays.mergeSort
     [java] *** benchmarks.dstest.TreeMapFactory.createMap
     [java] *** spec.reporter.Result.score
     [java] *** benchmarks.instrumented.java15.util.Arrays$ArrayList.toArray
     [java] *** spec.jbb.TransactionManager.go
     [java] *** benchmarks.instrumented.java15.util.JumboEnumSet.retainAll
     [java] *** spec.jbb.TimerData.getTransactionCount
     [java] *** benchmarks.instrumented.java15.util.TreeMap$3.clear
     [java] *** benchmarks.instrumented.java.util.LinkedList.addAll
     [java] *** benchmarks.instrumented.java.util.TreeMap$3.contains
     [java] *** benchmarks.instrumented.java.util.AbstractList$ListItr.set
     [java] *** spec.reporter.Metrics.get_whAtPeak
     [java] *** benchmarks.instrumented.java.util.WeakHashMap.getEntry
     [java] *** benchmarks.instrumented.java15.util.Vector.capacity
     [java] *** benchmarks.instrumented.java.util.Collections.singletonList
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.hashCode
     [java] *** benchmarks.instrumented.java15.util.LinkedHashSet.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap$CheckedEntrySet.isEmpty
     [java] *** spec.reporter.JBBReportFilenameFilter.accept
     [java] *** benchmarks.raytracer.Vec.add
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Values.contains
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableSortedSet.comparator
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.getTimeToLive
     [java] *** benchmarks.instrumented.java15.util.Hashtable$Entry.<init>
     [java] *** stringbuffer.StringBuffer.append
     [java] *** benchmarks.instrumented.java15.util.Vector.toArray
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap$EntrySetView.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableList$1.add
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$KeyIterator.<init>
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$KeySet.contains
     [java] *** benchmarks.dstest.LinkedHashMapFactory.<init>
     [java] *** benchmarks.instrumented.java15.lang.Math.min
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$EntrySet.iterator
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap$SubMap.<init>
     [java] *** benchmarks.instrumented.java15.util.TreeMap.successor
     [java] *** benchmarks.instrumented.java.util.HashMap.getEntry
     [java] *** benchmarks.montecarlo.ToResult.set_volatility
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$EntryIterator.<init>
     [java] *** spec.jbb.OrderStatusTransaction.delete
     [java] *** spec.jbb.validity.PepTest.testWaitNull
     [java] *** benchmarks.instrumented.java.util.Collections$EmptySet$1.hasNext
     [java] *** benchmarks.instrumented.java15.util.Collections$EmptyList.size
     [java] *** benchmarks.jpf_test_cases.readerswriters.RWPrinter.notifyReaders
     [java] *** benchmarks.instrumented.java.util.Vector$1.hasMoreElements
     [java] *** net.sf.cache4j.test.BlockingCacheTest.test_TTL
     [java] *** benchmarks.JGFRayTracerBenchSizeA.<init>
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.hashCode
     [java] *** benchmarks.instrumented.java15.util.RegularEnumSet.clear
     [java] *** benchmarks.instrumented.java.util.WeakHashMap$KeySet.toArray
     [java] *** spec.jbb.validity.Check.checkXMLErrorChecking
     [java] *** benchmarks.instrumented.java15.util.AbstractCollection.iterator
     [java] *** benchmarks.instrumented.java.util.Collections.unmodifiableCollection
     [java] *** benchmarks.instrumented.java.util.TreeMap$3.remove
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.entrySet
     [java] *** benchmarks.instrumented.java15.util.EnumMap.putAll
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedMap.toString
     [java] *** benchmarks.instrumented.java.util.HashMap.transfer
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableMap.isEmpty
     [java] *** benchmarks.montecarlo.AppDemo.<init>
     [java] *** spec.jbb.validity.PepTest.testClone
     [java] *** benchmarks.instrumented.java.util.Arrays$ArrayList.set
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap$EntryIterator.next
     [java] *** net.sf.cache4j.impl.CacheConfigImpl.getAlgorithm
     [java] *** benchmarks.raytracer.RayTracerRunner.<init>
     [java] *** benchmarks.instrumented.java15.util.Vector.lastIndexOf
     [java] *** buggyprogram.BuggyProgram.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.get
     [java] *** spec.jbb.Customer.<init>
     [java] *** benchmarks.instrumented.java.util.TreeMap$SubMap.comparator
     [java] *** benchmarks.instrumented.java15.util.BitSet.nextClearBit
     [java] *** benchmarks.raytracer.RayTracer.trace
     [java] *** spec.jbb.TimerData.displayResults
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.containsValue
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedCollection.isEmpty
     [java] *** benchmarks.instrumented.java.util.TreeMap.readObject
     [java] *** net.sf.cache4j.impl.CacheObject.<init>
     [java] *** spec.reporter.HTMLTableGraphGenerator3.<init>
     [java] *** benchmarks.instrumented.java.util.HashMap$HashIterator.hasNext
     [java] *** benchmarks.jpf_test_cases.boundedbuffer.Producer.run
     [java] *** spec.jbb.Order.setEntryDateTime
     [java] *** benchmarks.instrumented.java15.util.EnumSet.of
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.elementAt
     [java] *** spec.jbb.validity.Check.<init>
     [java] *** benchmarks.instrumented.java.util.PropertyResourceBundle.getKeys
     [java] *** benchmarks.instrumented.java15.util.EnumMap$EnumMapIterator.hasNext
     [java] *** spec.jbb.Stock.getId
     [java] *** spec.jbb.TreeMapDataStorage.deleteFirstEntities
     [java] *** net.sf.cache4j.impl.BlockingCache$CacheInfoImpl.getCacheMisses
     [java] *** benchmarks.dstest.Vector.copyInto
     [java] *** benchmarks.montecarlo.ToResult.get_volatility2
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue$Itr.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedSet.equals
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.StandardCountingSemaphore.await
     [java] *** manager.Trelease.<init>
     [java] *** benchmarks.instrumented.java.util.Collections.eq
     [java] *** benchmarks.instrumented.java15.util.AbstractList$ListItr.set
     [java] *** benchmarks.instrumented.java.util.ArrayList.contains
     [java] *** benchmarks.montecarlo.ReturnPath.computeVolatility
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.display
     [java] *** benchmarks.instrumented.java15.util.TreeMap.addAllForTreeSet
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.SrcAbs.getMethodName
     [java] *** benchmarks.instrumented.java15.util.LinkedList$ListItr.add
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.access$2
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.access$3
     [java] *** spec.jbb.validity.PepTest.instanceMain
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.access$4
     [java] *** benchmarks.instrumented.java.util.Collections$EmptySet.<init>
     [java] *** loader.NewThread.<init>
     [java] *** benchmarks.instrumented.java15.util.AbstractSequentialList.addAll
     [java] *** manager.Manager.<init>
     [java] *** spec.reporter.Table.expandN
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList.get
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$EntrySet.clear
     [java] *** benchmarks.instrumented.java.util.PropertyPermission.getActions
     [java] *** benchmarks.instrumented.java.util.BitSet.<init>
     [java] *** benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$Values.contains
     [java] *** spec.jbb.PrintLastSeq.<init>
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$KeySet.<init>
     [java] *** benchmarks.montecarlo.MonteCarloPath.get_pathStartValue
     [java] *** benchmarks.instrumented.java15.util.Vector.retainAll
     [java] *** spec.jbb.StockLevelTransaction.initializeTransactionLog
     [java] *** benchmarks.instrumented.java15.util.HashMap.readObject
     [java] *** benchmarks.instrumented.java15.util.PriorityQueue.peek
     [java] *** spec.reporter.Metrics.getWarehousesTested
     [java] *** benchmarks.instrumented.java.util.LinkedHashMap.newValueIterator
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.access$1
     [java] *** benchmarks.instrumented.java15.util.WeakHashMap$Entry.access$0
     [java] *** benchmarks.moldyn.particle.dscal
     [java] *** spec.jbb.OrderStatusTransaction.process
     [java] *** benchmarks.instrumented.java15.util.Arrays.asList
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.remove
     [java] *** benchmarks.dstest.ArrayListFactory.<init>
     [java] *** spec.jbb.TimerData.getBTPS
     [java] *** benchmarks.jgfutil.JGFInstrumentor.printHeader
     [java] *** benchmarks.instrumented.java.util.TreeMap$1.iterator
     [java] *** benchmarks.raytracer.Sphere.getCenter
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Configuration.isResultExclusive
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedSortedMap.lastKey
     [java] *** benchmarks.instrumented.java15.util.TreeMap$3.iterator
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableCollection.addAll
     [java] *** spec.jbb.validity.LoopBounds.run
     [java] *** benchmarks.instrumented.java15.util.TreeSet.add
     [java] *** spec.reporter.Result.start_millis
     [java] *** benchmarks.montecarlo.RatePath.set_pathDate
     [java] *** benchmarks.dstest.IdentityHashMapDeadlockTest.main
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableCollection$1.next
     [java] *** benchmarks.montecarlo.AppDemo.set_dataFilename
     [java] *** benchmarks.raytracer.Sphere.<init>
     [java] *** benchmarks.montecarlo.ToTask.get_header
     [java] *** spec.jbb.Infrastructure$SynchronizedJBBDataStorage.get
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.hashCode
     [java] *** spec.jbb.Warehouse.updateHistory
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.access$0
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.getObject
     [java] *** benchmarks.instrumented.java15.util.LinkedHashMap.access$1
     [java] *** spec.reporter.GraphImage.setAxisLabelsPrecision
     [java] *** account.Account.Action
     [java] *** benchmarks.instrumented.java15.util.AbstractMap$SimpleEntry.equals
     [java] *** spec.jbb.JBButil.NUrand_val
     [java] *** benchmarks.instrumented.java.util.HashMap.size
     [java] *** benchmarks.stringbuffer.StringBuffer.charAt
     [java] *** net.sf.cache4j.impl.EmptyCache$CacheInfoImpl.getMemorySize
     [java] *** spec.jbb.validity.PepTest.throwArithmeticException
     [java] *** benchmarks.instrumented.java15.util.Collections$CheckedSortedSet.comparator
     [java] *** spec.reporter.GraphImage.make
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.containsValue
     [java] *** benchmarks.instrumented.java15.util.TreeMap.keySet
     [java] *** benchmarks.instrumented.java.util.BitSet.bitCount
     [java] *** spec.jbb.infra.Util.TransactionLogBuffer.validate
     [java] *** spec.reporter.ReportProps.get
     [java] *** benchmarks.instrumented.java15.util.Hashtable$ValueCollection.contains
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.put
     [java] *** benchmarks.instrumented.java15.util.BitSet.or
     [java] *** net.sf.cache4j.impl.BlockingCache.tmapPut
     [java] *** benchmarks.instrumented.java.util.Timer.scheduleAtFixedRate
     [java] *** mergesort.MSort.Sorting
     [java] *** benchmarks.instrumented.java.util.ResourceBundle$1.run
     [java] *** benchmarks.dstest.TreeSetTest.<init>
     [java] *** benchmarks.jpf_test_cases.replicatedcasestudies.Vector.removeAllElements
     [java] *** net.sf.cache4j.test.BlockingCacheTest.destroy
     [java] *** benchmarks.instrumented.java15.util.Collections$SynchronizedList.addAll
     [java] *** spec.jbb.Company.getMaxDistrictsPerWarehouse
     [java] *** benchmarks.moldyn.mdRunner.run0
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.isEmpty
     [java] *** benchmarks.instrumented.java.util.ResourceBundle.getString
     [java] *** benchmarks.instrumented.java15.lang.Math.max
     [java] *** spec.jbb.District.removeOldOrders
     [java] *** spec.jbb.History.buildData
     [java] *** benchmarks.dstest.SetDeadlockTest.testTreeSet
     [java] *** benchmarks.montecarlo.ToResult.get_expectedReturnRate
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap.hashCode
     [java] *** benchmarks.instrumented.java15.util.IdentityHashMap$EntrySet.size
     [java] *** spec.jbb.CustomerReportTransaction.init
     [java] *** benchmarks.instrumented.java.util.Vector.hashCode
     [java] *** benchmarks.instrumented.java.util.Collections$UnmodifiableMap.keySet
     [java] *** spec.jbb.JBButil.create_random_customer_id
     [java] *** benchmarks.dstest.LinkedHashMapDeadlockTest.main
     [java] *** benchmarks.instrumented.java.util.StringTokenizer.<init>
     [java] *** benchmarks.raytracer.RayTracer.setScene
     [java] *** spec.jbb.JBBmain.initApplicationLogging
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap$KeySet.contains
     [java] *** net.sf.cache4j.impl.SynchronizedCache$CacheInfoImpl.incRemove
     [java] *** benchmarks.instrumented.java15.util.Collections$UnmodifiableList$1.previousIndex
     [java] *** benchmarks.instrumented.java.util.Collections$EmptyMap.keySet
     [java] *** net.sf.cache4j.impl.Configurator.getTimeLong
     [java] *** benchmarks.instrumented.java.util.Collections$SingletonList.size
     [java] *** benchmarks.instrumented.java.util.IdentityHashMap.resize
buggy-monitor:
     [java] xx
     [java] Monitoring time: 40 ms
     [java] Generated test cases go to: /home/lpxz/eclipse/workspace/pecan/pecan-replayer/src/replaydriver/ReplayDriver.java
     [java] package replaydriver;
     [java] // generated by CLAP on Mon Sep 05 17:05:32 HKT 2011
     [java] // Created for XXX JVM: 11.0-b15
     [java] import edu.hkust.clap.tracer.*;
     [java] import edu.hkust.clap.replayer.*;
     [java] public class ReplayDriver {
     [java] 	public static void setUp(String[] args) throws Exception {
     [java] 		TraceReader.setFileIndex(args);
     [java] 		TraceReader.readTrace(1,"/home/lpxz/eclipse/workspace/pecan/pecan-replayer/tmp/Clap31878_monitordata.trace.gz");
     [java] 		TraceReader.readTrace(2,"/home/lpxz/eclipse/workspace/pecan/pecan-replayer/tmp/Clap31878_threadNameToIdMap.trace.gz");
     [java] 	}
     [java] 	public static void main(String[] args) throws Throwable {
     [java] 		setUp(args);
     [java] 		new Thread("clap-main"){
     [java] 			public void run(){
     [java] 				// load arguments
     [java] 				String[] mainargs = {};
     [java] 				try {
     [java] 					benchmarks.dstest.MTLinkedListInfiniteLoop.main(mainargs);
     [java] 				} catch (Throwable e) {
     [java] 					e.printStackTrace();
     [java] 				}
     [java] 			}
     [java] 		}.start();
     [java] 		(new Scheduler()).start();
     [java] 		//WAIT FOR 1 MINUTE TO STOP REPLAY
     [java] 		//Thread.currentThread().sleep(60000);
     [java] 	}
     [java] }
     [java] Save monitordata to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/tmp/trace
EngineMain:
     [java] --------------------------------------
     [java] *** Violation Patterns [ID - Memory Location - Line Number - Thread - Access Type] ***
     [java] -------------------------------------
     [java] Number of Threads: 3
     [java] Number of Shared Variables: 6
     [java] Number of Lock Nodes: 12
     [java] Number of Message Nodes: 0
     [java] Number of Non-Method Entry/Exit Nodes: 79
     [java] Number of Read/Write Nodes: 67
     [java] Number of Total Nodes: 215
     [java] Number of Races: 0
     [java] Number of Atomicity Violations: 7
     [java] Number of ASVs: 0
EngineMain2:
     [java] Remeber to set the SootAgent.origAnalyzedFolder (the original one, not sootified), I need the lineNO!
     [java] pattern: 1
     [java] *** AV-I --- "benchmarks.instrumented.java.util.LinkedList$Entry.next" --- 43 466 9 READ msig:<benchmarks.instrumented.java.util.LinkedList$ListItr: void <init>(benchmarks.instrumented.java.util.LinkedList,int)> jcode:$i2 = r1.<benchmarks.instrumented.java.util.LinkedList: int modCount> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.<init>(LinkedList.java:459)
     [java] benchmarks.instrumented.java.util.LinkedList.listIterator(AbstractList.java:348)
     [java] benchmarks.instrumented.java.util.AbstractList.listIterator(AbstractSequentialList.java:249)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.iterator(Collections.java:1555)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.iterator(AbstractCollection.java:283)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  * 75 285 10 WRITE msig:<benchmarks.instrumented.java.util.LinkedList: void clear()> jcode:r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i2 ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  * 59 551 9 READ msig:<benchmarks.instrumented.java.util.LinkedList$ListItr: void checkForComodification()> jcode:$i1 = $r2.<benchmarks.instrumented.java.util.LinkedList: int modCount> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:488)
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.next(AbstractCollection.java:285)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  ***
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] I am 2.4 vertsion
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] pattern: 2
     [java] *** AV-I --- "benchmarks.instrumented.java.util.LinkedList$Entry.next" --- 43 466 9 READ msig:<benchmarks.instrumented.java.util.LinkedList$ListItr: void <init>(benchmarks.instrumented.java.util.LinkedList,int)> jcode:$i2 = r1.<benchmarks.instrumented.java.util.LinkedList: int modCount> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.<init>(LinkedList.java:459)
     [java] benchmarks.instrumented.java.util.LinkedList.listIterator(AbstractList.java:348)
     [java] benchmarks.instrumented.java.util.AbstractList.listIterator(AbstractSequentialList.java:249)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.iterator(Collections.java:1555)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.iterator(AbstractCollection.java:283)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  * 40 573 1 WRITE msig:<benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)> jcode:r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i4 ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.addBefore(LinkedList.java:196)
     [java] benchmarks.instrumented.java.util.LinkedList.add(Collections.java:1559)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add(MTLinkedListInfiniteLoop.java:39)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java]  * 59 551 9 READ msig:<benchmarks.instrumented.java.util.LinkedList$ListItr: void checkForComodification()> jcode:$i1 = $r2.<benchmarks.instrumented.java.util.LinkedList: int modCount> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:488)
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.next(AbstractCollection.java:285)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  ***
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] pattern: 3
     [java] *** AV-I --- "benchmarks.instrumented.java.util.LinkedList$Entry.next" --- 43 466 9 READ msig:<benchmarks.instrumented.java.util.LinkedList$ListItr: void <init>(benchmarks.instrumented.java.util.LinkedList,int)> jcode:$i2 = r1.<benchmarks.instrumented.java.util.LinkedList: int modCount> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.<init>(LinkedList.java:459)
     [java] benchmarks.instrumented.java.util.LinkedList.listIterator(AbstractList.java:348)
     [java] benchmarks.instrumented.java.util.AbstractList.listIterator(AbstractSequentialList.java:249)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.iterator(Collections.java:1555)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.iterator(AbstractCollection.java:283)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  * 10 698 1 WRITE msig:<benchmarks.instrumented.java.util.AbstractList: void <init>()> jcode:r0.<benchmarks.instrumented.java.util.AbstractList: int modCount> = 0 ctxt:
     [java] benchmarks.instrumented.java.util.AbstractList.<init>(AbstractSequentialList.java:57)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.<init>(LinkedList.java:80)
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java]  * 59 551 9 READ msig:<benchmarks.instrumented.java.util.LinkedList$ListItr: void checkForComodification()> jcode:$i1 = $r2.<benchmarks.instrumented.java.util.LinkedList: int modCount> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:488)
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.next(AbstractCollection.java:285)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  ***
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] pattern: 4
     [java] pattern: 5
     [java] *** AV-I --- "benchmarks.instrumented.java.util.LinkedList$Entry.next" --- 74 285 10 READ msig:<benchmarks.instrumented.java.util.LinkedList: void clear()> jcode:$i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  * 10 698 1 WRITE msig:<benchmarks.instrumented.java.util.AbstractList: void <init>()> jcode:r0.<benchmarks.instrumented.java.util.AbstractList: int modCount> = 0 ctxt:
     [java] benchmarks.instrumented.java.util.AbstractList.<init>(AbstractSequentialList.java:57)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.<init>(LinkedList.java:80)
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java]  * 75 285 10 WRITE msig:<benchmarks.instrumented.java.util.LinkedList: void clear()> jcode:r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i2 ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  ***
     [java] *** AV-I --- "benchmarks.instrumented.java.util.Collections$SingletonMap.entrySet" --- 44 75 9 READ msig:<benchmarks.instrumented.java.util.LinkedList: int access$1(benchmarks.instrumented.java.util.LinkedList)> jcode:i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int size> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.access$1(LinkedList.java:469)
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.<init>(LinkedList.java:459)
     [java] benchmarks.instrumented.java.util.LinkedList.listIterator(AbstractList.java:348)
     [java] benchmarks.instrumented.java.util.AbstractList.listIterator(AbstractSequentialList.java:249)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.iterator(Collections.java:1555)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.iterator(AbstractCollection.java:283)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  * 13 75 1 WRITE msig:<benchmarks.instrumented.java.util.LinkedList: void <init>()> jcode:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java]  * 71 75 9 READ msig:<benchmarks.instrumented.java.util.LinkedList: int access$1(benchmarks.instrumented.java.util.LinkedList)> jcode:i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int size> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.access$1(LinkedList.java:484)
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.hasNext(AbstractCollection.java:284)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  ***
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] pattern: 6
     [java] *** AV-I --- "benchmarks.instrumented.java.util.Collections$SingletonMap.entrySet" --- 44 75 9 READ msig:<benchmarks.instrumented.java.util.LinkedList: int access$1(benchmarks.instrumented.java.util.LinkedList)> jcode:i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int size> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.access$1(LinkedList.java:469)
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.<init>(LinkedList.java:459)
     [java] benchmarks.instrumented.java.util.LinkedList.listIterator(AbstractList.java:348)
     [java] benchmarks.instrumented.java.util.AbstractList.listIterator(AbstractSequentialList.java:249)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.iterator(Collections.java:1555)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.iterator(AbstractCollection.java:283)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  * 78 287 10 WRITE msig:<benchmarks.instrumented.java.util.LinkedList: void clear()> jcode:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  * 71 75 9 READ msig:<benchmarks.instrumented.java.util.LinkedList: int access$1(benchmarks.instrumented.java.util.LinkedList)> jcode:i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int size> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.access$1(LinkedList.java:484)
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.hasNext(AbstractCollection.java:284)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  ***
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] pattern: 7
     [java] *** AV-I --- "benchmarks.instrumented.java.util.Collections$SingletonMap.entrySet" --- 44 75 9 READ msig:<benchmarks.instrumented.java.util.LinkedList: int access$1(benchmarks.instrumented.java.util.LinkedList)> jcode:i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int size> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.access$1(LinkedList.java:469)
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.<init>(LinkedList.java:459)
     [java] benchmarks.instrumented.java.util.LinkedList.listIterator(AbstractList.java:348)
     [java] benchmarks.instrumented.java.util.AbstractList.listIterator(AbstractSequentialList.java:249)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.iterator(Collections.java:1555)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.iterator(AbstractCollection.java:283)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  * 38 572 1 WRITE msig:<benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)> jcode:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = $i2 ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.addBefore(LinkedList.java:196)
     [java] benchmarks.instrumented.java.util.LinkedList.add(Collections.java:1559)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add(MTLinkedListInfiniteLoop.java:39)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java]  * 71 75 9 READ msig:<benchmarks.instrumented.java.util.LinkedList: int access$1(benchmarks.instrumented.java.util.LinkedList)> jcode:i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int size> ctxt:
     [java] benchmarks.instrumented.java.util.LinkedList.access$1(LinkedList.java:484)
     [java] benchmarks.instrumented.java.util.LinkedList$ListItr.hasNext(AbstractCollection.java:284)
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java]  ***
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
buggy-monitor:
     [java] ===========================================
     [java] Peng's:
     [java] set the main class and the analyzedFolder in SootAgent4Fixing
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] I am 2.4 vertsion
     [java] before rInPC reduction:7
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i2 285
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i4 573
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.addBefore(LinkedList.java:196)
     [java] benchmarks.instrumented.java.util.LinkedList.add(Collections.java:1559)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add(MTLinkedListInfiniteLoop.java:39)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.AbstractList: int modCount> = 0 698
     [java] msig:<benchmarks.instrumented.java.util.AbstractList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractList.<init>(AbstractSequentialList.java:57)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.<init>(LinkedList.java:80)
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: $i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> 285
     [java] !!!canc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i2 285
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.AbstractList: int modCount> = 0 698
     [java] msig:<benchmarks.instrumented.java.util.AbstractList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractList.<init>(AbstractSequentialList.java:57)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.<init>(LinkedList.java:80)
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 75
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 287
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = $i2 572
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.addBefore(LinkedList.java:196)
     [java] benchmarks.instrumented.java.util.LinkedList.add(Collections.java:1559)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add(MTLinkedListInfiniteLoop.java:39)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] petri net size:336
     [java] after rInPC reduction:7
     [java] before subsume reduction:7
     [java] after subsume reduction:7
     [java] 7
     [java] [Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
     [java] [Spark] Pointer Assignment Graph in 0.7 seconds.
     [java] [Spark] Type masks in 0.6 seconds.
     [java] [Spark] Pointer Graph simplified in 0.0 seconds.
     [java] [Spark] Propagation in 31.9 seconds.
     [java] [Spark] Solution found in 31.9 seconds.
     [java] bad guys before applying locking:0
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i1 
     [java] in <benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i3 
     [java] in <benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 
     [java] in <benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = $i1 
     [java] in <benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>->|
     [java] time of fixing av:3
     [java] time of fixing deadlock: 32
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractSequentialList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Iterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/ListIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/NoSuchElementException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/List.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/RandomAccess.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/SubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractList$Itr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/RandomAccessSubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/SubList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/ConcurrentModificationException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/LinkedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/LinkedList$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/LinkedList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/dstest/MTLinkedListInfiniteLoop.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Random.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Set.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Map.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Comparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/SortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/SortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$CopiesList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SingletonSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$EmptySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$EmptyList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$ReverseComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SingletonMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SingletonList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Arrays.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$EmptyMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SingletonSet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$EmptySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Map$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$SingletonMap$ImmutableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Arrays$ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractMap$SimpleEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractMap$1$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/benchmarks/instrumented/java/util/AbstractMap$2$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/pengSootOutput/AVfix/debug/Chocalate.class
     [java] JIN's:
     [java] set the main class and the analyzedFolder in SootAgent4Fixing
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] I am 2.4 vertsion
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] before rInPC reduction:7
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i2 285
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i4 573
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.addBefore(LinkedList.java:196)
     [java] benchmarks.instrumented.java.util.LinkedList.add(Collections.java:1559)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add(MTLinkedListInfiniteLoop.java:39)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.AbstractList: int modCount> = 0 698
     [java] msig:<benchmarks.instrumented.java.util.AbstractList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractList.<init>(AbstractSequentialList.java:57)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.<init>(LinkedList.java:80)
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: $i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> 285
     [java] !!!canc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i2 285
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.AbstractList: int modCount> = 0 698
     [java] msig:<benchmarks.instrumented.java.util.AbstractList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractList.<init>(AbstractSequentialList.java:57)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.<init>(LinkedList.java:80)
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 75
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 287
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = $i2 572
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.addBefore(LinkedList.java:196)
     [java] benchmarks.instrumented.java.util.LinkedList.add(Collections.java:1559)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add(MTLinkedListInfiniteLoop.java:39)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] petri net size:336
     [java] after rInPC reduction:7
     [java] before subsume reduction:7
     [java] after subsume reduction:7
     [java] [Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
     [java] [Spark] Pointer Assignment Graph in 0.8 seconds.
     [java] [Spark] Type masks in 0.6 seconds.
     [java] [Spark] Pointer Graph simplified in 0.0 seconds.
     [java] [Spark] Propagation in 32.2 seconds.
     [java] [Spark] Solution found in 32.2 seconds.
     [java] bad guys before applying locking:0
     [java] before merging:7
     [java] after merging, I have 1 super bugs to fix after merging
     [java] mergedbug 633152966 contains N components: 7
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i3 
     [java] in <benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = $i1 
     [java] in <benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 
     [java] in <benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] time of fixing AV:4
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractSequentialList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Iterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/ListIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/NoSuchElementException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/List.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/RandomAccess.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/SubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractList$Itr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/RandomAccessSubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/SubList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/ConcurrentModificationException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/LinkedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/LinkedList$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/LinkedList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/dstest/MTLinkedListInfiniteLoop.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Random.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Set.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Map.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Comparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/SortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/SortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$CopiesList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SingletonSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$EmptySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$EmptyList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$ReverseComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SingletonMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SingletonList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Arrays.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$EmptyMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SingletonSet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$EmptySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Map$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$SingletonMap$ImmutableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Arrays$ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractMap$SimpleEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractMap$1$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/benchmarks/instrumented/java/util/AbstractMap$2$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/jinSootOutput/AVfix/debug/Chocalate.class
     [java] ===========================================
     [java] NaiveD:
     [java] set the main class and the analyzedFolder in SootAgent4Fixing
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] I am 2.4 vertsion
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i2 285
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i4 573
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.addBefore(LinkedList.java:196)
     [java] benchmarks.instrumented.java.util.LinkedList.add(Collections.java:1559)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add(MTLinkedListInfiniteLoop.java:39)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.AbstractList: int modCount> = 0 698
     [java] msig:<benchmarks.instrumented.java.util.AbstractList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractList.<init>(AbstractSequentialList.java:57)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.<init>(LinkedList.java:80)
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: $i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> 285
     [java] !!!canc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i2 285
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.AbstractList: int modCount> = 0 698
     [java] msig:<benchmarks.instrumented.java.util.AbstractList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractList.<init>(AbstractSequentialList.java:57)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.<init>(LinkedList.java:80)
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 75
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] 7
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 287
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = $i2 572
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.addBefore(LinkedList.java:196)
     [java] benchmarks.instrumented.java.util.LinkedList.add(Collections.java:1559)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add(MTLinkedListInfiniteLoop.java:39)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] [Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
     [java] [Spark] Pointer Assignment Graph in 0.7 seconds.
     [java] [Spark] Type masks in 0.6 seconds.
     [java] [Spark] Pointer Graph simplified in 0.0 seconds.
     [java] [Spark] Propagation in 32.3 seconds.
     [java] [Spark] Solution found in 32.3 seconds.
     [java] bad guys before applying locking:0
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i1 
     [java] in <benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i3 
     [java] in <benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 
     [java] in <benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = $i1 
     [java] in <benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>->|
     [java] time of fixing av:4
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractSequentialList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Iterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/ListIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/NoSuchElementException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/List.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/RandomAccess.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/SubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractList$Itr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/RandomAccessSubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/SubList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/ConcurrentModificationException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/LinkedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/LinkedList$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/LinkedList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/dstest/MTLinkedListInfiniteLoop.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Random.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Set.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Map.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Comparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/SortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/SortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$CopiesList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SingletonSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$EmptySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$EmptyList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$ReverseComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SingletonMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SingletonList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Arrays.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$EmptyMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SingletonSet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$EmptySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Map$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$SingletonMap$ImmutableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Arrays$ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractMap$SimpleEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractMap$1$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/benchmarks/instrumented/java/util/AbstractMap$2$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveDSootOutput/AVfix/debug/Chocalate.class
     [java] ===========================================
     [java] NaiveS:
     [java] set the main class and the analyzedFolder in SootAgent4Fixing
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] I am 2.4 vertsion
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i2 285
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i4 573
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.addBefore(LinkedList.java:196)
     [java] benchmarks.instrumented.java.util.LinkedList.add(Collections.java:1559)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add(MTLinkedListInfiniteLoop.java:39)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $r5 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: java.lang.Object next()>() 285
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.AbstractList: int modCount> = 0 698
     [java] msig:<benchmarks.instrumented.java.util.AbstractList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractList.<init>(AbstractSequentialList.java:57)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.<init>(LinkedList.java:80)
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: $i1 = r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> 285
     [java] !!!canc: r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i2 285
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.AbstractList: int modCount> = 0 698
     [java] msig:<benchmarks.instrumented.java.util.AbstractList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractList.<init>(AbstractSequentialList.java:57)
     [java] benchmarks.instrumented.java.util.AbstractSequentialList.<init>(LinkedList.java:80)
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 75
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void <init>()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.<init>(MTLinkedListInfiniteLoop.java:37)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 287
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: void clear()>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.clear(Collections.java:1578)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.clear(MTLinkedListInfiniteLoop.java:30)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!panc: r2 = interfaceinvoke r1.<benchmarks.instrumented.java.util.Collection: benchmarks.instrumented.java.util.Iterator iterator()>() 283
     [java] !!!canc: $z1 = interfaceinvoke r2.<benchmarks.instrumented.java.util.Iterator: boolean hasNext()>() 284
     [java] msig:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.AbstractCollection.containsAll(Collections.java:1566)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.containsAll(MTLinkedListInfiniteLoop.java:27)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.run(-1)
     [java] !!!ranc: r0.<benchmarks.instrumented.java.util.LinkedList: int size> = $i2 572
     [java] msig:<benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>
     [java] ctxts:
     [java] benchmarks.instrumented.java.util.LinkedList.addBefore(LinkedList.java:196)
     [java] benchmarks.instrumented.java.util.LinkedList.add(Collections.java:1559)
     [java] benchmarks.instrumented.java.util.Collections$SynchronizedCollection.add(MTLinkedListInfiniteLoop.java:39)
     [java] benchmarks.dstest.MTLinkedListInfiniteLoop.main(-1)
     [java] 7
     [java] [Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
     [java] [Spark] Pointer Assignment Graph in 0.7 seconds.
     [java] [Spark] Type masks in 0.6 seconds.
     [java] [Spark] Pointer Graph simplified in 0.0 seconds.
     [java] [Spark] Propagation in 32.8 seconds.
     [java] [Spark] Solution found in 32.8 seconds.
     [java] bad guys before applying locking:0
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i1 
     [java] in <benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int modCount> = $i3 
     [java] in <benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = 0 
     [java] in <benchmarks.instrumented.java.util.LinkedList: void clear()>->|
     [java] locking the whole method:<benchmarks.instrumented.java.util.AbstractCollection: boolean containsAll(benchmarks.instrumented.java.util.Collection)>->|
     [java] locking:r0.<benchmarks.instrumented.java.util.LinkedList: int size> = $i1 
     [java] in <benchmarks.instrumented.java.util.LinkedList: benchmarks.instrumented.java.util.LinkedList$Entry addBefore(java.lang.Object,benchmarks.instrumented.java.util.LinkedList$Entry)>->|
     [java] time of fixing av:4
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractSequentialList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Iterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/ListIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/NoSuchElementException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/List.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/RandomAccess.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/SubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractList$Itr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/RandomAccessSubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/SubList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/ConcurrentModificationException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/LinkedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/LinkedList$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/LinkedList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/dstest/MTLinkedListInfiniteLoop.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Random.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Set.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Map.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Comparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/SortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/SortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$CopiesList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SingletonSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$EmptySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$EmptyList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$ReverseComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SingletonMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SingletonList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Arrays.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$EmptyMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SingletonSet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$EmptySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Map$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$SingletonMap$ImmutableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Arrays$ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractMap$SimpleEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractMap$1$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/benchmarks/instrumented/java/util/AbstractMap$2$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/naiveSSootOutput/AVfix/debug/Chocalate.class
     [java] ===========================================
     [java] Original:
     [java] set the main class and the analyzedFolder in SootAgent4Fixing
     [java] Warning: Phase wjtp.tnlp is not a standard Soot phase listed in XML files.
     [java] I am 2.4 vertsion
     [java] [Call Graph] For information on where the call graph may be incomplete, use the verbose option to the cg phase.
     [java] [Spark] Pointer Assignment Graph in 0.7 seconds.
     [java] [Spark] Type masks in 0.6 seconds.
     [java] [Spark] Pointer Graph simplified in 0.0 seconds.
     [java] [Spark] Propagation in 32.5 seconds.
     [java] [Spark] Solution found in 32.6 seconds.
     [java] bad guys before applying locking:0
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractSequentialList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Iterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/ListIterator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/NoSuchElementException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/List.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/RandomAccess.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/SubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractList$Itr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/RandomAccessSubList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/SubList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/ConcurrentModificationException.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/LinkedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/LinkedList$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/LinkedList$ListItr.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/dstest/MTLinkedListInfiniteLoop.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Random.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Set.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Map.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Comparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/SortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/SortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$CopiesList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SingletonSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$EmptySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$EmptyList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSortedSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$ReverseComparator.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SingletonMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SingletonList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Arrays.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$EmptyMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableSortedMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SynchronizedRandomAccessList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractSet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SingletonSet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$EmptySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Map$Entry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableCollection$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractMap.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$SingletonMap$ImmutableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Arrays$ArrayList.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableList$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractMap$SimpleEntry.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractMap$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractMap$2.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractMap$1$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/benchmarks/instrumented/java/util/AbstractMap$2$1.class
     [java] Writing to /home/lpxz/eclipse/workspace/pecan/pecan-monitor/origSootOutput/AVfix/debug/Chocalate.class
    
orig: 10
Peng:
11
Jin: 12/13
NaiveD:15
naiveS:
13


